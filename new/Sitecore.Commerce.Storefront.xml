<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Sitecore.Reference.Storefront.Powered.by.CommerceServer</name>
    </assembly>
    <members>
        <member name="T:Sitecore.Reference.Storefront.BundleConfig">
            <summary>
            Used to register all bundles
            </summary>
        </member>
        <member name="M:Sitecore.Reference.Storefront.BundleConfig.RegisterBundles(System.Web.Optimization.BundleCollection)">
            <summary>
            Called to register any bundles
            </summary>
            <param name="bundles">The bundles collection to add to</param>
        </member>
        <member name="T:Sitecore.Reference.Storefront.FilterConfig">
            <summary>
            Used to register all filters
            </summary>
        </member>
        <member name="M:Sitecore.Reference.Storefront.FilterConfig.RegisterGlobalFilters(System.Web.Mvc.GlobalFilterCollection)">
            <summary>
            Called to register any filters
            </summary>
            <param name="filters">The filter collection to add to</param>
        </member>
        <member name="T:Sitecore.Reference.Storefront.RouteConfig">
            <summary>
            Used to register all routes
            </summary>
        </member>
        <member name="M:Sitecore.Reference.Storefront.RouteConfig.RegisterRoutes(System.Web.Routing.RouteCollection)">
            <summary>
             Called to register any routes
            </summary>
            <param name="routes">The route collection to add to</param>
        </member>
        <member name="T:Sitecore.Reference.Storefront.WebApiConfig">
            <summary>
            Used to register all web api routes
            </summary>
        </member>
        <member name="M:Sitecore.Reference.Storefront.WebApiConfig.Register(System.Web.Http.HttpConfiguration)">
            <summary>
            Called to register any web api routes
            </summary>
            <param name="config">The config to add the routes to</param>
        </member>
        <member name="T:Sitecore.Reference.Storefront.WindsorConfig">
            <summary>
            Configures Castle Windsor IoC container.
            </summary>
        </member>
        <member name="F:Sitecore.Reference.Storefront.WindsorConfig.Container">
            <summary>
            The container.
            </summary>
        </member>
        <member name="M:Sitecore.Reference.Storefront.WindsorConfig.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Sitecore.Reference.Storefront.WindsorConfig"/> class. 
            </summary>
        </member>
        <member name="M:Sitecore.Reference.Storefront.WindsorConfig.ConfigureContainer">
            <summary>
            Configures the container.
            </summary>
        </member>
        <member name="M:Sitecore.Reference.Storefront.WindsorConfig.ReleaseContainer">
            <summary>
            Releases the container.
            </summary>
        </member>
        <member name="T:Sitecore.Reference.Storefront.Connect.Pipelines.Arguments.GetProductPricesRequest">
            <summary>
            The get product prices request.
            </summary>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Connect.Pipelines.Arguments.GetProductPricesRequest.#ctor(System.String,System.String,System.String[])">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Reference.Storefront.Connect.Pipelines.Arguments.GetProductPricesRequest"/> class.
            </summary>
            <param name="catalogName">Name of the catalog.</param>
            <param name="productId">The product identifier.</param>
            <param name="priceTypeIds">The price type ids.</param>
        </member>
        <member name="P:Sitecore.Reference.Storefront.Connect.Pipelines.Arguments.GetProductPricesRequest.ProductCatalogName">
            <summary>
            Gets or sets the name of the product catalog.
            </summary>       
        </member>
        <member name="P:Sitecore.Reference.Storefront.Connect.Pipelines.Arguments.GetProductPricesRequest.IncludeVariantPrices">
            <summary>
            Gets or sets a value indicating whether [include variant prices].
            </summary>        
        </member>
        <member name="T:Sitecore.Reference.Storefront.Connect.Pipelines.Arguments.TranslateCommerceAddressProfileToEntityRequest">
            <summary>
            Defines the TranslateCommerceAddressProfileToEntityRequest class.
            </summary>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Connect.Pipelines.Arguments.TranslateCommerceAddressProfileToEntityRequest.#ctor(CommerceServer.Core.Runtime.Profiles.Profile,Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceParty)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Reference.Storefront.Connect.Pipelines.Arguments.TranslateCommerceAddressProfileToEntityRequest"/> class.
            </summary>
            <param name="sourceProfile">The source profile.</param>
            <param name="destinationParty">The destination party.</param>
        </member>
        <member name="P:Sitecore.Reference.Storefront.Connect.Pipelines.Arguments.TranslateCommerceAddressProfileToEntityRequest.SourceProfile">
            <summary>
            Gets or sets the source profile.
            </summary>
            <value>
            The source profile.
            </value>
        </member>
        <member name="P:Sitecore.Reference.Storefront.Connect.Pipelines.Arguments.TranslateCommerceAddressProfileToEntityRequest.DestinationParty">
            <summary>
            Gets or sets the destination party.
            </summary>
            <value>
            The destination party.
            </value>
        </member>
        <member name="T:Sitecore.Reference.Storefront.Connect.Pipelines.Arguments.TranslateEntityToCommerceAddressProfileRequest">
            <summary>
            Defines the TranslateEntityToCommerceAddressProfileRequest class.
            </summary>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Connect.Pipelines.Arguments.TranslateEntityToCommerceAddressProfileRequest.#ctor(Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceParty,CommerceServer.Core.Runtime.Profiles.Profile)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Reference.Storefront.Connect.Pipelines.Arguments.TranslateEntityToCommerceAddressProfileRequest"/> class.
            </summary>
            <param name="sourceParty">The source party.</param>
            <param name="destinationProfile">The destination profile.</param>
        </member>
        <member name="P:Sitecore.Reference.Storefront.Connect.Pipelines.Arguments.TranslateEntityToCommerceAddressProfileRequest.DestinationProfile">
            <summary>
            Gets or sets the destination profile.
            </summary>
            <value>
            The destination profile.
            </value>
        </member>
        <member name="P:Sitecore.Reference.Storefront.Connect.Pipelines.Arguments.TranslateEntityToCommerceAddressProfileRequest.SourceParty">
            <summary>
            Gets or sets the source party.
            </summary>
            <value>
            The source party.
            </value>
        </member>
        <member name="T:Sitecore.Reference.Storefront.Connect.Pipelines.Carts.RunPipeline">
            <summary>
            Defines the RunPipeline class.
            </summary>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Connect.Pipelines.Carts.RunPipeline.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Reference.Storefront.Connect.Pipelines.Carts.RunPipeline"/> class.
            </summary>
            <param name="pipelineName">Name of the pipeline.</param>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Connect.Pipelines.Carts.RunPipeline.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Reference.Storefront.Connect.Pipelines.Carts.RunTotalPipeline">
            <summary>
            Defines the RunTotalPipeline class.
            </summary>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Connect.Pipelines.Carts.RunTotalPipeline.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Reference.Storefront.Connect.Pipelines.Carts.RunTotalPipeline"/> class.
            </summary>
            <param name="pipelineName">Name of the pipeline.</param>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Connect.Pipelines.Carts.RunTotalPipeline.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Connect.Pipelines.Carts.RunTotalPipeline.CanRunPipeline(CommerceServer.Core.Runtime.Orders.Basket)">
            <summary>
            Determines whether this instance [can run pipeline] the specified basket.
            </summary>
            <param name="basket">The basket.</param>
            <returns>True if the piepline can be executed.  Otherwise false.</returns>
        </member>
        <member name="T:Sitecore.Reference.Storefront.Connect.Pipelines.Orders.SubmitVisitorOrder">
            <summary>
            SubmitVisitorOrder pipeline processor
            </summary>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Connect.Pipelines.Orders.SubmitVisitorOrder.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Reference.Storefront.Connect.Pipelines.Orders.TranslateShipmentToEntity">
            <summary>
            TranslateShipmentToEntity pipeline processor
            </summary>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Connect.Pipelines.Orders.TranslateShipmentToEntity.Translate(Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateShipmentToEntityRequest,CommerceServer.Core.Runtime.Orders.Shipment,Sitecore.Commerce.Entities.Carts.ShippingInfo)">
            <summary>
            Translates the specified request.
            </summary>
            <param name="request">The request.</param>
            <param name="sourceShipment">The source shipment.</param>
            <param name="destinationShippingInfo">The destination shipping information.</param>
        </member>
        <member name="T:Sitecore.Reference.Storefront.Connect.Pipelines.Orders.GetAvailableCountries">
            <summary>
            Defines the GetAvailableCountries class.
            </summary>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Connect.Pipelines.Orders.GetAvailableCountries.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Connect.Pipelines.Orders.GetAvailableCountries.GetCountryAndRegionItem">
            <summary>
            Gets the country and region item.
            </summary>
            <returns>The country and region item from Sitecore.</returns>
        </member>
        <member name="T:Sitecore.Reference.Storefront.Connect.Pipelines.Orders.GetAvailableRegions">
            <summary>
            Defines the GetAvailableRegions class.
            </summary>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Connect.Pipelines.Orders.GetAvailableRegions.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Connect.Pipelines.Orders.GetAvailableRegions.GetCountryAndRegionItem">
            <summary>
            Gets the country and region item.
            </summary>
            <returns>The country and region item from Sitecore.</returns>
        </member>
        <member name="T:Sitecore.Reference.Storefront.Connect.Pipelines.Prices.GetProductBulkPrices">
            <summary>
            Pipeline is used to get product bulk prices
            </summary>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Connect.Pipelines.Prices.GetProductBulkPrices.#ctor(Sitecore.Commerce.Entities.IEntityFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Reference.Storefront.Connect.Pipelines.Prices.GetProductBulkPrices"/> class.
            </summary>
            <param name="entityFactory">The entity factory.</param>
        </member>
        <member name="P:Sitecore.Reference.Storefront.Connect.Pipelines.Prices.GetProductBulkPrices.EntityFactory">
            <summary>
            Gets or sets the entity factory.
            </summary>
            <value>
            The entity factory.
            </value>
        </member>
        <member name="P:Sitecore.Reference.Storefront.Connect.Pipelines.Prices.GetProductBulkPrices.UseProductBasePriceAsVariantPrice">
            <summary>
            Gets or sets a value indicating whether to use the product base price as variant lowest price.
            </summary>
            <value>
            <c>true</c> if use product base price as variant lowest price; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Connect.Pipelines.Prices.GetProductBulkPrices.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Connect.Pipelines.Prices.GetProductBulkPrices.SetVariantPrices(CommerceServer.Core.Catalog.ProductFamily,Sitecore.Reference.Storefront.Connect.Models.ExtendedCommercePrice,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Sets the variant prices.
            </summary>
            <param name="productFamily">The product family.</param>
            <param name="extendedPrice">The extended price.</param>
            <param name="isLowestPriceVariantSpecified">if set to <c>true</c> the lowest priced variant adjusted price is returned.</param>
            <param name="isLowestPriceVariantListPriceSpecified">if set to <c>true</c> the lowest priced variant list price is returned.</param>
            <param name="isHighestPriceVariantSpecified">if set to <c>true</c> the highest priced variant adjusted price.</param>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Connect.Pipelines.Prices.GetProductBulkPrices.SetVariantPricesFromBaseProduct(CommerceServer.Core.Catalog.ProductFamily,Sitecore.Reference.Storefront.Connect.Models.ExtendedCommercePrice,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Sets the variant prices from base product.
            </summary>
            <param name="productFamily">The product family.</param>
            <param name="extendedPrice">The extended price.</param>
            <param name="isLowestPriceVariantSpecified">if set to <c>true</c> the lowest priced variant adjusted price is returned.</param>
            <param name="isLowestPriceVariantListPriceSpecified">if set to <c>true</c> the lowest priced variant list price is returned.</param>
            <param name="isHighestPriceVariantSpecified">if set to <c>true</c> the highest priced variant adjusted price.</param>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Connect.Pipelines.Prices.GetProductBulkPrices.SetVariantPricesFromProductVariants(CommerceServer.Core.Catalog.ProductFamily,Sitecore.Reference.Storefront.Connect.Models.ExtendedCommercePrice,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Sets the variant prices by looping through all of the variants.
            </summary>
            <param name="productFamily">The product family.</param>
            <param name="extendedPrice">The extended price.</param>
            <param name="isLowestPriceVariantSpecified">if set to <c>true</c> the lowest priced variant adjusted price is returned.</param>
            <param name="isLowestPriceVariantListPriceSpecified">if set to <c>true</c> the lowest priced variant list price is returned.</param>
            <param name="isHighestPriceVariantSpecified">if set to <c>true</c> the highest priced variant adjusted price.</param>
        </member>
        <member name="T:Sitecore.Reference.Storefront.Connect.Pipelines.Prices.GetProductBulkPricesFromIndex">
            <summary>
            Defines the GetProductBulkPricesFromIndex class.
            </summary>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Connect.Pipelines.Prices.GetProductBulkPricesFromIndex.#ctor(Sitecore.Commerce.Entities.IEntityFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Reference.Storefront.Connect.Pipelines.Prices.GetProductBulkPricesFromIndex"/> class.
            </summary>
            <param name="entityFactory">The entity factory.</param>
        </member>
        <member name="P:Sitecore.Reference.Storefront.Connect.Pipelines.Prices.GetProductBulkPricesFromIndex.EntityFactory">
            <summary>
            Gets or sets the entity factory.
            </summary>
            <value>
            The entity factory.
            </value>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Connect.Pipelines.Prices.GetProductBulkPricesFromIndex.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Connect.Pipelines.Prices.GetProductBulkPricesFromIndex.BuildProductIdListPredicate(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Builds the product identifier list predicate.
            </summary>
            <param name="productIdList">The product identifier list.</param>
            <returns>
            The search predicate ORing the product ids.
            </returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Connect.Pipelines.Prices.GetProductBulkPricesFromIndex.GetProductsFromIndex(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Gets the product information from the index file.
            </summary>
            <param name="catalogName">Name of the catalog.</param>
            <param name="productIdList">The product identifier list.</param>
            <returns>
            The found product document instance; Otherwise null.
            </returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Connect.Pipelines.Prices.GetProductBulkPricesFromIndex.SetVariantPricesFromProductVariants(Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceProductSearchResultItem,System.Collections.Generic.List{Sitecore.Reference.Storefront.Search.ComputedFields.VariantIndexInfo},Sitecore.Reference.Storefront.Connect.Models.ExtendedCommercePrice,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Sets the variant prices by looping through all of the variants returned by the index.
            </summary>
            <param name="productDocument">The product document.</param>
            <param name="variantInfoList">The variant information list.</param>
            <param name="extendedPrice">The extended price.</param>
            <param name="isLowestPriceVariantSpecified">if set to <c>true</c> the lowest priced variant adjusted price is returned.</param>
            <param name="isLowestPriceVariantListPriceSpecified">if set to <c>true</c> the lowest priced variant list price is returned.</param>
            <param name="isHighestPriceVariantSpecified">if set to <c>true</c> the highest priced variant adjusted price.</param>
        </member>
        <member name="T:Sitecore.Reference.Storefront.Connect.Pipelines.Prices.GetProductPrices">
            <summary>
            Pipeline is used to get product prices
            </summary>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Connect.Pipelines.Prices.GetProductPrices.#ctor(Sitecore.Commerce.Entities.IEntityFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Reference.Storefront.Connect.Pipelines.Prices.GetProductPrices"/> class.
            </summary>
            <param name="entityFactory">The entity factory.</param>
        </member>
        <member name="P:Sitecore.Reference.Storefront.Connect.Pipelines.Prices.GetProductPrices.EntityFactory">
            <summary>
            Gets or sets the entity factory.
            </summary>
            <value>
            The entity factory.
            </value>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Connect.Pipelines.Prices.GetProductPrices.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Reference.Storefront.Connect.Pipelines.Customers.AddParties">
            <summary>
            Defines the AddParties class.
            </summary>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Connect.Pipelines.Customers.AddParties.#ctor(Sitecore.Commerce.Entities.IEntityFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Reference.Storefront.Connect.Pipelines.Customers.AddParties"/> class.
            </summary>
            <param name="entityFactory">The entity factory.</param>
        </member>
        <member name="P:Sitecore.Reference.Storefront.Connect.Pipelines.Customers.AddParties.EntityFactory">
            <summary>
            Gets or sets the entity factory.
            </summary>
            <value>
            The entity factory.
            </value>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Connect.Pipelines.Customers.AddParties.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Connect.Pipelines.Customers.AddParties.ProcessCommerceParty(Sitecore.Commerce.Services.Customers.AddPartiesResult,CommerceServer.Core.Runtime.Profiles.Profile,Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceParty)">
            <summary>
            Processes the commerce party.
            </summary>
            <param name="result">The result.</param>
            <param name="customerProfile">The customer profile.</param>
            <param name="partyToAdd">The party to add.</param>
            <returns>Newly created party.</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Connect.Pipelines.Customers.AddParties.ProcessCustomParty(Sitecore.Commerce.Services.Customers.AddPartiesResult,CommerceServer.Core.Runtime.Profiles.Profile,Sitecore.Commerce.Entities.Party)">
            <summary>
            Processes the custom party.
            </summary>
            <param name="result">The result.</param>
            <param name="customerProfile">The customer profile.</param>
            <param name="party">The party.</param>
            <returns>Newly created party.</returns>
        </member>
        <member name="T:Sitecore.Reference.Storefront.Connect.Pipelines.Customers.CustomerPipelineProcessor">
            <summary>
            Defines the CustomerPipelineProcessor class.
            </summary>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Connect.Pipelines.Customers.CustomerPipelineProcessor.GetCommerceAddressProfile(System.String,CommerceServer.Core.Runtime.Profiles.Profile@)">
            <summary>
            Gets the commerce address profile.
            </summary>
            <param name="id">The identifier.</param>
            <param name="profile">The profile.</param>
            <returns>The service provider result.</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Connect.Pipelines.Customers.CustomerPipelineProcessor.GetCommerceUserProfile(System.String,CommerceServer.Core.Runtime.Profiles.Profile@)">
            <summary>
            Gets the commerce user profile.
            </summary>
            <param name="id">The identifier.</param>
            <param name="profile">The profile.</param>
            <returns>The service provider result.</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Connect.Pipelines.Customers.CustomerPipelineProcessor.CreateAddressProfile(System.String,CommerceServer.Core.Runtime.Profiles.Profile@)">
            <summary>
            Creates the address profile.
            </summary>
            <param name="id">The identifier.</param>
            <param name="profile">The profile.</param>
            <returns>The service provider result.</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Connect.Pipelines.Customers.CustomerPipelineProcessor.DeleteAddressCommerceProfile(System.String)">
            <summary>
            Deletes the address commerce profile.
            </summary>
            <param name="id">The identifier.</param>
            <returns>The service provider result.</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Connect.Pipelines.Customers.CustomerPipelineProcessor.GetCommerceProfile(System.String,System.String,CommerceServer.Core.Runtime.Profiles.Profile@)">
            <summary>
            Gets the commerce profile.
            </summary>
            <param name="id">The identifier.</param>
            <param name="profileName">Name of the profile.</param>
            <param name="profile">The profile.</param>
            <returns>The service provider result.</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Connect.Pipelines.Customers.CustomerPipelineProcessor.DeleteCommerceProfile(System.String,System.String)">
            <summary>
            Deletes the commerce profile.
            </summary>
            <param name="id">The identifier.</param>
            <param name="profileName">Name of the profile.</param>
            <returns>The service provider result.</returns>
        </member>
        <member name="T:Sitecore.Reference.Storefront.Connect.Pipelines.Customers.GetParties">
            <summary>
            Defines the GetParties class.
            </summary>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Connect.Pipelines.Customers.GetParties.#ctor(Sitecore.Commerce.Entities.IEntityFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Reference.Storefront.Connect.Pipelines.Customers.GetParties"/> class.
            </summary>
            <param name="entityFactory">The entity factory.</param>
        </member>
        <member name="P:Sitecore.Reference.Storefront.Connect.Pipelines.Customers.GetParties.EntityFactory">
            <summary>
            Gets or sets the entity factory.
            </summary>
            <value>
            The entity factory.
            </value>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Connect.Pipelines.Customers.GetParties.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Reference.Storefront.Connect.Pipelines.Customers.RemoveParties">
            <summary>
            Defines the RemoveParties class.
            </summary>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Connect.Pipelines.Customers.RemoveParties.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Reference.Storefront.Connect.Pipelines.Customers.TranslateCommerceAddressProfileToEntity">
            <summary>
            Defines the TranslateCommerceAddressProfileToEntity class.
            </summary>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Connect.Pipelines.Customers.TranslateCommerceAddressProfileToEntity.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Connect.Pipelines.Customers.TranslateCommerceAddressProfileToEntity.TranslateToCommerceParty(CommerceServer.Core.Runtime.Profiles.Profile,Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceParty)">
            <summary>
            Translates to commerce party.
            </summary>
            <param name="profile">The profile.</param>
            <param name="party">The party.</param>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Connect.Pipelines.Customers.TranslateCommerceAddressProfileToEntity.TranslateToCommercePartyCustomProperties(CommerceServer.Core.Runtime.Profiles.Profile,Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceParty)">
            <summary>
            Translates to commerce party custom properties.
            </summary>
            <param name="profile">The profile.</param>
            <param name="party">The party.</param>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Connect.Pipelines.Customers.TranslateCommerceAddressProfileToEntity.TranslateToCustomParty(CommerceServer.Core.Runtime.Profiles.Profile,Sitecore.Commerce.Entities.Party)">
            <summary>
            Translates to custom party.
            </summary>
            <param name="profile">The profile.</param>
            <param name="party">The party.</param>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Connect.Pipelines.Customers.TranslateCommerceAddressProfileToEntity.Get``1(CommerceServer.Core.Runtime.Profiles.Profile,System.String)">
            <summary>
            Gets the specified profile.
            </summary>
            <typeparam name="T">Type of the property in the Commerce Server profile object.</typeparam>
            <param name="profile">The profile.</param>
            <param name="propertyName">Name of the property.</param>
            <returns>
            The Commerce Server profile property value.
            </returns>
        </member>
        <member name="T:Sitecore.Reference.Storefront.Connect.Pipelines.Customers.TranslateEntityToCommerceAddressProfile">
            <summary>
            Defines the TranslateEntityToCommerceAddressProfile class.
            </summary>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Connect.Pipelines.Customers.TranslateEntityToCommerceAddressProfile.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Connect.Pipelines.Customers.TranslateEntityToCommerceAddressProfile.TranslateCommerceCustomerParty(Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceParty,CommerceServer.Core.Runtime.Profiles.Profile)">
            <summary>
            Translates the commerce customer party.
            </summary>
            <param name="party">The party.</param>
            <param name="profile">The profile.</param>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Connect.Pipelines.Customers.TranslateEntityToCommerceAddressProfile.TranslateCommerceCustomerPartyCustomProperties(Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceParty,CommerceServer.Core.Runtime.Profiles.Profile)">
            <summary>
            Translates the commerce customer party custom properties.
            </summary>
            <param name="party">The party.</param>
            <param name="profile">The profile.</param>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Connect.Pipelines.Customers.TranslateEntityToCommerceAddressProfile.TranslateCustomParty(Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceParty,CommerceServer.Core.Runtime.Profiles.Profile)">
            <summary>
            Translates the custom party.
            </summary>
            <param name="party">The party.</param>
            <param name="profile">The profile.</param>
        </member>
        <member name="T:Sitecore.Reference.Storefront.Connect.Pipelines.Customers.UpdateCustomer">
            <summary>
            Defines the UpdateCustomer class.
            </summary>
        </member>
        <member name="T:Sitecore.Reference.Storefront.Connect.Pipelines.Customers.UpdateParties">
            <summary>
            Defines the UpdateParties class.
            </summary>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Connect.Pipelines.Customers.UpdateParties.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Reference.Storefront.Connect.Pipelines.GetUser">
            <summary>
            Defines the GetUser class.
            </summary>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Connect.Pipelines.GetUser.#ctor(Sitecore.Commerce.Data.Customers.IUserRepository)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Reference.Storefront.Connect.Pipelines.GetUser"/> class.
            </summary>
            <param name="userRepository">The user repository.</param>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Connect.Pipelines.GetUser.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Connect.Pipelines.GetUser.UpdateCustomer(Sitecore.Commerce.Entities.Customers.CommerceUser,Sitecore.Security.UserProfile)">
            <summary>
            Updates the customer with some additional data.
            </summary>
            <param name="commerceUser">The commerce user to update.</param>
            <param name="userProfile">The user profile of the user.</param>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Connect.Pipelines.GetUser.GetUserProfile(System.String)">
            <summary>
            Gets the user profile from the external system.
            </summary>
            <param name="userName">The username of the profile to retrieve.</param>
            <returns>The profile of the user</returns>
        </member>
        <member name="T:Sitecore.Reference.Storefront.Connect.Pipelines.Payments.GetPaymentMethods">
            <summary>
            Defines the GetPaymentMethods class.
            </summary>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Connect.Pipelines.Payments.GetPaymentMethods.#ctor(Sitecore.Commerce.Entities.IEntityFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Reference.Storefront.Connect.Pipelines.Payments.GetPaymentMethods"/> class.
            </summary>
            <param name="entityFactory">The entity factory.</param>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Connect.Pipelines.Payments.GetPaymentMethods.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Connect.Pipelines.Payments.GetPaymentMethods.TranslatePaymentMethod(Sitecore.Data.Items.Item,Sitecore.Data.Items.Item,System.String,Sitecore.Commerce.Entities.Payments.PaymentMethod)">
            <summary>
            Translates the payment method from an item to a PaymentMethod clas..
            </summary>
            <param name="paymentOptionItem">The payment option item.</param>
            <param name="paymentMethodItem">The payment method item.</param>
            <param name="csMethodId">The cs method identifier.</param>
            <param name="paymentMethod">The payment method.</param>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Connect.Pipelines.Payments.GetPaymentMethods.GetPaymentOptionsItem">
            <summary>
            Gets the payment option item.
            </summary>
            <returns>Get the Payment Options item from Sitecore.</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Connect.Pipelines.Payments.GetPaymentMethods.GetPaymentOptionsTypesFolder">
            <summary>
            Gets the payment options types folder item.
            </summary>
            <returns>The payment option types folder item.</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Connect.Pipelines.Payments.GetPaymentMethods.GetShopName">
            <summary>
            Gets the name of the shop.
            </summary>
            <returns>Get the shop name.</returns>
        </member>
        <member name="T:Sitecore.Reference.Storefront.Connect.Pipelines.Payments.GetPaymentOptions">
            <summary>
            Defines the GetPaymentOptions class.
            </summary>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Connect.Pipelines.Payments.GetPaymentOptions.#ctor(Sitecore.Commerce.Entities.IEntityFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Reference.Storefront.Connect.Pipelines.Payments.GetPaymentOptions"/> class.
            </summary>
            <param name="entityFactory">The entity factory.</param>
        </member>
        <member name="P:Sitecore.Reference.Storefront.Connect.Pipelines.Payments.GetPaymentOptions.EntityFactory">
            <summary>
            Gets or sets the entity factory.
            </summary>
            <value>
            The entity factory.
            </value>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Connect.Pipelines.Payments.GetPaymentOptions.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Connect.Pipelines.Payments.GetPaymentOptions.TranslateToPaymentOption(Sitecore.Data.Items.Item,Sitecore.Commerce.Entities.Payments.PaymentOption,Sitecore.Commerce.Services.Payments.GetPaymentOptionsResult)">
            <summary>
            Translates to payment option.
            </summary>
            <param name="paymentOptionItem">The payment option item.</param>
            <param name="paymentOption">The payment option.</param>
            <param name="result">The result.</param>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Connect.Pipelines.Payments.GetPaymentOptions.GetPaymentOptionsItem">
            <summary>
            Gets the payment option item.
            </summary>
            <returns>The Payment Options node from Sitecore.</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Connect.Pipelines.Payments.GetPaymentOptions.GetShopName">
            <summary>
            Gets the name of the shop.
            </summary>
            <returns>The shop name.</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Connect.Pipelines.Payments.GetPaymentOptions.TranslatePaymentOptionType(System.Int32,Sitecore.Commerce.Services.Payments.GetPaymentOptionsResult)">
            <summary>
            Translateoes the type of the payment option.
            </summary>
            <param name="value">The value.</param>
            <param name="result">The result.</param>
            <returns>The full PaymentOptionType.</returns>
        </member>
        <member name="T:Sitecore.Reference.Storefront.Connect.Pipelines.Shipping.GetShippingMethods">
            <summary>
            Defines the GetShippingMethods class.
            </summary>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Connect.Pipelines.Shipping.GetShippingMethods.#ctor(Sitecore.Commerce.Entities.IEntityFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Reference.Storefront.Connect.Pipelines.Shipping.GetShippingMethods"/> class.
            </summary>
            <param name="entityFactory">The entity factory.</param>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Connect.Pipelines.Shipping.GetShippingMethods.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Connect.Pipelines.Shipping.GetShippingMethods.TranslateShippingMethod(Sitecore.Data.Items.Item,Sitecore.Data.Items.Item,System.String,Sitecore.Commerce.Entities.Shipping.ShippingMethod)">
            <summary>
            Translates the shipping method from an item to a ShippingMethod instance.
            </summary>
            <param name="shippingOptionItem">The shipping option item.</param>
            <param name="shippingMethodItem">The shipping method item.</param>
            <param name="csMethodId">The cs method identifier.</param>
            <param name="shippingMethod">The shipping method.</param>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Connect.Pipelines.Shipping.GetShippingMethods.GetShippingOptionsItem">
            <summary>
            Gets the shipping option item.
            </summary>
            <returns>The Shipping Options item from Sitecore.</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Connect.Pipelines.Shipping.GetShippingMethods.GetShippingOptionsTypeFolder">
            <summary>
            Gets the shipping options type folder item.
            </summary>
            <returns>The shipping options type folder item.</returns>
        </member>
        <member name="T:Sitecore.Reference.Storefront.Connect.Pipelines.Shipping.GetShippingOptions">
            <summary>
            Defines the GetShippingOptions class.
            </summary>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Connect.Pipelines.Shipping.GetShippingOptions.#ctor(Sitecore.Commerce.Entities.IEntityFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Reference.Storefront.Connect.Pipelines.Shipping.GetShippingOptions"/> class.
            </summary>
            <param name="entityFactory">The entity factory.</param>
        </member>
        <member name="P:Sitecore.Reference.Storefront.Connect.Pipelines.Shipping.GetShippingOptions.EntityFactory">
            <summary>
            Gets or sets the entity factory.
            </summary>
            <value>
            The entity factory.
            </value>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Connect.Pipelines.Shipping.GetShippingOptions.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Connect.Pipelines.Shipping.GetShippingOptions.TranslateToShippingOption(Sitecore.Data.Items.Item,Sitecore.Data.Items.Item,Sitecore.Commerce.Entities.Shipping.ShippingOption)">
            <summary>
            Translates to shipping option.
            </summary>
            <param name="shippingOptionItem">The shipping option item.</param>
            <param name="shippingOptionType">Type of the shipping option.</param>
            <param name="shippingOption">The shipping option.</param>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Connect.Pipelines.Shipping.GetShippingOptions.GetShippingOptionsItem">
            <summary>
            Gets the shipping option item.
            </summary>
            <returns>The shipping options item from Sitecore.</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Connect.Pipelines.Shipping.GetShippingOptions.GetShopName">
            <summary>
            Gets the name of the shop.
            </summary>
            <returns>The shopname.</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Connect.Pipelines.Shipping.GetShippingOptions.GetLineShippingOptions(Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceCart,System.Collections.Generic.List{Sitecore.Commerce.Entities.Shipping.ShippingOption})">
            <summary>
            Gets the line shipping options.
            </summary>
            <param name="cart">The cart.</param>
            <param name="allShippingOptions">All shipping options.</param>
            <returns>The list of line shipping options.</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Connect.Pipelines.Shipping.GetShippingOptions.CartCanBeEmailed(Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceCart)">
            <summary>
            Carts the can be emailed.
            </summary>
            <param name="cart">The cart.</param>
            <returns>True if the full cart can be emailed, otherwise false.</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Connect.Pipelines.Shipping.GetShippingOptions.CanLineItemBeEmailed(Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceCartLine)">
            <summary>
            Determines whether this instance [can line item be emailed] the specified line item.
            </summary>
            <param name="lineItem">The line item.</param>
            <returns>True if the line item can be emailed; otherwise false.</returns>
        </member>
        <member name="T:Sitecore.Reference.Storefront.Connect.Services.Orders.GetShippingMethodsRequest">
            <summary>
            Defines the GetShippingMethodsRequest class.
            </summary>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Connect.Services.Orders.GetShippingMethodsRequest.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Reference.Storefront.Connect.Services.Orders.GetShippingMethodsRequest"/> class.
            </summary>
            <param name="language">The language.</param>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Connect.Services.Orders.GetShippingMethodsRequest.#ctor(System.String,Sitecore.Commerce.Entities.Shipping.ShippingOption,Sitecore.Commerce.Entities.Party)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Reference.Storefront.Connect.Services.Orders.GetShippingMethodsRequest"/> class.
            </summary>
            <param name="language">The language.</param>
            <param name="shippingOption">The shipping option.</param>
            <param name="party">The party.</param>
        </member>
        <member name="P:Sitecore.Reference.Storefront.Connect.Services.Orders.GetShippingMethodsRequest.Cart">
            <summary>
            Gets or sets the cart.
            </summary>
            <value>
            The cart.
            </value>
        </member>
        <member name="P:Sitecore.Reference.Storefront.Connect.Services.Orders.GetShippingMethodsRequest.Lines">
            <summary>
            Gets or sets the lines.
            </summary>
            <value>
            The lines.
            </value>
        </member>
        <member name="T:Sitecore.Reference.Storefront.Controllers.CartController">
            <summary>
            Defines the shopping cart controller type.
            </summary>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.CartController.#ctor(Sitecore.Reference.Storefront.Managers.CartManager,Sitecore.Reference.Storefront.Managers.AccountManager,Sitecore.Commerce.Contacts.ContactFactory)">
            <summary>
                Initializes a new instance of the <see cref="T:Sitecore.Reference.Storefront.Controllers.CartController" /> class.
            </summary>
            <param name="cartManager">The cart manager.</param>
            <param name="accountManager">The account manager.</param>
            <param name="contactFactory">The contact factory.</param>
        </member>
        <member name="P:Sitecore.Reference.Storefront.Controllers.CartController.CartManager">
            <summary>
                Gets or sets the cart manager.
            </summary>
            <value>
                The cart manager.
            </value>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.CartController.Index">
            <summary>
                main cart controller action
            </summary>
            <returns>the cart view</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.CartController.MiniCart(System.Boolean)">
            <summary>
            The action for rendering the basket view
            </summary>
            <param name="updateCart">if set to <c>true</c> [update cart].</param>
            <returns>
            The MiniCart view.
            </returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.CartController.CheckoutButtons">
            <summary>
            Get the CheckoutButtons view.
            </summary>
            <returns>CheckoutButtons view</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.CartController.UpdateMiniCart(System.Boolean)">
            <summary>
            Baskets the update.
            </summary>
            <param name="updateCart">if set to <c>true</c> [update cart].</param>
            <returns>
            Returns the Json cart result.
            </returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.CartController.GetCurrentCart">
            <summary>
            Gets the current cart.
            </summary>
            <returns>
            Returns the Json cart result.
            </returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.CartController.AddCartLine(Sitecore.Reference.Storefront.Models.InputModels.AddCartLineInputModel)">
            <summary>
            Adds a product to the cart
            </summary>
            <param name="inputModel">The input model.</param>
            <returns>
            true if the product was added
            </returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.CartController.AddCartLines(System.Collections.Generic.IEnumerable{Sitecore.Reference.Storefront.Models.InputModels.AddCartLineInputModel})">
            <summary>
            Adds the items to cart.
            </summary>
            <param name="inputModels">The input model.</param>
            <returns>
            Returns json result with add items to cart operation status
            </returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.CartController.DeleteLineItem(Sitecore.Reference.Storefront.Models.InputModels.DeleteCartLineInputModel)">
            <summary>
            Deletes a line item from a cart
            </summary>
            <param name="model">The model.</param>
            <returns>
            the partial view of the updated cart
            </returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.CartController.UpdateLineItem(Sitecore.Reference.Storefront.Models.InputModels.UpdateCartLineInputModel)">
            <summary>
            Update a cart line item
            </summary>
            <param name="inputModel">The input model.</param>
            <returns>
            The partial view of the updated cart
            </returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.CartController.ApplyDiscount(Sitecore.Reference.Storefront.Models.InputModels.DiscountInputModel)">
            <summary>
            Applies the discount.
            </summary>
            <param name="model">The model.</param>
            <returns>
            The partial view of the updated cart
            </returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.CartController.RemoveDiscount(Sitecore.Reference.Storefront.Models.InputModels.DiscountInputModel)">
            <summary>
            Removes a discount.
            </summary>
            <param name="model">The model.</param>
            <returns>
            The partial view of the updated cart
            </returns>
        </member>
        <member name="T:Sitecore.Reference.Storefront.Controllers.CSBaseController">
            <summary>
            Defines the CSBaseController class.
            </summary>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.CSBaseController.#ctor(Sitecore.Reference.Storefront.Managers.AccountManager,Sitecore.Commerce.Contacts.ContactFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Reference.Storefront.Controllers.CSBaseController"/> class.
            </summary>
            <param name="accountManager">The account manager.</param>
            <param name="contactFactory">The contact factory.</param>
        </member>
        <member name="P:Sitecore.Reference.Storefront.Controllers.CSBaseController.AccountManager">
            <summary>
            Gets or sets the account manager.
            </summary>
            <value>
            The account manager.
            </value>
        </member>
        <member name="P:Sitecore.Reference.Storefront.Controllers.CSBaseController.CurrentVisitorContext">
            <summary>
            Gets the Current Visitor Context
            </summary>
        </member>
        <member name="T:Sitecore.Reference.Storefront.Controllers.LandingController">
            <summary>
            Used to manage the data and view retrieval for catalog pages
            </summary>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.LandingController.#ctor(Sitecore.Reference.Storefront.Managers.AccountManager,Sitecore.Reference.Storefront.Managers.InventoryManager,Sitecore.Commerce.Contacts.ContactFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Reference.Storefront.Controllers.LandingController"/> class.
            </summary>
            <param name="accountManager">The account manager.</param>
            <param name="inventoryManager">The inventory manager.</param>
            <param name="contactFactory">The contact factory.</param>
        </member>
        <member name="P:Sitecore.Reference.Storefront.Controllers.LandingController.InventoryManager">
            <summary>
            Gets or sets the inventory manager.
            </summary>
            <value>
            The inventory manager.
            </value>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.LandingController.PromoRotator">
            <summary>
            Promoes the rotator.
            </summary>
            <returns>The action result</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.LandingController.PromoList">
            <summary>
            Promoes the list.
            </summary>
            <returns>The action result</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.LandingController.Promotion">
            <summary>
            Returns a Promotion View based on the datasource of the control
            </summary>
            <returns>The promotion view.</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.LandingController.Carousel">
            <summary>
            Gets Carousel view.
            </summary>
            <returns>Carousel view</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.LandingController.GetChildCategories(Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceSearchOptions,Sitecore.Data.Items.Item)">
            <summary>
            This method returns child categories for this category
            </summary>
            <param name="searchOptions">The options to perform the search with</param>
            <param name="categoryItem">The category item whose children to retrieve</param>
            <returns>A list of child categories</returns>       
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.LandingController.GetProductViewModel(Sitecore.Data.Items.Item,Sitecore.Mvc.Presentation.Rendering)">
            <summary>
            Creates a product view model based on an Item and Rendering
            </summary>
            <param name="productItem">The product item to based the model on</param>
            <param name="rendering">The rendering to initialize the model with</param>
            <returns>A Product View Model</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.LandingController.PopulateStockInformation(Sitecore.Reference.Storefront.Models.ProductViewModel)">
            <summary>
            Populates the stock information
            </summary>
            <param name="model">The product model</param>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.LandingController.GetRelationshipsFromField(Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.RelationshipField,System.String)">
            <summary>
            Gets a lists of target items from a relationship field
            </summary>
            <param name="field">the relationship field</param>
            <param name="relationshipName">the relationship name, for example upsell</param>
            <returns>a list of relationship targets or null if no items found</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.LandingController.GetLandingPageViewModel(Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceSearchOptions,Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceSearchOptions,System.Collections.Generic.IEnumerable{Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceQuerySort},Sitecore.Data.Items.Item,Sitecore.Mvc.Presentation.Rendering)">
            <summary>
            Builds a category view model or retrieves it if it already exists
            </summary>
            <param name="productSearchOptions">The product options class for finding child products</param>
            <param name="categorySearchOptions">The category options classf or finding child categories</param>
            <param name="sortFields">The fields to sort he results on</param>
            <param name="item">The item.</param>
            <param name="rendering">The rendering to initialize the model with</param>
            <returns>
            A category view model
            </returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.LandingController.GetChildProducts(Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceSearchOptions,Sitecore.Data.Items.Item)">
            <summary>
            This method returns child products for this category
            </summary>
            <param name="searchOptions">The options to perform the search with</param>
            <param name="categoryItem">The category item whose children to retrieve</param>
            <returns>A list of child products</returns>        
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.LandingController.UpdateOptionsWithFacets(System.Collections.Generic.IEnumerable{Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceQueryFacet},System.String,Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceSearchOptions)">
            <summary>
            Takes a collection of a facets and a querystring of facet values and adds the values to the collection
            </summary>
            <param name="facets">The facet collection</param>
            <param name="valueQueryString">The values to add to the collection in querystring format</param>
            <param name="productSearchOptions">The options to update with facets</param>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.LandingController.UpdateOptionsWithSorting(System.String,System.Nullable{Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.SortDirection},Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceSearchOptions)">
            <summary>
            Adds and required sorting to the options class
            </summary>
            <param name="sortField">The field to sort on</param>
            <param name="sortDirection">The direction to perform the sorting</param>
            <param name="productSearchOptions">The options class to add the sorting to.</param>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.LandingController.CleanLanguageFromFilter(System.String)">
            <summary>
            Cleans the language from filter.
            </summary>
            <param name="filter">The filter.</param>
            <returns>The updated filter.</returns>
        </member>
        <member name="T:Sitecore.Reference.Storefront.Controllers.CatalogController">
            <summary>
            Used to manage the data and view retrieval for catalog pages
            </summary>
        </member>
        <member name="F:Sitecore.Reference.Storefront.Controllers.CatalogController.CommerceNamedSearchTemplate">
            <summary>
            The commerce named search template
            </summary>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.CatalogController.#ctor(Sitecore.Reference.Storefront.Managers.InventoryManager,Sitecore.Commerce.Contacts.ContactFactory,Sitecore.Reference.Storefront.Managers.AccountManager,Sitecore.Reference.Storefront.Managers.CatalogManager,Sitecore.Reference.Storefront.Managers.GiftCardManager,Sitecore.Reference.Storefront.Managers.PricingManager,Sitecore.Reference.Storefront.Managers.CartManager)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Reference.Storefront.Controllers.CatalogController" /> class.
            </summary>
            <param name="inventoryManager">The inventory manager.</param>
            <param name="contactFactory">The contact factory.</param>
            <param name="accountManager">The account manager.</param>
            <param name="catalogManager">The catalog manager.</param>
            <param name="giftCardManager">The gift card manager.</param>
            <param name="pricingManager">The pricing manager.</param>
            <param name="cartManager">The cart manager.</param>
        </member>
        <member name="P:Sitecore.Reference.Storefront.Controllers.CatalogController.CartManager">
            <summary>
            Gets or sets the cart manager.
            </summary>
            <value>
            The cart manager.
            </value>
        </member>
        <member name="P:Sitecore.Reference.Storefront.Controllers.CatalogController.PricingManager">
            <summary>
            Gets or sets the pricing manager.
            </summary>
            <value>
            The pricing manager.
            </value>
        </member>
        <member name="P:Sitecore.Reference.Storefront.Controllers.CatalogController.InventoryManager">
            <summary>
            Gets or sets the inventory manager.
            </summary>
            <value>
            The inventory manager.
            </value>
        </member>
        <member name="P:Sitecore.Reference.Storefront.Controllers.CatalogController.CatalogManager">
            <summary>
            Gets the catalog manager.
            </summary>
        </member>
        <member name="P:Sitecore.Reference.Storefront.Controllers.CatalogController.GiftCardManager">
            <summary>
            Gets or sets the gift card manager.
            </summary>
            <value>
            The gift card manager.
            </value>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.CatalogController.HomePage">
            <summary>
            An action to manage data for the home page
            </summary>
            <returns>The view that represents the home page</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.CatalogController.CurrencyMenu">
            <summary>
            Currencies the menu.
            </summary>
            <returns>The currency menu.</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.CatalogController.SwitchCurrency(System.String)">
            <summary>
            Switches the currency.
            </summary>
            <param name="currency">The currency.</param>
            <returns>The Json result.</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.CatalogController.CategoryList">
            <summary>
            An action to manage data for the CategoryList
            </summary>
            <returns>The view that represents the CategoryList</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.CatalogController.PageTitle">
            <summary>
            PageTitle View
            </summary>
            <returns>The page title view.</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.CatalogController.MultipleProductLists(System.Nullable{System.Int32},System.String,System.String,System.Nullable{Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.SortDirection})">
            <summary>
            An action to manage data for the ProductList
            </summary>
            <param name="pageNumber">The page number.</param>
            <param name="facetValues">The facet values.</param>
            <param name="sortField">The sort field.</param>
            <param name="sortDirection">The sort direction.</param>
            <returns>
            The view that represents the ProductList
            </returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.CatalogController.Category(System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.SortDirection})">
            <summary>
            The action for rendering the category view
            </summary>
            <param name="pageNumber">The product page number</param>
            <param name="facetValues">A facet query string</param>
            <param name="sortField">The field to sort on</param>
            <param name="pageSize">The page size</param>
            <param name="sortDirection">The direction to sort</param>
            <returns>The category view</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.CatalogController.Navigation">
            <summary>
            The action for rendering the product list header view
            </summary>
            <returns>The navigation view.</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.CatalogController.ChildCategoryNavigation">
            <summary>
            Childs the category navigation.
            </summary>
            <returns>The children category navigation view.</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.CatalogController.ProductListHeader(System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.SortDirection})">
            <summary>
            The action for rendering the product list header view
            </summary>
            <param name="pageNumber">The page number.</param>
            <param name="facetValues">The facet values.</param>
            <param name="sortField">The sort field.</param>
            <param name="pageSize">Size of the page.</param>
            <param name="sortDirection">The sort direction.</param>
            <returns>The product list header view.</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.CatalogController.Pagination(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            The action for rendering the pagination view
            </summary>
            <param name="pageNumber">The page number.</param>
            <param name="pageSize">Size of the page.</param>
            <param name="facetValues">The facet values.</param>
            <returns>The pagination view.</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.CatalogController.ProductFacets(System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.Nullable{Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.SortDirection})">
            <summary>
            The action for rendering the product facets view
            </summary>
            <param name="pageNumber">The page number.</param>
            <param name="pageSize">Size of the page.</param>
            <param name="facetValues">The facet values.</param>
            <param name="sortField">The sort field.</param>
            <param name="sortDirection">The sort direction.</param>
            <returns>
            The product facet view.
            </returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.CatalogController.CuratedProductImages">
            <summary>
            Returns a curated set of product Images based on the Datasource
            </summary>
            <returns>The curated product image view.</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.CatalogController.CategoryPageHeader">
            <summary>
            Categories page header called only once per category page.
            </summary>
            <returns>The resulting view.</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.CatalogController.FacetApplied(System.String,System.Nullable{System.Boolean})">
            <summary>
            Facets the applied.
            </summary>
            <param name="facetValue">The facet value.</param>
            <param name="isApplied">The is applied.</param>
            <returns>
            The action result.
            </returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.CatalogController.SortOrderApplied(System.String,System.Nullable{Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.SortDirection})">
            <summary>
            Sorts the order applied.
            </summary>
            <param name="sortField">The sort field.</param>
            <param name="sortDirection">The sort direction.</param>
            <returns>
            The action result.
            </returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.CatalogController.Product">
            <summary>
            The action for rendering the product view
            </summary>
            <returns>The product view</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.CatalogController.VisitedProductDetailsPage">
            <summary>
            The action for logging a visit to the product details page.
            </summary>
            <returns>
            The action result.
            </returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.CatalogController.VisitedCategoryPage">
            <summary>
            The action for logging a visit to a category page.
            </summary>
            <returns>
            The action result.
            </returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.CatalogController.RelatedCatalogItems">
            <summary>
            The action for rendering the related catalog items.
            </summary>
            <returns>The related catalog items view</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.CatalogController.CheckGiftCardBalance">
            <summary>
            Checks the gift card balance.
            </summary>
            <returns>Gift card balance view</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.CatalogController.GiftCardPresentation">
            <summary>
            Gets the Gift card presentation.
            </summary>
            <returns>GiftCardPresentation view</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.CatalogController.ProductPresentation">
            <summary>
            Gets the Product presentation.
            </summary>
            <returns>ProductPresentation view</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.CatalogController.GetCurrentProductStockInfo(Sitecore.Reference.Storefront.Models.InputModels.ProductStockInfoInputModel)">
            <summary>
            Gets the current product stock count.
            </summary>
            <param name="model">The model.</param>
            <returns>
            A json result
            </returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.CatalogController.CheckGiftCardBalance(Sitecore.Reference.Storefront.Models.InputModels.GetGiftCardBalanceInputModel)">
            <summary>
            Gets the gift card balance.
            </summary>
            <param name="inputModel">The input model.</param>
            <returns>
            A response containing the gift card balance.
            </returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.CatalogController.SignUpForBackInStockNotification(Sitecore.Reference.Storefront.Models.InputModels.SignUpForNotificationInputModel)">
            <summary>
            Sign up visitor for product back in stock notification.
            </summary>
            <param name="model">The model.</param>
            <returns>A base json result</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.CatalogController.GetProductListHeaderViewModel(Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceSearchOptions,System.Collections.Generic.IEnumerable{Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceQuerySort},Sitecore.Data.Items.Item,Sitecore.Mvc.Presentation.Rendering)">
            <summary>
            Builds a product list header view model
            </summary>
            <param name="productSearchOptions">The product search options.</param>
            <param name="sortFields">The sort fields.</param>
            <param name="categoryItem">The category item.</param>
            <param name="rendering">The rendering.</param>
            <returns>The product list header view model.</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.CatalogController.GetPaginationViewModel(Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceSearchOptions,Sitecore.Data.Items.Item,Sitecore.Mvc.Presentation.Rendering)">
            <summary>
            Builds a pagination view model
            </summary>
            <param name="productSearchOptions">The product search options.</param>
            <param name="categoryItem">The category item.</param>
            <param name="rendering">The rendering.</param>
            <returns>The pagination view model.</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.CatalogController.GetProductFacetsViewModel(Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceSearchOptions,Sitecore.Data.Items.Item,Sitecore.Mvc.Presentation.Rendering)">
            <summary>
            Builds a product facets view model
            </summary>
            <param name="productSearchOptions">The product search options.</param>
            <param name="categoryItem">The category item.</param>
            <param name="rendering">The rendering.</param>
            <returns>The product facets view model.</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.CatalogController.GetChildCategories(Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceSearchOptions,Sitecore.Data.Items.Item)">
            <summary>
            This method returns child categories for this category
            </summary>
            <param name="searchOptions">The options to perform the search with</param>
            <param name="categoryItem">The category item whose children to retrieve</param>
            <returns>A list of child categories</returns>       
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.CatalogController.GetProductViewModel(Sitecore.Data.Items.Item,Sitecore.Mvc.Presentation.Rendering)">
            <summary>
            Creates a product view model based on an Item and Rendering
            </summary>
            <param name="productItem">The product item to based the model on</param>
            <param name="rendering">The rendering to initialize the model with</param>
            <returns>A Product View Model</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.CatalogController.PopulateStockInformation(Sitecore.Reference.Storefront.Models.ProductViewModel)">
            <summary>
            Populates the stock information
            </summary>
            <param name="model">The product model</param>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.CatalogController.GetCategoryViewModel(Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceSearchOptions,System.Collections.Generic.IEnumerable{Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceQuerySort},Sitecore.Data.Items.Item,Sitecore.Mvc.Presentation.Rendering,System.String)">
            <summary>
            Builds a category view model or retrieves it if it already exists
            </summary>
            <param name="productSearchOptions">The product options class for finding child products</param>
            <param name="sortFields">The fields to sort he results on</param>
            <param name="categoryItem">The category item to base the view model on</param>
            <param name="rendering">The rendering to initialize the model with</param>
            <param name="cacheName">Name of the cache.</param>
            <returns>
            A category view model
            </returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.CatalogController.GetNavigationViewModel(Sitecore.Data.Items.Item,Sitecore.Mvc.Presentation.Rendering)">
            <summary>
            Builds a navigation view model or retrieves it if it already exists
            </summary>
            <param name="categoryItem">The category item to base the view model on</param>
            <param name="rendering">The rendering to initialize the model with</param>
            <returns>
            A category view model
            </returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.CatalogController.GetChildProducts(Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceSearchOptions,Sitecore.Data.Items.Item)">
            <summary>
            This method returns child products for this category
            </summary>
            <param name="searchOptions">The options to perform the search with</param>
            <param name="categoryItem">The category item whose children to retrieve</param>
            <returns>A list of child products</returns>        
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.CatalogController.UpdateOptionsWithFacets(System.Collections.Generic.IEnumerable{Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceQueryFacet},System.String,Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceSearchOptions)">
            <summary>
            Takes a collection of a facets and a querystring of facet values and adds the values to the collection
            </summary>
            <param name="facets">The facet collection</param>
            <param name="valueQueryString">The values to add to the collection in querystring format</param>
            <param name="productSearchOptions">The options to update with facets</param>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.CatalogController.UpdateOptionsWithSorting(System.String,System.Nullable{Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.SortDirection},Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceSearchOptions)">
            <summary>
            Adds and required sorting to the options class
            </summary>
            <param name="sortField">The field to sort on</param>
            <param name="sortDirection">The direction to perform the sorting</param>
            <param name="productSearchOptions">The options class to add the sorting to.</param>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.CatalogController.CleanLanguageFromFilter(System.String)">
            <summary>
            Cleans the language from filter.
            </summary>
            <param name="filter">The filter.</param>
            <returns>The updated filter.</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.CatalogController.GetProductInformation(Sitecore.Reference.Storefront.Models.ProductViewModel@)">
            <summary>
            Gets the product information.
            </summary>
            <param name="productViewModel">The product view model.</param>
            <returns>The product view</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.CatalogController.SetSortParameters(Sitecore.Reference.Storefront.Models.SitecoreItemModels.Category,System.String@,System.Nullable{Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.SortDirection}@)">
            <summary>
            Sets the sort parameters.
            </summary>
            <param name="category">The category.</param>
            <param name="sortField">The sort field.</param>
            <param name="sortOrder">The sort order.</param>
        </member>
        <member name="T:Sitecore.Reference.Storefront.Controllers.CheckoutController">
            <summary>
            Handles all calls to checkout
            </summary>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.CheckoutController.#ctor(Sitecore.Reference.Storefront.Managers.CartManager,Sitecore.Reference.Storefront.Managers.OrderManager,Sitecore.Reference.Storefront.Managers.AccountManager,Sitecore.Reference.Storefront.Managers.PaymentManager,Sitecore.Reference.Storefront.Managers.ShippingManager,Sitecore.Commerce.Contacts.ContactFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Reference.Storefront.Controllers.CheckoutController" /> class.
            </summary>
            <param name="cartManager">The cart manager.</param>
            <param name="orderManager">The order manager.</param>
            <param name="accountManager">The account manager.</param>
            <param name="paymentManager">The payment manager.</param>
            <param name="shippingManager">The shipping manager.</param>
            <param name="contactFactory">The contact factory.</param>
        </member>
        <member name="P:Sitecore.Reference.Storefront.Controllers.CheckoutController.CartManager">
            <summary>
            Gets or sets the cart manager.
            </summary>
            <value>
            The cart manager.
            </value>
        </member>
        <member name="P:Sitecore.Reference.Storefront.Controllers.CheckoutController.PaymentManager">
            <summary>
            Gets or sets the payment manager.
            </summary>
            <value>
            The payment manager.
            </value>
        </member>
        <member name="P:Sitecore.Reference.Storefront.Controllers.CheckoutController.ShippingManager">
            <summary>
            Gets or sets the shipping manager.
            </summary>
            <value>
            The shipping manager.
            </value>
        </member>
        <member name="P:Sitecore.Reference.Storefront.Controllers.CheckoutController.OrderManager">
            <summary>
            Gets or sets the order manager.
            </summary>
            <value>
            The order manager.
            </value>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.CheckoutController.StartCheckout">
            <summary>
            Handles the index view of the controller
            </summary>
            <returns>The action for this view</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.CheckoutController.OrderConfirmation(System.String)">
            <summary>
            Gets the Orders confirmation.
            </summary>
            <param name="confirmationId">The confirmation identifier.</param>
            <returns>
            Order Confirmation view
            </returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.CheckoutController.GetCheckoutData">
            <summary>
            Retrieves data required to start the checkout process.
            </summary>
            <returns>Data required to start the checkout process.</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.CheckoutController.SubmitOrder(Sitecore.Reference.Storefront.Models.InputModels.SubmitOrderInputModel)">
            <summary>
            Submits the order in json.
            </summary>
            <param name="inputModel">The input model.</param>
            <returns>The result in Json format.</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.CheckoutController.GetShippingMethods(Sitecore.Reference.Storefront.Models.InputModels.GetShippingMethodsInputModel)">
            <summary>
            Gets the available shipping methods.
            </summary>
            <param name="inputModel">The input model.</param>
            <returns>
            The available shipping methods.
            </returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.CheckoutController.SetShippingMethods(Sitecore.Reference.Storefront.Models.InputModels.SetShippingMethodsInputModel)">
            <summary>
            Sets the shipping methods.
            </summary>
            <param name="inputModel">The input model.</param>
            <returns>
            The action for this view
            </returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.CheckoutController.SetPaymentMethods(Sitecore.Reference.Storefront.Models.InputModels.PaymentInputModel)">
            <summary>
            Sets the payment methods.
            </summary>
            <param name="inputModel">The input model.</param>
            <returns>The CartJsonResult.</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.CheckoutController.GetNearbyStoresJson(Sitecore.Reference.Storefront.Models.InputModels.GetNearbyStoresInputModel)">
            <summary>
            Gets the nearby stores.
            </summary>
            <param name="inputModel">The input model.</param>
            <returns>
            A list of stores
            </returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.CheckoutController.GetAvailableStates(Sitecore.Reference.Storefront.Models.InputModels.GetAvailableStatesInputModel)">
            <summary>
            Gets the available states.
            </summary>
            <param name="model">The model.</param>
            <returns>
            A list of states based on the country
            </returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.CheckoutController.GetPaymentMethods(Sitecore.Reference.Storefront.Models.JsonResults.CheckoutDataBaseJsonResult)">
            <summary>
            Gets the payment methods.
            </summary>
            <param name="result">The result.</param>
        </member>
        <member name="T:Sitecore.Reference.Storefront.Controllers.AccountController">
            <summary>
            Used to handle all account actions
            </summary>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.AccountController.#ctor(Sitecore.Reference.Storefront.Managers.OrderManager,Sitecore.Reference.Storefront.Managers.AccountManager,Sitecore.Commerce.Contacts.ContactFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Reference.Storefront.Controllers.AccountController" /> class.
            </summary>
            <param name="orderManager">The order manager.</param>
            <param name="accountManager">The account manager.</param>
            <param name="contactFactory">The contact factory.</param>
        </member>
        <member name="T:Sitecore.Reference.Storefront.Controllers.AccountController.ManageMessageId">
            <summary>
            Gives the various types of messages
            </summary>
        </member>
        <member name="F:Sitecore.Reference.Storefront.Controllers.AccountController.ManageMessageId.ChangePasswordSuccess">
            <summary>
            Indicates a successful password change
            </summary>
        </member>
        <member name="F:Sitecore.Reference.Storefront.Controllers.AccountController.ManageMessageId.SetPasswordSuccess">
            <summary>
            Indicates a successful password set
            </summary>
        </member>
        <member name="F:Sitecore.Reference.Storefront.Controllers.AccountController.ManageMessageId.RemoveLoginSuccess">
            <summary>
            Indicates a successful account delete
            </summary>
        </member>
        <member name="P:Sitecore.Reference.Storefront.Controllers.AccountController.OrderManager">
            <summary>
            Gets or sets the order manager.
            </summary>
            <value>
            The order manager.
            </value>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.AccountController.Index">
            <summary>
            The default action for the main page for the account section
            </summary>
            <returns>The view for the section</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.AccountController.Login(System.String)">
            <summary>
            An action to handle displaying the login form
            </summary>
            <param name="returnUrl">A location to redirect the user to</param>
            <returns>The view to display to the user</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.AccountController.LogOff">
            <summary>
            Handles a user trying to log off
            </summary>
            <returns>The view to display to the user after logging off</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.AccountController.Register">
            <summary>
            Handles displaying a form for the user to login
            </summary>
            <returns>The view to display to the user</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.AccountController.Addresses">
            <summary>
            Addressees this instance.
            </summary>
            <returns>The view to display address book</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.AccountController.EditProfile">
            <summary>
            Displays the Profile Edit Page.
            </summary>
            <returns>
            Profile Edit Page
            </returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.AccountController.ForgotPassword">
            <summary>
            Forgots the password.
            </summary>
            <returns>The view to display.</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.AccountController.ForgotPasswordConfirmation(System.String)">
            <summary>
            Changes the password confirmation.
            </summary>
            <param name="userName">Name of the user.</param>
            <returns>The forgot password confirmation view.</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.AccountController.ChangePassword">
            <summary>
            Changes the password.
            </summary>
            <returns>Chagne password view</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.AccountController.Register(Sitecore.Reference.Storefront.Models.InputModels.RegisterUserInputModel)">
            <summary>
            Handles a user trying to register
            </summary>
            <param name="inputModel">The input model.</param>
            <returns>
            The view to display to the user after they register
            </returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.AccountController.Login(Sitecore.Reference.Storefront.Models.LoginModel)">
            <summary>
            Handles a user trying to login
            </summary>
            <param name="model">The user's login details</param>
            <returns>The view to display to the user</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.AccountController.ChangePassword(Sitecore.Reference.Storefront.Models.InputModels.ChangePasswordInputModel)">
            <summary>
            Changes the password.
            </summary>
            <param name="inputModel">The input model.</param>
            <returns>
            The result in Json format.
            </returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.AccountController.MyOrders">
            <summary>
            Orderses the history.
            </summary>
            <returns>
            The view to display all orders for current user
            </returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.AccountController.MyOrder(System.String)">
            <summary>
            Orders the detail.
            </summary>
            <param name="id">The order confirmation Id.</param>
            <returns>
            The view to display order details
            </returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.AccountController.RecentOrders">
            <summary>
            Recent Orders PlugIn for Account Management Home Page
            </summary>
            <returns>The view to display recent orders</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.AccountController.AccountHomeProfile">
            <summary>
            Profile PlugIn for Account Management Home Page
            </summary>
            <returns>The view to display profile page</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.AccountController.AddressList">
            <summary>
            Address Book in the Home Page
            </summary>
            <returns>The list of addresses</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.AccountController.AddressDelete(Sitecore.Reference.Storefront.Models.InputModels.DeletePartyInputModelItem)">
            <summary>
            Handles deleting of an address and removing it from a user's profile
            </summary>
            <param name="model">The model.</param>
            <returns>
            The JsonResult with deleting operation status
            </returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.AccountController.AddressModify(Sitecore.Reference.Storefront.Models.InputModels.PartyInputModelItem)">
            <summary>
            Handles updates to an address
            </summary>
            <param name="model">Any changes to the address</param>
            <returns>
            The view to display the updated address
            </returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.AccountController.UpdateProfile(Sitecore.Reference.Storefront.Models.ProfileModel)">
            <summary>
            Updates the profile.
            </summary>
            <param name="model">The model.</param>
            <returns>The result in Json format.</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.AccountController.GetCurrentUser">
            <summary>
            Gets the current user.
            </summary>
            <returns>The current authenticated user info</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.AccountController.ForgotPassword(Sitecore.Reference.Storefront.Models.InputModels.ForgotPasswordInputModel)">
            <summary>
            Forgots the password.
            </summary>
            <param name="model">The model.</param>
            <returns>The result in json format</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.AccountController.UpdateUserName(System.String)">
            <summary>
            Concats the user name with the current domain if it missing
            </summary>
            <param name="userName">The user's user name</param>
            <returns>The updated user name</returns>
        </member>
        <member name="T:Sitecore.Reference.Storefront.Controllers.NavigationSearchController">
            <summary>
            Used to handle all search naviagtion actions
            </summary>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.NavigationSearchController.#ctor(Sitecore.Commerce.Contacts.ContactFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Reference.Storefront.Controllers.NavigationSearchController"/> class.
            </summary>
            <param name="contactFactory">The contact factory.</param>
        </member>
        <member name="P:Sitecore.Reference.Storefront.Controllers.NavigationSearchController.IndexName">
            <summary>
            Gets or sets the name of the index
            </summary>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.NavigationSearchController.Index">
            <summary>
            Represents the index action
            </summary>
            <returns>An action result view</returns>
        </member>
        <member name="T:Sitecore.Reference.Storefront.Controllers.SearchController">
            <summary>
            Manages all search related requests
            </summary>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.SearchController.#ctor(Sitecore.Reference.Storefront.Managers.CatalogManager,Sitecore.Commerce.Contacts.ContactFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Reference.Storefront.Controllers.SearchController"/> class.
            </summary>
            <param name="catalogManager">The catalog manager.</param>
            <param name="contactFactory">The contact factory.</param>
        </member>
        <member name="P:Sitecore.Reference.Storefront.Controllers.SearchController.CatalogManager">
            <summary>
            Gets or sets the catalog manager.
            </summary>
            <value>
            The catalog manager.
            </value>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.SearchController.SearchBar(System.String)">
            <summary>
            The action for rendering the search bar.
            </summary>
            <param name="searchKeyword">The search keyword.</param>
            <returns>The search view.</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.SearchController.SearchEvent(System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.SortDirection})">
            <summary>
            Searches the event.
            </summary>
            <param name="searchKeyword">The search keyword.</param>
            <param name="pageNumber">The page number.</param>
            <param name="facetValues">The facet values.</param>
            <param name="sortField">The sort field.</param>
            <param name="pageSize">Size of the page.</param>
            <param name="sortDirection">The sort direction.</param>
            <returns>The search event view (empty)</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.SearchController.ProductSearchResultsFacets(System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.SortDirection})">
            <summary>
            The action for rendering the search results facets view
            </summary>
            <param name="searchKeyword">The search keyword.</param>
            <param name="pageNumber">The page number.</param>
            <param name="facetValues">The facet values.</param>
            <param name="sortField">The sort field.</param>
            <param name="pageSize">Size of the page.</param>
            <param name="sortDirection">The sort direction.</param>
            <returns>The product search facets.</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.SearchController.ProductSearchResultsListHeader(System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.SortDirection})">
            <summary>
            The action for rendering the search results list header view
            </summary>
            <param name="searchKeyword">The search keyword.</param>
            <param name="pageNumber">The page number.</param>
            <param name="facetValues">The facet values.</param>
            <param name="sortField">The sort field.</param>
            <param name="pageSize">Size of the page.</param>
            <param name="sortDirection">The sort direction.</param>
            <returns>The product search result list header view.</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.SearchController.ProductSearchResultsList(System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.SortDirection})">
            <summary>
            An action to manage data for the search results list
            </summary>
            <param name="searchKeyword">The search keyword.</param>
            <param name="pageNumber">The page number.</param>
            <param name="facetValues">The facet values.</param>
            <param name="sortField">The sort field.</param>
            <param name="pageSize">Size of the page.</param>
            <param name="sortDirection">The sort direction.</param>
            <returns>
            The view that represents the search results list
            </returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.SearchController.ProductSearchResultsPagination(System.String,System.Nullable{System.Int32},System.String,System.String,System.Nullable{System.Int32},System.Nullable{Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.SortDirection})">
            <summary>
            The action for rendering the pagination view
            </summary>
            <param name="searchKeyword">The search keyword.</param>
            <param name="pageNumber">The page number.</param>
            <param name="facetValues">The facet values.</param>
            <param name="sortField">The sort field.</param>
            <param name="pageSize">Size of the page.</param>
            <param name="sortDirection">The sort direction.</param>
            <returns>The pagination view.</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.SearchController.SiteContentSearchResultsList(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            returns the the view for site content search results list.
            </summary>
            <param name="searchKeyword">The search keyword.</param>
            <param name="pageNumber">The page number.</param>
            <param name="pageSize">Size of the page.</param>
            <returns>
            The view that represents the site content search results list.
            </returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.SearchController.SiteContentSearchResultsListHeader(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            The action for rendering the search results list header view
            </summary>
            <param name="searchKeyword">The search keyword.</param>
            <param name="pageNumber">The page number.</param>
            <param name="pageSize">Size of the page.</param>
            <returns>The search result view.</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.SearchController.SiteContentSearchResultsPagination(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32})">
            <summary>
            The action for rendering the pagination view
            </summary>
            <param name="searchKeyword">The search keyword.</param>
            <param name="pageNumber">The page number.</param>
            <param name="pageSize">Size of the page.</param>
            <returns>The pagination view.</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.SearchController.GetProductListHeaderViewModel(Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceSearchOptions,System.Collections.Generic.IEnumerable{Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceQuerySort},System.String,System.String,Sitecore.Mvc.Presentation.Rendering)">
            <summary>
            Builds a product list header view model
            </summary>
            <param name="productSearchOptions">The product search options.</param>
            <param name="sortFields">The sort fields.</param>
            <param name="searchKeyword">The search keyword.</param>
            <param name="catalogName">Name of the catalog.</param>
            <param name="rendering">The rendering.</param>
            <returns>The product list header view model.</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.SearchController.GetProductFacetsViewModel(Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceSearchOptions,System.String,System.String,Sitecore.Mvc.Presentation.Rendering)">
            <summary>
            Builds a product facets view model
            </summary>
            <param name="productSearchOptions">The product search options.</param>
            <param name="searchKeyword">The search keyword.</param>
            <param name="catalogName">Name of the catalog.</param>
            <param name="rendering">The rendering.</param>
            <returns>The product facet view model.</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.SearchController.GetPaginationViewModel(Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceSearchOptions,System.String,System.String,Sitecore.Mvc.Presentation.Rendering)">
            <summary>
            Builds a pagination view model
            </summary>
            <param name="productSearchOptions">The product search options.</param>
            <param name="searchKeyword">The search keyword.</param>
            <param name="catalogName">Name of the catalog.</param>
            <param name="rendering">The rendering.</param>
            <returns>The pagination view model.</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.SearchController.GetProductListViewModel(Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceSearchOptions,System.Collections.Generic.IEnumerable{Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceQuerySort},System.String,System.String,Sitecore.Mvc.Presentation.Rendering)">
            <summary>
            Builds a category view model or retrieves it if it already exists
            </summary>
            <param name="productSearchOptions">The product options class for finding child products</param>
            <param name="sortFields">The fields to sort he results on</param>
            <param name="searchKeyword">The keyword to search for</param>
            <param name="catalogName">The name of the catalog to search against</param>
            <param name="rendering">The rendering to initialize the model with</param>
            <returns>A category view model</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.SearchController.GetChildProducts(Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceSearchOptions,System.String,System.String)">
            <summary>
            This method returns child products for this category
            </summary>
            <param name="searchOptions">The options to perform the search with</param>
            <param name="searchKeyword">The keyword to search for</param>
            <param name="catalogName">The name of the catalog to search against</param>
            <returns>A list of child products</returns>        
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.SearchController.GetSiteContentSearchResults(Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceSearchOptions,System.String,Sitecore.Mvc.Presentation.Rendering)">
            <summary>
            Gets a <see cref="T:Sitecore.Reference.Storefront.Models.SearchResults" /> that represents the site content search results.
            </summary>
            <param name="searchOptions">The search options.</param>
            <param name="searchKeyword">The search keyword.</param>
            <param name="rendering">The rendering.</param>
            <returns>The search results.</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.SearchController.GetSiteContentListViewModel(Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceSearchOptions,System.String,Sitecore.Mvc.Presentation.Rendering)">
            <summary>
            Gets a <see cref="T:Sitecore.Reference.Storefront.Models.SiteContentSearchResultsViewModel" /> object that represents the site content search results.
            </summary>
            <param name="searchOptions">The search options.</param>
            <param name="searchKeyword">The search keyword.</param>
            <param name="rendering">The rendering.</param>
            <returns>The site content search result view model.</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.SearchController.GetSiteContentPaginationModel(Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceSearchOptions,System.String,Sitecore.Mvc.Presentation.Rendering)">
            <summary>
            Gets a <see cref="T:Sitecore.Reference.Storefront.Models.RenderingModels.PaginationViewModel" /> that represents the site content search results.
            </summary>
            <param name="searchOptions">The search options.</param>
            <param name="searchKeyword">The search keyword.</param>
            <param name="rendering">The rendering.</param>
            <returns>The pagination view model.</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.SearchController.GetSiteContentListHeaderViewModel(Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceSearchOptions,System.String,Sitecore.Mvc.Presentation.Rendering)">
            <summary>
            Builds a product list header view model
            </summary>
            <param name="searchOptions">The search options.</param>
            <param name="searchKeyword">The search keyword.</param>
            <param name="rendering">The rendering.</param>
            <returns>The product list header view model.</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.SearchController.UpdateOptionsWithFacets(System.Collections.Generic.IEnumerable{Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceQueryFacet},System.String,Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceSearchOptions)">
            <summary>
            Takes a collection of a facets and a querystring of facet values and adds the values to the collection
            </summary>
            <param name="facets">The facet collection</param>
            <param name="valueQueryString">The values to add to the collection in querystring format</param>
            <param name="productSearchOptions">The options to update with facets</param>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.SearchController.UpdateOptionsWithSorting(System.String,System.Nullable{Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.SortDirection},Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceSearchOptions)">
            <summary>
            Adds and required sorting to the options class
            </summary>
            <param name="sortField">The field to sort on</param>
            <param name="sortDirection">The direction to perform the sorting</param>
            <param name="productSearchOptions">The options class to add the sorting to.</param>
        </member>
        <member name="T:Sitecore.Reference.Storefront.Controllers.SharedController">
            <summary>
            Used to handle shared account actions
            </summary>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.SharedController.#ctor(Sitecore.Commerce.Contacts.ContactFactory,Sitecore.Reference.Storefront.Managers.CatalogManager)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Reference.Storefront.Controllers.SharedController" /> class.
            </summary>
            <param name="contactFactory">The contact factory.</param>
            <param name="catalogManager">The catalog manager.</param>
        </member>
        <member name="P:Sitecore.Reference.Storefront.Controllers.SharedController.CatalogManager">
            <summary>
            Gets the catalog manager.
            </summary>
        </member>
        <member name="P:Sitecore.Reference.Storefront.Controllers.SharedController.CurrentRenderingModel">
            <summary>
            Gets the current rendering model.
            </summary>
            <value>
            The current rendering model.
            </value>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.SharedController.Layout">
            <summary>
            Gets Layout.
            </summary>
            <returns>Storefront layout</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.SharedController.NavigationExtraStructure">
            <summary>
            Gets the Navigation extra structure.
            </summary>
            <returns>NavigationExtraStructure view</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.SharedController.NavigationStructure">
            <summary>
            Gets the Navigation structure.
            </summary>
            <returns>NavigationStructure view</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.SharedController.SingleColumn">
            <summary>
            Gets the Single column.
            </summary>
            <returns>SingleColumn view</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.SharedController.ThreeColumn">
            <summary>
            Gets the Three column.
            </summary>
            <returns>ThreeColumn view</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.SharedController.TopStructure">
            <summary>
            Gets the Top structure.
            </summary>
            <returns>TopStructure view</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.SharedController.TwoColumnCenterRight">
            <summary>
            Gets the Two column center right.
            </summary>
            <returns>TwoColumnCenterRight view</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.SharedController.TwoColumnLeftCenter">
            <summary>
            Gets the Two column left center.
            </summary>
            <returns>TwoColumnLeftCenter view</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.SharedController.Breadcrumbs">
            <summary>
            Gets the Breadcrumbs.
            </summary>
            <returns>Breadcrumbs view</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.SharedController.Error">
            <summary>
            Gets the Error view.
            </summary>
            <returns>Error view</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.SharedController.ErrorImage">
            <summary>
            Gets the Error image.
            </summary>
            <returns>ErrorImage view</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.SharedController.ErrorsSummary">
            <summary>
            Gets the Errors summary.
            </summary>
            <returns>ErrorsSummary view</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.SharedController.FooterNavigation">
            <summary>
            Gets the Footer navigation.
            </summary>
            <returns>FooterNavigation view</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.SharedController.LanguageSelector">
            <summary>
            Gets th Language selector.
            </summary>
            <returns>LanguageSelector view</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.SharedController.Logo">
            <summary>
            Gets the Logo.
            </summary>
            <returns>Logo view</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.SharedController.ShareAndPrint">
            <summary>
            Gets the Share and print view.
            </summary>
            <returns>ShareAndPrint view</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.SharedController.PrintOnly">
            <summary>
            Prints the only.
            </summary>
            <returns>The PrintOnly view.</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.SharedController.SocialConnector">
            <summary>
            Gets the Social connector.
            </summary>
            <returns>SocialConnector view</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.SharedController.TitleText">
            <summary>
            Gets the Title text.
            </summary>
            <returns>TitleText view</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.SharedController.TopBarLinks">
            <summary>
            Gets the Top bar links.
            </summary>
            <returns>TopBarLinks view</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Controllers.SharedController.CultureChosen(System.String)">
            <summary>
            Cultures the chosen.
            </summary>
            <param name="culture">The culture.</param>
            <returns>The Json result.</returns>
        </member>
        <member name="T:Sitecore.Reference.Storefront.Default">
            <summary>
            The default site page.
            </summary>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Default.Page_Load(System.Object,System.EventArgs)">
            <summary>
            Handles the Load event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="F:Sitecore.Reference.Storefront.Default.form1">
            <summary>
            form1 control.
            </summary>
            <remarks>
            Auto-generated field.
            To modify move field declaration from designer file to code-behind file.
            </remarks>
        </member>
        <member name="T:Sitecore.Reference.Storefront.InputModelExtension">
            <summary>
            Define the InputModelExtension class.
            </summary>
        </member>
        <member name="M:Sitecore.Reference.Storefront.InputModelExtension.ToNewShippingParties(System.Collections.Generic.IEnumerable{Sitecore.Reference.Storefront.Models.InputModels.PartyInputModelItem})">
            <summary>
            To the parties.
            </summary>
            <param name="items">The items.</param>
            <returns>The translated list of CommerceParty objects.</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.InputModelExtension.ToNewShippingParty(Sitecore.Reference.Storefront.Models.InputModels.PartyInputModelItem)">
            <summary>
            To the party.
            </summary>
            <param name="item">The item.</param>
            <returns>The CommerceParty instance.</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.InputModelExtension.ToNewBillingParties(System.Collections.Generic.IEnumerable{Sitecore.Reference.Storefront.Models.InputModels.PartyInputModelItem})">
            <summary>
            To a new billing parties.
            </summary>
            <param name="items">The items.</param>
            <returns>A list of new commerce party objects.</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.InputModelExtension.ToNewBillingParty(Sitecore.Reference.Storefront.Models.InputModels.PartyInputModelItem)">
            <summary>
            To the party.
            </summary>
            <param name="item">The item.</param>
            <returns>The CommerceParty instance.</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.InputModelExtension.ToParty(Sitecore.Reference.Storefront.Models.InputModels.PartyInputModelItem)">
            <summary>
            To the party.
            </summary>
            <param name="item">The item.</param>
            <returns>A commecre party instance is returned.</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.InputModelExtension.ToShippingInfoList(System.Collections.Generic.List{Sitecore.Reference.Storefront.Models.InputModels.ShippingMethodInputModelItem})">
            <summary>
            To the shipping infos.
            </summary>
            <param name="items">The items.</param>
            <returns>A list of CommerceShippingInfo.</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.InputModelExtension.ToShippingInfo(Sitecore.Reference.Storefront.Models.InputModels.ShippingMethodInputModelItem)">
            <summary>
            To the shipping information.
            </summary>
            <param name="item">The item.</param>
            <returns>A CommerceShippingInfo.</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.InputModelExtension.ToCommerceCartLines(System.Collections.Generic.IEnumerable{Sitecore.Reference.Storefront.Models.InputModels.CartLineInputModelItem})">
            <summary>
            To the commerce cart lines.
            </summary>
            <param name="items">The items.</param>
            <returns>The list of translated cart lines.</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.InputModelExtension.ToCreditCardPaymentInfo(Sitecore.Reference.Storefront.Models.InputModels.CreditCardPaymentInputModelItem)">
            <summary>
            To the credit card payment information.
            </summary>
            <param name="item">The item.</param>
            <returns>The CommerceCreditCardPaymentInfo instance.</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.InputModelExtension.ToGiftCardPaymentInfo(Sitecore.Reference.Storefront.Models.InputModels.GiftCardPaymentInputModelItem)">
            <summary>
            To the gift card payment information.
            </summary>
            <param name="item">The item.</param>
            <returns>The CommerceGiftCardPaymentInfo instance.</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.InputModelExtension.ToLoyaltyCardPaymentInfo(Sitecore.Reference.Storefront.Models.InputModels.LoyaltyCardPaymentInputModelItem)">
            <summary>
            To the loyalty card payment information.
            </summary>
            <param name="item">The item.</param>
            <returns>The CommerceLoyaltyCardPaymentInfo instance.</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.InputModelExtension.GetShippingOptionType(System.String)">
            <summary>
            Gets the type of the shipping preference.
            </summary>
            <param name="optionType">Type of the option.</param>
            <returns>
            The ShippingPreferenceType enum representation.
            </returns>
        </member>
        <member name="T:Sitecore.Reference.Storefront.Managers.AccountManager">
            <summary>
            Defines the AccountManager class.
            </summary>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.AccountManager.#ctor(Sitecore.Reference.Storefront.Managers.CartManager,Sitecore.Commerce.Services.Customers.CustomerServiceProvider,Sitecore.Commerce.Contacts.ContactFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Reference.Storefront.Managers.AccountManager" /> class.
            </summary>
            <param name="cartManager">The cart manager.</param>
            <param name="customerServiceProvider">The customer service provider.</param>
            <param name="contactFactory">The contact factory.</param>
        </member>
        <member name="P:Sitecore.Reference.Storefront.Managers.AccountManager.CartManager">
            <summary>
            Gets or sets the cart manager.
            </summary>
            <value>
            The cart manager.
            </value>
        </member>
        <member name="P:Sitecore.Reference.Storefront.Managers.AccountManager.CustomerServiceProvider">
            <summary>
            Gets or sets the customer service provider.
            </summary>
            <value>
            The customer service provider.
            </value>
        </member>
        <member name="P:Sitecore.Reference.Storefront.Managers.AccountManager.ContactFactory">
            <summary>
            Gets or sets the contact factory.
            </summary>
            <value>
            The contact factory.
            </value>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.AccountManager.Login(Sitecore.Reference.Storefront.Models.SitecoreItemModels.CommerceStorefront,Sitecore.Reference.Storefront.Managers.VisitorContext,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Logins the specified storefront.
            </summary>
            <param name="storefront">The storefront.</param>
            <param name="visitorContext">The visitor context.</param>
            <param name="anonymousVisitorId">The anonymous visitor identifier.</param>
            <param name="userName">Name of the user.</param>
            <param name="password">The password.</param>
            <param name="persistent">if set to <c>true</c> [persistent].</param>
            <returns>
            True if the user is logged in; Otherwise false.
            </returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.AccountManager.Logout">
            <summary>
            Logouts the current user.
            </summary>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.AccountManager.GetUser(System.String)">
            <summary>
            Gets the user.
            </summary>
            <param name="userName">The username.</param>
            <returns>
            The manager response where the user is returned in the response.
            </returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.AccountManager.DeleteUser(Sitecore.Reference.Storefront.Models.SitecoreItemModels.CommerceStorefront,Sitecore.Reference.Storefront.Managers.VisitorContext)">
            <summary>
            Deletes the user.
            </summary>
            <param name="storefront">The storefront.</param>
            <param name="visitorContext">The visitor context.</param>
            <returns>
            The manager response where the success flag is returned in the result.
            </returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.AccountManager.UpdateUser(Sitecore.Reference.Storefront.Models.SitecoreItemModels.CommerceStorefront,Sitecore.Reference.Storefront.Managers.VisitorContext,Sitecore.Reference.Storefront.Models.ProfileModel)">
            <summary>
            Updates the user.
            </summary>
            <param name="storefront">The storefront.</param>
            <param name="visitorContext">The visitor context.</param>
            <param name="inputModel">The input model.</param>
            <returns>
            The manager response where the user is returned.
            </returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.AccountManager.GetParties(Sitecore.Reference.Storefront.Models.SitecoreItemModels.CommerceStorefront,Sitecore.Commerce.Entities.Customers.CommerceCustomer)">
            <summary>
            Gets the parties.
            </summary>
            <param name="storefront">The storefront.</param>
            <param name="customer">The user.</param>
            <returns>The manager response where the list of parties is returned in the response.</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.AccountManager.GetCurrentCustomerParties(Sitecore.Reference.Storefront.Models.SitecoreItemModels.CommerceStorefront,Sitecore.Reference.Storefront.Managers.VisitorContext)">
            <summary>
            Gets the current user parties.
            </summary>
            <param name="storefront">The storefront.</param>
            <param name="visitorContext">The visitor context.</param>
            <returns>The manager response where the list of parties is returned in the response.</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.AccountManager.RemoveParties(Sitecore.Reference.Storefront.Models.SitecoreItemModels.CommerceStorefront,Sitecore.Commerce.Entities.Customers.CommerceCustomer,System.Collections.Generic.List{Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceParty})">
            <summary>
            Removes the parties.
            </summary>
            <param name="storefront">The storefront.</param>
            <param name="user">The user.</param>
            <param name="parties">The parties.</param>
            <returns>The manager result where the success flag is returned as the Result.</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.AccountManager.RemovePartiesFromCurrentUser(Sitecore.Reference.Storefront.Models.SitecoreItemModels.CommerceStorefront,Sitecore.Reference.Storefront.Managers.VisitorContext,System.String)">
            <summary>
            Removes the parties from current user.
            </summary>
            <param name="storefront">The storefront.</param>
            <param name="visitorContext">The visitor context.</param>
            <param name="addressExternalId">The address external identifier.</param>
            <returns>
            The manager response with the successflag in the Result.
            </returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.AccountManager.UpdateParties(Sitecore.Reference.Storefront.Models.SitecoreItemModels.CommerceStorefront,Sitecore.Commerce.Entities.Customers.CommerceCustomer,System.Collections.Generic.List{Sitecore.Commerce.Entities.Party})">
            <summary>
            Updates the parties.
            </summary>
            <param name="storefront">The storefront.</param>
            <param name="user">The user.</param>
            <param name="parties">The parties.</param>
            <returns>The manager result where the success flag is returned as the Result.</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.AccountManager.AddParties(Sitecore.Reference.Storefront.Models.SitecoreItemModels.CommerceStorefront,Sitecore.Commerce.Entities.Customers.CommerceCustomer,System.Collections.Generic.List{Sitecore.Commerce.Entities.Party})">
            <summary>
            Adds the parties.
            </summary>
            <param name="storefront">The storefront.</param>
            <param name="user">The user.</param>
            <param name="parties">The parties.</param>
            <returns>The manager result where the success flag is returned as the Result.</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.AccountManager.RegisterUser(Sitecore.Reference.Storefront.Models.SitecoreItemModels.CommerceStorefront,Sitecore.Reference.Storefront.Models.InputModels.RegisterUserInputModel)">
            <summary>
            Registers the user.
            </summary>
            <param name="storefront">The storefront.</param>
            <param name="inputModel">The input model.</param>
            <returns>
            The manager result where the user is returned as the Result.
            </returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.AccountManager.UpdateUserPassword(Sitecore.Reference.Storefront.Models.SitecoreItemModels.CommerceStorefront,Sitecore.Reference.Storefront.Managers.VisitorContext,Sitecore.Reference.Storefront.Models.InputModels.ChangePasswordInputModel)">
            <summary>
            Updates the user password.
            </summary>
            <param name="storefront">The storefront.</param>
            <param name="visitorContext">The visitor context.</param>
            <param name="inputModel">The input model.</param>
            <returns>The manager response.</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.AccountManager.ResetUserPassword(Sitecore.Reference.Storefront.Models.SitecoreItemModels.CommerceStorefront,Sitecore.Reference.Storefront.Models.InputModels.ForgotPasswordInputModel)">
            <summary>
            Resets the user password.
            </summary>
            <param name="storefront">The storefront.</param>
            <param name="inputModel">The input model.</param>
            <returns>The manager response.</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.AccountManager.SetPrimaryAddress(Sitecore.Reference.Storefront.Models.SitecoreItemModels.CommerceStorefront,Sitecore.Reference.Storefront.Managers.VisitorContext,System.String)">
            <summary>
            Sets the primary address.
            </summary>
            <param name="storefront">The storefront.</param>
            <param name="visitorContext">The visitor context.</param>
            <param name="addressExternalId">The address external identifier.</param>
            <returns>The manager responsed with the success flag in the result.</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.AccountManager.ResolveCommerceUser">
            <summary>
            Resolve the CommerceUser from the Visitor
            </summary>
            <returns>
            A commerce user
            </returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.AccountManager.UpdateUserName(System.String)">
            <summary>
            Concats the user name with the current domain if it missing
            </summary>
            <param name="userName">The user's user name</param>
            <returns>The updated user name</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.AccountManager.ErrorCodeToString(System.Web.Security.MembershipCreateStatus)">
            <summary>
            Errors the code to string.
            </summary>
            <param name="createStatus">The create status.</param>
            <returns>The membership error status.</returns>
        </member>
        <member name="T:Sitecore.Reference.Storefront.Managers.CartManager">
            <summary>
            Defines the CartManager class.
            </summary>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.CartManager.#ctor(Sitecore.Reference.Storefront.Managers.InventoryManager,Sitecore.Commerce.Connect.CommerceServer.Orders.CommerceCartServiceProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Reference.Storefront.Managers.CartManager" /> class.
            </summary>
            <param name="inventoryManager">The inventory manager.</param>
            <param name="cartServiceProvider">The cart service provider.</param>
        </member>
        <member name="P:Sitecore.Reference.Storefront.Managers.CartManager.InventoryManager">
            <summary>
            Gets or sets the inventory manager.
            </summary>
            <value>
            The inventory manager.
            </value>
        </member>
        <member name="P:Sitecore.Reference.Storefront.Managers.CartManager.CartServiceProvider">
            <summary>
            Gets or sets the cart service provider.
            </summary>
            <value>
            The cart service provider.
            </value>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.CartManager.GetCurrentCart(Sitecore.Reference.Storefront.Models.SitecoreItemModels.CommerceStorefront,Sitecore.Reference.Storefront.Managers.VisitorContext,System.Boolean)">
            <summary>
            Returns the current user cart.
            </summary>
            <param name="storefront">The storefront.</param>
            <param name="visitorContext">The visitor context.</param>
            <param name="refresh">if set to <c>true</c> [refresh].</param>
            <returns>
            The manager response where the modified CommerceCart is returned in the Result.
            </returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.CartManager.GetCurrentCart(Sitecore.Reference.Storefront.Models.SitecoreItemModels.CommerceStorefront,System.String,System.Boolean)">
            <summary>
            Returns the current user cart.
            </summary>
            <param name="storefront">The storefront.</param>
            <param name="customerId">The customer identifier.</param>
            <param name="refresh">if set to <c>true</c> [refresh].</param>
            <returns>
            The manager response where the modified CommerceCart is returned in the Result.
            </returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.CartManager.UpdateCartCurrency(Sitecore.Reference.Storefront.Models.SitecoreItemModels.CommerceStorefront,Sitecore.Reference.Storefront.Managers.VisitorContext,System.String)">
            <summary>
            Updates the cart currency.
            </summary>
            <param name="storefront">The storefront.</param>
            <param name="visitorContext">The visitor context.</param>
            <param name="currencyCode">The currency code.</param>
            <returns>
            The manager response.
            </returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.CartManager.AddLineItemsToCart(Sitecore.Reference.Storefront.Models.SitecoreItemModels.CommerceStorefront,Sitecore.Reference.Storefront.Managers.VisitorContext,System.Collections.Generic.IEnumerable{Sitecore.Reference.Storefront.Models.InputModels.AddCartLineInputModel})">
            <summary>
            Adds the line item to cart.
            </summary>
            <param name="storefront">The storefront.</param>
            <param name="visitorContext">The visitor context.</param>
            <param name="inputModelList">The input model.</param>
            <returns>
            The manager response where the result is retuned indicating the success or failure of the operation.
            </returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.CartManager.RemoveLineItemFromCart(Sitecore.Reference.Storefront.Models.SitecoreItemModels.CommerceStorefront,Sitecore.Reference.Storefront.Managers.VisitorContext,System.String)">
            <summary>
            Removes the line item from cart.
            </summary>
            <param name="storefront">The storefront.</param>
            <param name="visitorContext">The visitor context.</param>
            <param name="externalCartLineId">The external cart line identifier.</param>
            <returns>
            The manager response where the modified CommerceCart is returned in the Result.
            </returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.CartManager.ChangeLineQuantity(Sitecore.Reference.Storefront.Models.SitecoreItemModels.CommerceStorefront,Sitecore.Reference.Storefront.Managers.VisitorContext,Sitecore.Reference.Storefront.Models.InputModels.UpdateCartLineInputModel)">
            <summary>
            Changes the line quantity.
            </summary>
            <param name="storefront">The storefront.</param>
            <param name="visitorContext">The visitor context.</param>
            <param name="inputModel">The input model.</param>
            <returns>
            The manager response where the modified CommerceCart is returned in the Result.
            </returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.CartManager.AddPromoCodeToCart(Sitecore.Reference.Storefront.Models.SitecoreItemModels.CommerceStorefront,Sitecore.Reference.Storefront.Managers.VisitorContext,System.String)">
            <summary>
            Adds the promo code to cart.
            </summary>
            <param name="storefront">The storefront.</param>
            <param name="visitorContext">The visitor context.</param>
            <param name="promoCode">The promo code.</param>
            <returns>
            The manager response where the modified CommerceCart is returned in the Result.
            </returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.CartManager.RemovePromoCodeFromCart(Sitecore.Reference.Storefront.Models.SitecoreItemModels.CommerceStorefront,Sitecore.Reference.Storefront.Managers.VisitorContext,System.String)">
            <summary>
            Removes the promo code from cart.
            </summary>
            <param name="storefront">The storefront.</param>
            <param name="visitorContext">The visitor context.</param>
            <param name="promoCode">The promo code.</param>
            <returns>
            The manager response where the modified CommerceCart is returned in the Result.
            </returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.CartManager.SetShippingMethods(Sitecore.Reference.Storefront.Models.SitecoreItemModels.CommerceStorefront,Sitecore.Reference.Storefront.Managers.VisitorContext,Sitecore.Reference.Storefront.Models.InputModels.SetShippingMethodsInputModel)">
            <summary>
            Sets the shipping methods.
            </summary>
            <param name="storefront">The storefront.</param>
            <param name="visitorContext">The visitor context.</param>
            <param name="inputModel">The input model.</param>
            <returns>
            The manager response where the modified CommerceCart is returned in the Result.
            </returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.CartManager.SetPaymentMethods(Sitecore.Reference.Storefront.Models.SitecoreItemModels.CommerceStorefront,Sitecore.Reference.Storefront.Managers.VisitorContext,Sitecore.Reference.Storefront.Models.InputModels.PaymentInputModel)">
            <summary>
            Sets the payment methods.
            </summary>
            <param name="storefront">The storefront.</param>
            <param name="visitorContext">The visitor context.</param>
            <param name="inputModel">The input model.</param>
            <returns>The manager response with a cart in the result.</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.CartManager.MergeCarts(Sitecore.Reference.Storefront.Models.SitecoreItemModels.CommerceStorefront,Sitecore.Reference.Storefront.Managers.VisitorContext,System.String,Sitecore.Commerce.Entities.Carts.Cart)">
            <summary>
            Merges the carts.
            </summary>
            <param name="storefront">The storefront.</param>
            <param name="visitorContext">The visitor context.</param>
            <param name="anonymousVisitorId">The anonymous visitor identifier.</param>
            <param name="anonymousVisitorCart">The anonymous visitor cart.</param>
            <returns>
            The manager response where the merged cart is returned in the result.
            </returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.CartManager.AddPartyToCart(Sitecore.Reference.Storefront.Models.SitecoreItemModels.CommerceStorefront,Sitecore.Reference.Storefront.Managers.VisitorContext,Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceCart,Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceParty)">
            <summary>
            Adds a party to a cart
            </summary>
            <param name="storefront">The Storefront Context</param>
            <param name="visitorContext">The Visitor Context</param>
            <param name="cart">the cart</param>
            <param name="party">the party info</param>
            <returns>the updated cart</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.CartManager.RemovePartiesFromCart(Sitecore.Reference.Storefront.Models.SitecoreItemModels.CommerceStorefront,Sitecore.Reference.Storefront.Managers.VisitorContext,Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceCart,System.Collections.Generic.List{Sitecore.Commerce.Entities.Party})">
            <summary>
            Removes party info from a cart
            </summary>
            <param name="storefront">The Storefront Context</param>
            <param name="visitorContext">The Visitor Context</param>
            <param name="cart">the cart</param>
            <param name="parties">The parties.</param>
            <returns>
            the updated cart
            </returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.CartManager.RemoveAllShippingParties(Sitecore.Reference.Storefront.Models.SitecoreItemModels.CommerceStorefront,Sitecore.Reference.Storefront.Managers.VisitorContext,Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceCart)">
            <summary>
            Removes all shipping parties.
            </summary>
            <param name="storefront">The storefront.</param>
            <param name="visitorContext">The visitor context.</param>
            <param name="cart">The cart.</param>
            <returns>The manager response with a cart in the result.</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.CartManager.RemoveAllBillingParties(Sitecore.Reference.Storefront.Models.SitecoreItemModels.CommerceStorefront,Sitecore.Reference.Storefront.Managers.VisitorContext,Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceCart)">
            <summary>
            Removes all billing parties.
            </summary>
            <param name="storefront">The storefront.</param>
            <param name="visitorContext">The visitor context.</param>
            <param name="cart">The cart.</param>
            <returns>The manager response with a cart in the result.</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.CartManager.RemoveAllPaymentMethods(Sitecore.Reference.Storefront.Models.SitecoreItemModels.CommerceStorefront,Sitecore.Reference.Storefront.Managers.VisitorContext,Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceCart)">
            <summary>
            Removes all payment methods.
            </summary>
            <param name="storefront">The storefront.</param>
            <param name="visitorContext">The visitor context.</param>
            <param name="cart">The cart.</param>
            <returns>The manager response with a cart in the result.</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.CartManager.RemoveAllShippingMethods(Sitecore.Reference.Storefront.Models.SitecoreItemModels.CommerceStorefront,Sitecore.Reference.Storefront.Managers.VisitorContext,Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceCart)">
            <summary>
            Removes all shipping methods.
            </summary>
            <param name="storefront">The storefront.</param>
            <param name="visitorContext">The visitor context.</param>
            <param name="cart">The cart.</param>
            <returns>The manager response with the cart result and returned cart.</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.CartManager.AddPaymentInfoToCart(Sitecore.Reference.Storefront.Models.SitecoreItemModels.CommerceStorefront,Sitecore.Reference.Storefront.Managers.VisitorContext,Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceCart,Sitecore.Commerce.Entities.Carts.PaymentInfo,Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceParty,System.Boolean)">
            <summary>
            Adds payment info to a cart
            </summary>
            <param name="storefront">The Storefront Context</param>
            <param name="visitorContext">The Visitor Context</param>
            <param name="cart">the cart</param>
            <param name="info">the payment info</param>
            <param name="party">the party info</param>
            <param name="refreshCart">if set to <c>true</c> the cart will be re-calculated using the Commerce Server pipelines.</param>
            <returns>
            the updated cart
            </returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.CartManager.UpdateCart(Sitecore.Reference.Storefront.Models.SitecoreItemModels.CommerceStorefront,Sitecore.Reference.Storefront.Managers.VisitorContext,Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceCart,Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceCart)">
            <summary>
            Updates the cart.
            </summary>
            <param name="storefront">The storefront.</param>
            <param name="visitorContext">The visitor context.</param>
            <param name="cart">The cart.</param>
            <param name="cartChanges">The cart changes.</param>
            <returns>The manager response with the updated cart.</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.CartManager.LoadCartByName(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Loads the the cart by given its cart name.
            </summary>
            <param name="shopName">Name of the shop.</param>
            <param name="cartName">Name of the cart.</param>
            <param name="userName">Name of the user.</param>
            <param name="refreshCart">if set to <c>true</c> [refresh cart].</param>
            <returns>The cart result.</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.CartManager.RemoveCartLines(Sitecore.Commerce.Entities.Carts.Cart,System.Collections.Generic.IEnumerable{Sitecore.Commerce.Entities.Carts.CartLine},System.Boolean)">
            <summary>
            Removes product from the visitor's cart.
            </summary>
            <param name="cart">The cart.</param>
            <param name="cartLines">The cart lines.</param>
            <param name="refreshCart">if set to <c>true</c> [refresh cart].</param>
            <returns>
            the cart result.
            </returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.CartManager.UpdatePartiesInCart(Sitecore.Reference.Storefront.Models.SitecoreItemModels.CommerceStorefront,Sitecore.Reference.Storefront.Managers.VisitorContext,Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceCart,System.Collections.Generic.List{Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceParty})">
            <summary>
            Updates party info on a cart
            </summary>
            <param name="storefront">The Storefront Context</param>
            <param name="visitorContext">The Visitor Context</param>
            <param name="cart">the cart</param>
            <param name="parties">the party info</param>
            <returns>the updated cart</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.CartManager.RemovePaymentInfoFromCart(Sitecore.Reference.Storefront.Models.SitecoreItemModels.CommerceStorefront,Sitecore.Reference.Storefront.Managers.VisitorContext,Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceCart,System.Collections.Generic.List{Sitecore.Commerce.Entities.Carts.PaymentInfo},System.Boolean)">
            <summary>
            Removes Payment info from a cart
            </summary>
            <param name="storefront">The Storefront Context</param>
            <param name="visitorContext">The Visitor Context</param>
            <param name="cart">the cart</param>
            <param name="info">the payment info</param>
            <param name="refreshCart">if set to <c>true</c> the cart will be re-calculated using the Commerce Server pipelines.</param>
            <returns>
            the updated cart
            </returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.CartManager.AddShippingInfoToCart(Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceCart,Sitecore.Commerce.Entities.Shipping.ShippingOptionType,System.Collections.Generic.IEnumerable{Sitecore.Commerce.Entities.Carts.ShippingInfo})">
            <summary>
            Adds shipping info to a cart
            </summary>
            <param name="cart">The cart.</param>
            <param name="orderShippingPreferenceType">Type of the order shipping preference.</param>
            <param name="shipments">The shipments.</param>
            <returns>
            the updated cart
            </returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.CartManager.UpdateStockInformation(Sitecore.Reference.Storefront.Models.SitecoreItemModels.CommerceStorefront,Sitecore.Reference.Storefront.Managers.VisitorContext,Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceCartLine,System.String)">
            <summary>
            Updates the stock information.
            </summary>
            <param name="storefront">The storefront.</param>
            <param name="visitorContext">The visitor context.</param>
            <param name="cartLine">The cart line.</param>
            <param name="catalogName">Name of the catalog.</param>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.CartManager.GetEmailAddressPartiesFromShippingMethods(System.Collections.Generic.List{Sitecore.Reference.Storefront.Models.InputModels.ShippingMethodInputModelItem})">
            <summary>
            Gets the email address parties from shipping methods.
            </summary>
            <param name="inputModelList">The input model list.</param>
            <returns>A list of email parties if the email shipping method has been specified.</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.CartManager.SetShippingAddresses(Sitecore.Reference.Storefront.Models.SitecoreItemModels.CommerceStorefront,Sitecore.Reference.Storefront.Managers.VisitorContext,Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceCart,System.Collections.Generic.List{Sitecore.Reference.Storefront.Models.InputModels.PartyInputModelItem},System.Collections.Generic.List{Sitecore.Commerce.Entities.EmailParty})">
            <summary>
            Sets the shipping addresses.
            </summary>
            <param name="storefront">The storefront.</param>
            <param name="visitorContext">The visitor context.</param>
            <param name="cart">The cart.</param>
            <param name="shippingAddresses">The shipping addresses.</param>
            <param name="emailPartyList">The email party list.</param>
            <returns>
            The manager response with a cart in the result.
            </returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.CartManager.GetPartiesForPrefix(Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceCart,System.String)">
            <summary>
            Gets the parties for prefix.
            </summary>
            <param name="cart">The cart.</param>
            <param name="prefix">The prefix.</param>
            <returns>The list of Party instances that match the given prefix value.</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.CartManager.AddBasketErrorsToResult(Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceCart,Sitecore.Commerce.Services.ServiceProviderResult)">
            <summary>
            Adds the basket errors to result.
            </summary>
            <param name="cart">The cart.</param>
            <param name="result">The result.</param>
        </member>
        <member name="T:Sitecore.Reference.Storefront.Managers.CatalogManager">
            <summary>
            CatalogManager class
            </summary>  
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.CatalogManager.#ctor(Sitecore.Commerce.Services.Catalog.CatalogServiceProvider,Sitecore.Commerce.Services.Globalization.GlobalizationServiceProvider,Sitecore.Reference.Storefront.Managers.PricingManager,Sitecore.Reference.Storefront.Managers.InventoryManager)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Reference.Storefront.Managers.CatalogManager" /> class.
            </summary>
            <param name="catalogServiceProvider">The catalog service provider.</param>
            <param name="globalizationServiceProvider">The globalization service provider.</param>
            <param name="pricingManager">The pricing manager.</param>
            <param name="inventoryManager">The inventory manager.</param>
        </member>
        <member name="P:Sitecore.Reference.Storefront.Managers.CatalogManager.CatalogServiceProvider">
            <summary>
            Gets or sets the catalog service provider.
            </summary>
        </member>
        <member name="P:Sitecore.Reference.Storefront.Managers.CatalogManager.GlobalizationServiceProvider">
            <summary>
            Gets or sets the globalization service provider.
            </summary>
            <value>
            The globalization service provider.
            </value>
        </member>
        <member name="P:Sitecore.Reference.Storefront.Managers.CatalogManager.InventoryManager">
            <summary>
            Gets or sets the inventory manager.
            </summary>
            <value>
            The inventory manager.
            </value>
        </member>
        <member name="P:Sitecore.Reference.Storefront.Managers.CatalogManager.PricingManager">
            <summary>
            Gets or sets the pricing manager.
            </summary>
            <value>
            The pricing manager.
            </value>
        </member>
        <member name="P:Sitecore.Reference.Storefront.Managers.CatalogManager.CurrentCatalog">
            <summary>
            Gets the current catalog being accessed
            </summary>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.CatalogManager.GetRelationshipsFromItem(Sitecore.Reference.Storefront.Models.SitecoreItemModels.CommerceStorefront,Sitecore.Reference.Storefront.Managers.VisitorContext,Sitecore.Data.Items.Item,Sitecore.Mvc.Presentation.Rendering)">
            <summary>
            The <see cref="T:Sitecore.Reference.Storefront.Models.RelatedCatalogItemsViewModel" /> representing the related catalog items.
            </summary>
            <param name="storefront">The storefront.</param>
            <param name="visitorContext">The visitor context.</param>
            <param name="catalogItem">The catalog item.</param>
            <param name="rendering">The target renering.</param>
            <returns>
            The related catalog item view model.
            </returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.CatalogManager.GetRelationshipsFromField(Sitecore.Reference.Storefront.Models.SitecoreItemModels.CommerceStorefront,Sitecore.Reference.Storefront.Managers.VisitorContext,Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.RelationshipField,Sitecore.Mvc.Presentation.Rendering)">
            <summary>
            Gets a lists of target items from a relationship field
            </summary>
            <param name="storefront">The storefront.</param>
            <param name="visitorContext">The visitor context.</param>
            <param name="field">the relationship field</param>
            <param name="rendering">The target renering.</param>
            <returns>
            a list of relationship targets or null if no items found
            </returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.CatalogManager.GetRelationshipsFromField(Sitecore.Reference.Storefront.Models.SitecoreItemModels.CommerceStorefront,Sitecore.Reference.Storefront.Managers.VisitorContext,Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.RelationshipField,Sitecore.Mvc.Presentation.Rendering,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Gets a lists of target items from a relationship field
            </summary>
            <param name="storefront">The storefront.</param>
            <param name="visitorContext">The visitor context.</param>
            <param name="field">the relationship field</param>
            <param name="rendering">The target renering.</param>
            <param name="relationshipNames">the names of the relationships, to retrieve (for example upsell).</param>
            <returns>
            a list of relationship targets or null if no items found
            </returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.CatalogManager.VisitedCategoryPage(Sitecore.Reference.Storefront.Models.SitecoreItemModels.CommerceStorefront,System.String,System.String)">
            <summary>
            Registers an event specifying that the category page has been visited.
            </summary>
            <param name="storefront">The storefront.</param>
            <param name="categoryId">The category identifier.</param>
            <param name="categoryName">The category name.</param>
            <returns>
            A <see cref="T:Sitecore.Commerce.Services.Catalog.CatalogResult" /> specifying the result of the service request.
            </returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.CatalogManager.VisitedProductDetailsPage(Sitecore.Reference.Storefront.Models.SitecoreItemModels.CommerceStorefront,System.String,System.String,System.String,System.String)">
            <summary>
            Registers an event specifying that the product details page has been visited.
            </summary>
            <param name="storefront">The storefront.</param>
            <param name="productId">the product id.</param>
            <param name="productName">Name of the product.</param>
            <param name="parentCategoryId">The parent category identifier.</param>
            <param name="parentCategoryName">the parent category name.</param>
            <returns>
            A <see cref="T:Sitecore.Commerce.Services.Catalog.CatalogResult" /> specifying the result of the service request.
            </returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.CatalogManager.GetProductSearchResults(Sitecore.Data.Items.Item,Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceSearchOptions)">
            <summary>
            This method returns the ProductSearchResults for a datasource
            </summary>
            <param name="dataSource">The datasource to perform the search with</param>
            <param name="productSearchOptions">The search options.</param>
            <returns>A ProductSearchResults</returns>     
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.CatalogManager.GetMultipleProductSearchResults(Sitecore.Data.Items.BaseItem,Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceSearchOptions)">
            <summary>
            This method returns a list of ProductSearchResults for a datasource
            </summary>
            <param name="dataSource">The datasource to perform the searches with</param>
            <param name="productSearchOptions">The search options.</param>
            <returns>A list of ProductSearchResults</returns>       
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.CatalogManager.GetCurrentCategoryByUrl">
            <summary>
            This method returns the current category by URL
            </summary>
            <returns>The category.</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.CatalogManager.GetCategory(System.String)">
            <summary>
            Get category by id
            </summary>
            <param name="categoryId">The category identifier.</param>
            <returns>The category.</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.CatalogManager.GetCategory(Sitecore.Data.Items.Item)">
            <summary>
            Get category by item
            </summary>
            <param name="item">The item.</param>
            <returns>The catgory.</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.CatalogManager.GetProductPrice(Sitecore.Reference.Storefront.Managers.VisitorContext,Sitecore.Reference.Storefront.Models.ProductViewModel)">
            <summary>
            Gets the product price.
            </summary>
            <param name="visitorContext">The visitor context.</param>
            <param name="productViewModel">The product view model.</param>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.CatalogManager.GetProductBulkPrices(Sitecore.Reference.Storefront.Managers.VisitorContext,System.Collections.Generic.List{Sitecore.Reference.Storefront.Models.ProductViewModel})">
            <summary>
            Gets the product price.
            </summary>
            <param name="visitorContext">The visitor context.</param>
            <param name="productViewModels">The product view models.</param>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.CatalogManager.GetProductRating(Sitecore.Data.Items.Item)">
            <summary>
            Gets the product rating.
            </summary>
            <param name="productItem">The product item.</param>
            <returns>The product rating</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.CatalogManager.VisitedProductDetailsPage(Sitecore.Reference.Storefront.Models.SitecoreItemModels.CommerceStorefront)">
            <summary>
            Visiteds the product details page.
            </summary>
            <param name="storefront">The storefront.</param>
            <returns>
            The manager response
            </returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.CatalogManager.FacetApplied(Sitecore.Reference.Storefront.Models.SitecoreItemModels.CommerceStorefront,System.String,System.Boolean)">
            <summary>
            Facets the applied.
            </summary>
            <param name="storefront">The storefront.</param>
            <param name="facet">The facet.</param>
            <param name="isApplied">if set to <c>true</c> [is applied].</param>
            <returns>The manager response.</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.CatalogManager.SortOrderApplied(Sitecore.Reference.Storefront.Models.SitecoreItemModels.CommerceStorefront,System.String,System.Nullable{Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.SortDirection})">
            <summary>
            Sorts the order applied.
            </summary>
            <param name="storefront">The storefront.</param>
            <param name="sortKey">The sort key.</param>
            <param name="sortDirection">The sort direction.</param>
            <returns>The manager response.</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.CatalogManager.RegisterSearchEvent(Sitecore.Reference.Storefront.Models.SitecoreItemModels.CommerceStorefront,System.String,System.Int32)">
            <summary>
            Registers the search event.
            </summary>
            <param name="storefront">The storefront.</param>
            <param name="searchKeyword">The search keyword.</param>
            <param name="numberOfHits">The number of hits.</param>
            <returns>
            The manager response
            </returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.CatalogManager.RaiseCultureChosenPageEvent(Sitecore.Reference.Storefront.Models.SitecoreItemModels.CommerceStorefront,System.String)">
            <summary>
            Raises the culture chosen page event.
            </summary>
            <param name="storefront">The storefront.</param>
            <param name="culture">The culture.</param>
            <returns>The manager response.</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.CatalogManager.GetChildProducts(Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceSearchOptions,Sitecore.Data.Items.Item)">
            <summary>
            This method returns child products for this category
            </summary>
            <param name="searchOptions">The options to perform the search with</param>
            <param name="categoryItem">The category item whose children to retrieve</param>
            <returns>A list of child products</returns>        
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.CatalogManager.CleanLanguageFromFilter(System.String)">
            <summary>
            Cleans the language from filter.
            </summary>
            <param name="filter">The filter.</param>
            <returns>The updated filter.</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.CatalogManager.GroupRelationshipsByDescription(Sitecore.Reference.Storefront.Models.SitecoreItemModels.CommerceStorefront,Sitecore.Reference.Storefront.Managers.VisitorContext,Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.RelationshipField,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.CatalogRelationshipInformation},Sitecore.Mvc.Presentation.Rendering)">
            <summary>
            Groups the provided relationships by name, and converts them into a list of <see cref="T:Sitecore.Reference.Storefront.Models.CategoryViewModel" /> objects.
            </summary>
            <param name="storefront">The storefront.</param>
            <param name="visitorContext">The visitor context.</param>
            <param name="field">The relationship field.</param>
            <param name="relationshipNames">The names of the relationships to retrieve.</param>
            <param name="productRelationshipInfoList">The list of rerlationships to group and convert.</param>
            <param name="rendering">The rendering.</param>
            <returns>
            The grouped relationships converted into a list of <see cref="T:Sitecore.Reference.Storefront.Models.CategoryViewModel" /> objects.
            </returns>
        </member>
        <member name="T:Sitecore.Reference.Storefront.Managers.GiftCardManager">
            <summary>
            Defines the GiftCardManager class.
            </summary>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.GiftCardManager.#ctor(Sitecore.Commerce.Services.GiftCards.GiftCardServiceProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Reference.Storefront.Managers.GiftCardManager"/> class.
            </summary>
            <param name="giftCardServiceProvider">The gift card service provider.</param>
        </member>
        <member name="P:Sitecore.Reference.Storefront.Managers.GiftCardManager.GiftCardServiceProvider">
            <summary>
            Gets or sets the gift card service provider.
            </summary>
            <value>
            The gift card service provider.
            </value>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.GiftCardManager.GetGiftCardBalance(Sitecore.Reference.Storefront.Models.SitecoreItemModels.CommerceStorefront,Sitecore.Reference.Storefront.Managers.VisitorContext,System.String)">
            <summary>
            Gets the gift card balance.
            </summary>
            <param name="storefront">The storefront.</param>
            <param name="visitorContext">The visitor context.</param>
            <param name="giftCardId">The gift card identifier.</param>
            <returns>
            The manager response where the gift card balance is returned in the Result.
            </returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.GiftCardManager.GetGiftCard(System.String,System.String)">
            <summary>
            Gets the gift card.
            </summary>
            <param name="giftCardId">The gift card identifier.</param>
            <param name="shopName">Name of the shop.</param>
            <returns>
            A gift card if found
            </returns>
        </member>
        <member name="T:Sitecore.Reference.Storefront.Managers.InventoryManager">
            <summary>
            Defines the InventoryManager class.
            </summary>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.InventoryManager.#ctor(Sitecore.Commerce.Services.Inventory.InventoryServiceProvider,Sitecore.Commerce.Contacts.ContactFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Reference.Storefront.Managers.InventoryManager" /> class.
            </summary>
            <param name="inventoryServiceProvider">The inventory service provider.</param>
            <param name="contactFactory">The contact factory.</param>
        </member>
        <member name="P:Sitecore.Reference.Storefront.Managers.InventoryManager.InventoryServiceProvider">
            <summary>
            Gets or sets the inventory service provider.
            </summary>
            <value>
            The inventory service provider.
            </value>
        </member>
        <member name="P:Sitecore.Reference.Storefront.Managers.InventoryManager.ContactFactory">
            <summary>
            Gets or sets the contact factory.
            </summary>
            <value>
            The contact factory.
            </value>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.InventoryManager.GetProductsStockStatusForList(Sitecore.Reference.Storefront.Models.SitecoreItemModels.CommerceStorefront,System.Collections.Generic.List{Sitecore.Reference.Storefront.Models.ProductViewModel})">
            <summary>
            Gets the products stock status where lists of products are displayed on the site.
            </summary>
            <param name="storefront">The storefront.</param>
            <param name="productViewModels">The product view models.</param>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.InventoryManager.GetProductsStockStatus(Sitecore.Reference.Storefront.Models.SitecoreItemModels.CommerceStorefront,System.Collections.Generic.List{Sitecore.Reference.Storefront.Models.ProductViewModel})">
            <summary>
            Gets the product stock status.
            </summary>
            <param name="storefront">The storefront.</param>
            <param name="productViewModels">The product view models.</param>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.InventoryManager.GetStockInformation(Sitecore.Reference.Storefront.Models.SitecoreItemModels.CommerceStorefront,System.Collections.Generic.IEnumerable{Sitecore.Commerce.Entities.Inventory.InventoryProduct},Sitecore.Commerce.Entities.Inventory.StockDetailsLevel)">
            <summary>
            Gets the stock information.
            </summary>
            <param name="storefront">The storefront.</param>
            <param name="products">The products.</param>
            <param name="detailsLevel">The details level.</param>
            <returns>
            The manager response which returns an enumerable collection of StockInformation in the Result.
            </returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.InventoryManager.GetPreOrderableInformation(Sitecore.Reference.Storefront.Models.SitecoreItemModels.CommerceStorefront,System.Collections.Generic.IEnumerable{Sitecore.Commerce.Entities.Inventory.InventoryProduct})">
            <summary>
            Gets the pre orderable information.
            </summary>
            <param name="storefront">The storefront.</param>
            <param name="products">The products.</param>
            <returns>The manager response which returns an enumerable collection of OrderableInformation in the Result.</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.InventoryManager.GetBackOrderableInformation(Sitecore.Reference.Storefront.Models.SitecoreItemModels.CommerceStorefront,System.Collections.Generic.IEnumerable{Sitecore.Commerce.Entities.Inventory.InventoryProduct})">
            <summary>
            Gets the back orderable information.
            </summary>
            <param name="storefront">The storefront.</param>
            <param name="products">The products.</param>
            <returns>The manager response which returns an enumerable collection of OrderableInformation in the Result.</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.InventoryManager.VisitedProductStockStatus(Sitecore.Reference.Storefront.Models.SitecoreItemModels.CommerceStorefront,Sitecore.Commerce.Entities.Inventory.StockInformation,System.String)">
            <summary>
            Visiteds the product stock status.
            </summary>
            <param name="storefront">The storefront.</param>
            <param name="stockInformation">The stock information.</param>
            <param name="location">The location.</param>
            <returns>The manager response which returns success flag in the Result.</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.InventoryManager.VisitorSignupForStockNotification(Sitecore.Reference.Storefront.Models.SitecoreItemModels.CommerceStorefront,Sitecore.Reference.Storefront.Models.InputModels.SignUpForNotificationInputModel,System.String)">
            <summary>
            Visitors the sign up for stock notification.
            </summary>
            <param name="storefront">The storefront.</param>
            <param name="model">The model.</param>
            <param name="location">The location.</param>
            <returns>
            The manager response which returns success flag in the Result.
            </returns>
        </member>
        <member name="T:Sitecore.Reference.Storefront.Managers.ManagerResponse`2">
            <summary>
            Defined the ManagerResponse class.
            </summary>
            <typeparam name="TServiceProviderResult">The type of the service provider result.</typeparam>
            <typeparam name="TResult">The type of the result.</typeparam>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.ManagerResponse`2.#ctor(`0,`1)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Reference.Storefront.Managers.ManagerResponse`2"/> class.
            </summary>
            <param name="serviceProviderResult">The service provider result instance.</param>
            <param name="result">The result.</param>
        </member>
        <member name="P:Sitecore.Reference.Storefront.Managers.ManagerResponse`2.ServiceProviderResult">
            <summary>
            Gets or sets the service provider result.
            </summary>
            <value>
            The service provider result.
            </value>
        </member>
        <member name="P:Sitecore.Reference.Storefront.Managers.ManagerResponse`2.Result">
            <summary>
            Gets or sets the result.
            </summary>
            <value>
            The result.
            </value>
        </member>
        <member name="T:Sitecore.Reference.Storefront.Managers.PaymentManager">
            <summary>
            Defines the PaymentManager class.
            </summary>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.PaymentManager.#ctor(Sitecore.Commerce.Services.Payments.PaymentServiceProvider,Sitecore.Reference.Storefront.Managers.CartManager)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Reference.Storefront.Managers.PaymentManager" /> class.
            </summary>
            <param name="paymentServiceProvider">The payment service provider.</param>
            <param name="cartManager">The cart manager.</param>
        </member>
        <member name="P:Sitecore.Reference.Storefront.Managers.PaymentManager.PaymentServiceProvider">
            <summary>
            Gets or sets the payment service provider.
            </summary>
            <value>
            The payment service provider.
            </value>
        </member>
        <member name="P:Sitecore.Reference.Storefront.Managers.PaymentManager.CartManager">
            <summary>
            Gets or sets the cart manager.
            </summary>
            <value>
            The cart manager.
            </value>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.PaymentManager.GetPaymentOptions(Sitecore.Reference.Storefront.Models.SitecoreItemModels.CommerceStorefront,Sitecore.Reference.Storefront.Managers.VisitorContext)">
            <summary>
            Gets the payment options.
            </summary>
            <param name="storefront">The storefront.</param>
            <param name="visitorContext">The visitor context.</param>
            <returns>
            The manager response where the payment option list is returned in the Result.
            </returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.PaymentManager.GetPaymentMethods(Sitecore.Reference.Storefront.Models.SitecoreItemModels.CommerceStorefront,Sitecore.Reference.Storefront.Managers.VisitorContext,Sitecore.Commerce.Entities.Payments.PaymentOption)">
            <summary>
            Gets the payment methods.
            </summary>
            <param name="storefront">The storefront.</param>
            <param name="visitorContext">The visitor context.</param>
            <param name="paymentOption">The payment option.</param>
            <returns>The manager response where the payment method list is returned in the Result.</returns>
        </member>
        <member name="T:Sitecore.Reference.Storefront.Managers.OrderManager">
            <summary>
            Defines the OrderManager class.
            </summary>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.OrderManager.#ctor(Sitecore.Commerce.Connect.CommerceServer.Orders.CommerceOrderServiceProvider,Sitecore.Reference.Storefront.Managers.CartManager)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Reference.Storefront.Managers.OrderManager" /> class.
            </summary>
            <param name="orderServiceProvider">The order service provider.</param>
            <param name="cartManager">The cart manager.</param>
        </member>
        <member name="P:Sitecore.Reference.Storefront.Managers.OrderManager.OrderServiceProvider">
            <summary>
            Gets or sets the order service provider.
            </summary>
            <value>
            The order service provider.
            </value>
        </member>
        <member name="P:Sitecore.Reference.Storefront.Managers.OrderManager.CartManager">
            <summary>
            Gets or sets the cart manager.
            </summary>
            <value>
            The cart manager.
            </value>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.OrderManager.SubmitVisitorOrder(Sitecore.Reference.Storefront.Models.SitecoreItemModels.CommerceStorefront,Sitecore.Reference.Storefront.Managers.VisitorContext,Sitecore.Reference.Storefront.Models.InputModels.SubmitOrderInputModel)">
            <summary>
            Submits the visitor order.
            </summary>
            <param name="storefront">The storefront.</param>
            <param name="visitorContext">The visitor context.</param>
            <param name="inputModel">The input model.</param>
            <returns>
            The manager response where the new CommerceOrder is returned in the Result.
            </returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.OrderManager.GetAvailableRegions(Sitecore.Reference.Storefront.Models.SitecoreItemModels.CommerceStorefront,Sitecore.Reference.Storefront.Managers.VisitorContext,System.String)">
            <summary>
            Gets the available states.
            </summary>
            <param name="storefront">The storefront.</param>
            <param name="visitorContext">The visitor context.</param>
            <param name="countryCode">The country code.</param>
            <returns>
            The manager response where the available states are returned in the Result.
            </returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.OrderManager.GetOrders(System.String,System.String)">
            <summary>
            Gets the orders.
            </summary>
            <param name="customerId">The customer identifier.</param>
            <param name="shopName">Name of the shop.</param>
            <returns>The manager response where list of order headers are returned in the Result.</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.OrderManager.GetOrderDetails(Sitecore.Reference.Storefront.Models.SitecoreItemModels.CommerceStorefront,Sitecore.Reference.Storefront.Managers.VisitorContext,System.String)">
            <summary>
            Gets the order details.
            </summary>
            <param name="storefront">The storefront.</param>
            <param name="visitorContext">The visitor context.</param>
            <param name="orderId">The order identifier.</param>
            <returns>
            The manager response where the order detail returned in the Result.
            </returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.OrderManager.GetAvailableCountries">
            <summary>
            Gets the available countries.
            </summary>
            <returns>The manager response where the available country dictionary is returned in the Result.</returns>
        </member>
        <member name="T:Sitecore.Reference.Storefront.Managers.PricingManager">
            <summary>
            Defines the PricingManager class.
            </summary>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.PricingManager.#ctor(Sitecore.Commerce.Services.Prices.PricingServiceProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Reference.Storefront.Managers.PricingManager"/> class.
            </summary>
            <param name="pricingServiceProvider">The pricing service provider.</param>
        </member>
        <member name="P:Sitecore.Reference.Storefront.Managers.PricingManager.PricingServiceProvider">
            <summary>
            Gets or sets the pricing service provider.
            </summary>
            <value>
            The pricing service provider.
            </value>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.PricingManager.GetProductPrices(Sitecore.Reference.Storefront.Models.SitecoreItemModels.CommerceStorefront,Sitecore.Reference.Storefront.Managers.VisitorContext,System.String,System.String,System.Boolean,System.String[])">
            <summary>
            Gets the product prices.
            </summary>
            <param name="storefront">The storefront.</param>
            <param name="visitorContext">The visitor context.</param>
            <param name="catalogName">Name of the catalog.</param>
            <param name="productId">The product identifier.</param>
            <param name="includeVariants">if set to <c>true</c> [include variants].</param>
            <param name="priceTypeIds">The price type ids.</param>
            <returns>
            The manager response with the list of prices in the Result.
            </returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.PricingManager.GetProductBulkPrices(Sitecore.Reference.Storefront.Models.SitecoreItemModels.CommerceStorefront,Sitecore.Reference.Storefront.Managers.VisitorContext,System.String,System.Collections.Generic.IEnumerable{System.String},System.String[])">
            <summary>
            Gets the product bulk prices.
            </summary>
            <param name="storefront">The storefront.</param>
            <param name="visitorContext">The visitor context.</param>
            <param name="catalogName">Name of the catalog.</param>
            <param name="productIds">The product ids.</param>
            <param name="priceTypeIds">The price type ids.</param>
            <returns>
            The manager response with the list of prices in the Result.
            </returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.PricingManager.GetSupportedCurrencies(Sitecore.Reference.Storefront.Models.SitecoreItemModels.CommerceStorefront,System.String)">
            <summary>
            Gets the supported currencies.
            </summary>
            <param name="storefront">The storefront.</param>
            <param name="catalogName">Name of the catalog.</param>
            <returns>The manager response.</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.PricingManager.CurrencyChosenPageEvent(Sitecore.Reference.Storefront.Models.SitecoreItemModels.CommerceStorefront,System.String)">
            <summary>
            Generates the currency chosen page event.
            </summary>
            <param name="storefront">The storefront.</param>
            <param name="currency">The currency.</param>
            <returns>The manager response.</returns>
        </member>
        <member name="T:Sitecore.Reference.Storefront.Managers.ShippingManager">
            <summary>
            Defines the ShippingManager class.
            </summary>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.ShippingManager.#ctor(Sitecore.Commerce.Services.Shipping.ShippingServiceProvider,Sitecore.Reference.Storefront.Managers.CartManager)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Reference.Storefront.Managers.ShippingManager"/> class.
            </summary>
            <param name="shippingServiceProvider">The shipping service provider.</param>
            <param name="cartManager">The cart manager.</param>
        </member>
        <member name="P:Sitecore.Reference.Storefront.Managers.ShippingManager.ShippingServiceProvider">
            <summary>
            Gets or sets the shipping service provider.
            </summary>
            <value>
            The shipping service provider.
            </value>
        </member>
        <member name="P:Sitecore.Reference.Storefront.Managers.ShippingManager.CartManager">
            <summary>
            Gets or sets the cart manager.
            </summary>
            <value>
            The cart manager.
            </value>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.ShippingManager.GetShippingPreferences(Sitecore.Commerce.Entities.Carts.Cart)">
            <summary>
            Gets the shipping preferences.
            </summary>
            <param name="cart">The cart.</param>
            <returns>The manager response where the shipping options are returned in the Result.</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.ShippingManager.GetShippingMethods(Sitecore.Reference.Storefront.Models.SitecoreItemModels.CommerceStorefront,Sitecore.Reference.Storefront.Managers.VisitorContext,Sitecore.Reference.Storefront.Models.InputModels.GetShippingMethodsInputModel)">
            <summary>
            Gets the shipping methods.
            </summary>
            <param name="storefront">The storefront.</param>
            <param name="visitorContext">The visitor context.</param>
            <param name="inputModel">The input model.</param>
            <returns>
            The manager response where the shipping methods are returned in the Result.
            </returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.ShippingManager.GetShippingMethods(Sitecore.Reference.Storefront.Models.SitecoreItemModels.CommerceStorefront,Sitecore.Reference.Storefront.Managers.VisitorContext,Sitecore.Commerce.Entities.Shipping.ShippingOption)">
            <summary>
            Gets the shipping methods.
            </summary>
            <param name="storefront">The storefront.</param>
            <param name="visitorContext">The visitor context.</param>
            <param name="option">The option.</param>
            <returns>The manager response where the shipping methods are returned in the result.</returns>
        </member>
        <member name="T:Sitecore.Reference.Storefront.Managers.WishListManager">
            <summary>
            Defines the WishListManager class.
            </summary>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.WishListManager.#ctor(Sitecore.Commerce.Services.WishLists.WishListServiceProvider,Sitecore.Reference.Storefront.Managers.AccountManager,Sitecore.Reference.Storefront.Managers.InventoryManager)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Reference.Storefront.Managers.WishListManager" /> class.
            </summary>
            <param name="wishListServiceProvider">The wish list service provider.</param>
            <param name="accountManager">The account manager.</param>
            <param name="inventoryManager">The inventory manager.</param>
        </member>
        <member name="P:Sitecore.Reference.Storefront.Managers.WishListManager.WishListServiceProvider">
            <summary>
            Gets or sets the wish list service provider.
            </summary>
            <value>
            The wish list service provider.
            </value>
        </member>
        <member name="P:Sitecore.Reference.Storefront.Managers.WishListManager.AccountManager">
            <summary>
            Gets or sets the account manager.
            </summary>
            <value>
            The account manager.
            </value>
        </member>
        <member name="P:Sitecore.Reference.Storefront.Managers.WishListManager.InventoryManager">
            <summary>
            Gets or sets the inventory manager.
            </summary>
            <value>
            The inventory manager.
            </value>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.WishListManager.CreateWishList(Sitecore.Reference.Storefront.Models.SitecoreItemModels.CommerceStorefront,Sitecore.Reference.Storefront.Managers.VisitorContext,System.String)">
            <summary>
            Creates the wish list.
            </summary>
            <param name="storefront">The storefront.</param>
            <param name="visitorContext">The visitor context.</param>
            <param name="wishListName">Name of the wish list.</param>
            <returns>The manager response with the wish list as the result.</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.WishListManager.GetWishList(Sitecore.Reference.Storefront.Models.SitecoreItemModels.CommerceStorefront,Sitecore.Reference.Storefront.Managers.VisitorContext,System.String)">
            <summary>
            Gets the wish list.
            </summary>
            <param name="storefront">The storefront.</param>
            <param name="visitorContext">The visitor context.</param>
            <param name="wishListId">The wish list identifier.</param>
            <returns>The manager response with the wish list as the result.</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.WishListManager.GetWishLists(Sitecore.Reference.Storefront.Models.SitecoreItemModels.CommerceStorefront,Sitecore.Reference.Storefront.Managers.VisitorContext)">
            <summary>
            Gets the wish lists.
            </summary>
            <param name="storefront">The storefront.</param>
            <param name="visitorContext">The visitor context.</param>
            <returns>The manager response with the wish list as the result.</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.WishListManager.DeleteWishList(Sitecore.Reference.Storefront.Models.SitecoreItemModels.CommerceStorefront,Sitecore.Reference.Storefront.Managers.VisitorContext,System.String)">
            <summary>
            Deletes the wish list.
            </summary>
            <param name="storefront">The storefront.</param>
            <param name="visitorContext">The visitor context.</param>
            <param name="wishListId">The wish list identifier.</param>
            <returns>The manager response with the wish list as the result.</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.WishListManager.RemoveWishListLines(Sitecore.Reference.Storefront.Models.SitecoreItemModels.CommerceStorefront,Sitecore.Reference.Storefront.Managers.VisitorContext,System.String,System.Collections.Generic.IEnumerable{Sitecore.Reference.Storefront.Models.InputModels.WishListLineInputModel})">
            <summary>
            Removes the wish list lines.
            </summary>
            <param name="storefront">The storefront.</param>
            <param name="visitorContext">The visitor context.</param>
            <param name="wishListId">The wish list identifier.</param>
            <param name="models">The models.</param>
            <returns>
            The manager response with the wish list as the result.
            </returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.WishListManager.UpdateWishListLines(Sitecore.Reference.Storefront.Models.SitecoreItemModels.CommerceStorefront,Sitecore.Reference.Storefront.Managers.VisitorContext,System.String,System.Collections.Generic.IEnumerable{Sitecore.Commerce.Entities.WishLists.WishListLine})">
            <summary>
            Updates the wish list lines.
            </summary>
            <param name="storefront">The storefront.</param>
            <param name="visitorContext">The visitor context.</param>
            <param name="wishListId">The wish list identifier.</param>
            <param name="lines">The lines.</param>
            <returns>The manager response with the wish list as the result.</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.WishListManager.UpdateWishListLine(Sitecore.Reference.Storefront.Models.SitecoreItemModels.CommerceStorefront,Sitecore.Reference.Storefront.Managers.VisitorContext,Sitecore.Reference.Storefront.Models.InputModels.WishListLineInputModel)">
            <summary>
            Updates a single wish list line.
            </summary>
            <param name="storefront">The storefront.</param>
            <param name="visitorContext">The visitor context.</param>
            <param name="model">The model.</param>
            <returns>The manager response with the updated wish list as the result.</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.WishListManager.AddLinesToWishList(Sitecore.Reference.Storefront.Models.SitecoreItemModels.CommerceStorefront,Sitecore.Reference.Storefront.Managers.VisitorContext,System.String,System.Collections.Generic.IEnumerable{Sitecore.Commerce.Entities.WishLists.WishListLine})">
            <summary>
            Adds the lines to wish list.
            </summary>
            <param name="storefront">The storefront.</param>
            <param name="visitorContext">The visitor context.</param>
            <param name="wishListId">The wish list identifier.</param>
            <param name="lines">The lines.</param>
            <returns>The manager response with the wish list as the result.</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.WishListManager.AddLinesToWishList(Sitecore.Reference.Storefront.Models.SitecoreItemModels.CommerceStorefront,Sitecore.Reference.Storefront.Managers.VisitorContext,Sitecore.Reference.Storefront.Models.InputModels.AddToWishListInputModel)">
            <summary>
            Adds the lines to wish list.
            </summary>
            <param name="storefront">The storefront.</param>
            <param name="visitorContext">The visitor context.</param>
            <param name="model">The model.</param>
            <returns>
            The manager response with the wish list as the result.
            </returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.WishListManager.UpdateWishList(Sitecore.Reference.Storefront.Models.SitecoreItemModels.CommerceStorefront,Sitecore.Reference.Storefront.Managers.VisitorContext,Sitecore.Reference.Storefront.Models.InputModels.UpdateWishListInputModel)">
            <summary>
            Updates the wish list.
            </summary>
            <param name="storefront">The storefront.</param>
            <param name="visitorContext">The visitor context.</param>
            <param name="model">The model.</param>
            <returns>The manager response with the wish list as the result.</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Managers.WishListManager.PopulateStockInformation(Sitecore.Reference.Storefront.Models.SitecoreItemModels.CommerceStorefront,Sitecore.Commerce.Entities.WishLists.WishList)">
            <summary>
            Populates the stock information of the given wish list.
            </summary>
            <param name="storefront">The storefront.</param>
            <param name="wishList">The wish list.</param>
        </member>
        <member name="T:Sitecore.Reference.Storefront.Models.JsonResults.AddressListItemJsonResult">
            <summary>
            Json result for list of parties operations.
            </summary>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Models.JsonResults.AddressListItemJsonResult.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Reference.Storefront.Models.JsonResults.AddressListItemJsonResult"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Models.JsonResults.AddressListItemJsonResult.#ctor(Sitecore.Commerce.Services.ServiceProviderResult)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Reference.Storefront.Models.JsonResults.AddressListItemJsonResult"/> class.
            </summary>
            <param name="result">The service provider result.</param>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Models.JsonResults.AddressListItemJsonResult.Initialize(System.Collections.Generic.IEnumerable{Sitecore.Commerce.Entities.Party},System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Initializes the specified addresses.
            </summary>
            <param name="addresses">The addresses.</param>
            <param name="countries">The countries.</param>
        </member>
        <member name="T:Sitecore.Reference.Storefront.Models.JsonResults.CSCartBaseJsonResult">
            <summary>
            Defines the CSCartBaseJsonResult class.
            </summary>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Models.JsonResults.CSCartBaseJsonResult.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Reference.Storefront.Models.JsonResults.CSCartBaseJsonResult"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Models.JsonResults.CSCartBaseJsonResult.#ctor(Sitecore.Commerce.Services.ServiceProviderResult)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Reference.Storefront.Models.JsonResults.CSCartBaseJsonResult"/> class.
            </summary>
            <param name="result">The result.</param>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Models.JsonResults.CSCartBaseJsonResult.Initialize(Sitecore.Commerce.Entities.Carts.Cart)">
            <summary>
            Initializes this object based on the data contained in the provided cart.
            </summary>
            <param name="cart">The cart used to initialize this object.</param>
        </member>
        <member name="T:Sitecore.Reference.Storefront.Models.JsonResults.CSCartLineBaseJsonResult">
            <summary>
            Defines the CSCartLineBaseJsonResult class.
            </summary>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Models.JsonResults.CSCartLineBaseJsonResult.#ctor(Sitecore.Reference.Storefront.Models.CustomCommerceCartLine)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Reference.Storefront.Models.JsonResults.CSCartLineBaseJsonResult"/> class.
            </summary>
            <param name="line">The line.</param>
        </member>
        <member name="T:Sitecore.Reference.Storefront.Models.JsonResults.CSOrderHeaderItemBaseJsonResult">
            <summary>
            Defines the CSOrderHeaderItemBaseJsonResult class.
            </summary>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Models.JsonResults.CSOrderHeaderItemBaseJsonResult.#ctor(Sitecore.Commerce.Entities.Orders.OrderHeader)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Reference.Storefront.Models.JsonResults.CSOrderHeaderItemBaseJsonResult"/> class.
            </summary>
            <param name="header">The order header.</param>
        </member>
        <member name="T:Sitecore.Reference.Storefront.Models.JsonResults.ShippingMethodsJsonResult">
            <summary>
            The Json result of a request to retrieve nearby store locations.
            </summary>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Models.JsonResults.ShippingMethodsJsonResult.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Reference.Storefront.Models.JsonResults.ShippingMethodsJsonResult"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Models.JsonResults.ShippingMethodsJsonResult.#ctor(Sitecore.Commerce.Services.Shipping.GetShippingMethodsResult)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Reference.Storefront.Models.JsonResults.ShippingMethodsJsonResult"/> class.
            </summary>
            <param name="result">The service provider result.</param>
        </member>
        <member name="P:Sitecore.Reference.Storefront.Models.JsonResults.ShippingMethodsJsonResult.LineShippingMethods">
            <summary>
            Gets or sets the available line item shipping methods.
            </summary>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Models.JsonResults.ShippingMethodsJsonResult.Initialize(System.Collections.Generic.IEnumerable{Sitecore.Commerce.Entities.Shipping.ShippingMethod},System.Collections.Generic.IEnumerable{Sitecore.Commerce.Entities.Shipping.ShippingMethodPerItem})">
            <summary>
            Initilizes the specified shipping methods.
            </summary>
            <param name="shippingMethods">The shipping methods.</param>
            <param name="shippingMethodsPerItem">The shipping methods per item.</param>
        </member>
        <member name="T:Sitecore.Reference.Storefront.Models.JsonResults.AddressItemJsonResult">
            <summary>
            Json result for party operations.
            </summary>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Models.JsonResults.AddressItemJsonResult.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Reference.Storefront.Models.JsonResults.AddressItemJsonResult"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Models.JsonResults.AddressItemJsonResult.#ctor(Sitecore.Commerce.Services.ServiceProviderResult)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Reference.Storefront.Models.JsonResults.AddressItemJsonResult"/> class.
            </summary>
            <param name="result">The service provider result.</param>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Models.JsonResults.AddressItemJsonResult.Initialize(Sitecore.Commerce.Entities.Party)">
            <summary>
            Initializes the specified address.
            </summary>
            <param name="address">The address.</param>
        </member>
        <member name="T:Sitecore.Reference.Storefront.Models.SitecoreItemModels.CommerceServerStorefront">
            <summary>
            The CommerceServerStorefront class.
            </summary>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Models.SitecoreItemModels.CommerceServerStorefront.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Reference.Storefront.Models.SitecoreItemModels.CommerceServerStorefront"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Models.SitecoreItemModels.CommerceServerStorefront.#ctor(Sitecore.Data.Items.Item)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Reference.Storefront.Models.SitecoreItemModels.CommerceServerStorefront"/> class.
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="P:Sitecore.Reference.Storefront.Models.SitecoreItemModels.CommerceServerStorefront.CountryAndRegionItem">
            <summary>
            Gets the country and region item.
            </summary>
            <value>
            The country and region item.
            </value>
        </member>
        <member name="P:Sitecore.Reference.Storefront.Models.SitecoreItemModels.CommerceServerStorefront.SupportsWishLists">
            <summary>
            Gets a value indicating whether the storefront supports wishlists.
            </summary>
            <value>
            <c>true</c> if the storefront supports wishlists; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Sitecore.Reference.Storefront.Models.SitecoreItemModels.CommerceServerStorefront.SupportsLoyaltyPrograms">
            <summary>
            Gets a value indicating whether storefront supports loyalty programs.
            </summary>
            <value>
            <c>true</c> if the storefront supports loyalty programs; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Sitecore.Reference.Storefront.Models.SitecoreItemModels.CommerceServerStorefront.SupportsGiftCardPayment">
            <summary>
            Gets a value indicating whether the storefront supports gift card payment.
            </summary>
            <value>
            <c>true</c> if the storefront supports gift card payment; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Sitecore.Reference.Storefront.CommerceServerStorefrontConstants">
            <summary>
            Defines the StorefrontConstants class.
            </summary>
        </member>
        <member name="T:Sitecore.Reference.Storefront.CommerceServerStorefrontConstants.PipelineNames">
            <summary>
            PipelineNames constants
            </summary>
        </member>
        <member name="F:Sitecore.Reference.Storefront.CommerceServerStorefrontConstants.PipelineNames.GetAvailableRegions">
            <summary>
            The get available regions pipeline name
            </summary>
        </member>
        <member name="F:Sitecore.Reference.Storefront.CommerceServerStorefrontConstants.PipelineNames.GetAvailableCountries">
            <summary>
            The get country region information pipeline name
            </summary>
        </member>
        <member name="F:Sitecore.Reference.Storefront.CommerceServerStorefrontConstants.PipelineNames.TranslateEntityToCommerceAddressProfile">
            <summary>
            The translate entity to commerce profile pipeline name
            </summary>
        </member>
        <member name="F:Sitecore.Reference.Storefront.CommerceServerStorefrontConstants.PipelineNames.TranslateCommerceAddressProfileToEntity">
            <summary>
            The translate commerce profile to entity pipeline name
            </summary>
        </member>
        <member name="T:Sitecore.Reference.Storefront.CommerceServerStorefrontConstants.KnownFieldNames">
            <summary>
            Known storefront field names.
            </summary>
        </member>
        <member name="F:Sitecore.Reference.Storefront.CommerceServerStorefrontConstants.KnownFieldNames.Title">
            <summary>
            The title field.
            </summary>
        </member>
        <member name="F:Sitecore.Reference.Storefront.CommerceServerStorefrontConstants.KnownFieldNames.CommerceServerPaymentMethods">
            <summary>
            The commerce server payment methods field.
            </summary>
        </member>
        <member name="F:Sitecore.Reference.Storefront.CommerceServerStorefrontConstants.KnownFieldNames.CommerceServerShippingMethods">
            <summary>
            The commerce server shipping methods field.
            </summary>
        </member>
        <member name="F:Sitecore.Reference.Storefront.CommerceServerStorefrontConstants.KnownFieldNames.CountryLocationPath">
            <summary>
            The country location path field
            </summary>
        </member>
        <member name="F:Sitecore.Reference.Storefront.CommerceServerStorefrontConstants.KnownFieldNames.CountryCode">
            <summary>
            The country code field.
            </summary>
        </member>
        <member name="F:Sitecore.Reference.Storefront.CommerceServerStorefrontConstants.KnownFieldNames.PaymentOptionType">
            <summary>
            The payment option value field.
            </summary>
        </member>
        <member name="F:Sitecore.Reference.Storefront.CommerceServerStorefrontConstants.KnownFieldNames.RegionName">
            <summary>
            The region name field.
            </summary>
        </member>
        <member name="F:Sitecore.Reference.Storefront.CommerceServerStorefrontConstants.KnownFieldNames.FulfillmentOptionType">
            <summary>
            The shipping option value field.
            </summary>
        </member>
        <member name="F:Sitecore.Reference.Storefront.CommerceServerStorefrontConstants.KnownFieldNames.TypeId">
            <summary>
            The type id field.
            </summary>
        </member>
        <member name="F:Sitecore.Reference.Storefront.CommerceServerStorefrontConstants.KnownFieldNames.ShippingOptionsLocationPath">
            <summary>
            The shipping options location path field.
            </summary>
        </member>
        <member name="F:Sitecore.Reference.Storefront.CommerceServerStorefrontConstants.KnownFieldNames.SupportsWishLists">
            <summary>
            The supports wishlists field.
            </summary>
        </member>
        <member name="F:Sitecore.Reference.Storefront.CommerceServerStorefrontConstants.KnownFieldNames.SupportsLoyaltyProgram">
            <summary>
            The supports loyalty program field.
            </summary>
        </member>
        <member name="F:Sitecore.Reference.Storefront.CommerceServerStorefrontConstants.KnownFieldNames.SupportsGirstCardPayment">
            <summary>
            The supports girst card payment field.
            </summary>
        </member>
        <member name="F:Sitecore.Reference.Storefront.CommerceServerStorefrontConstants.KnownFieldNames.Value">
            <summary>
            The value field.
            </summary>
        </member>
        <member name="T:Sitecore.Reference.Storefront.CommerceServerStorefrontConstants.CartConstants">
            <summary>
            Used to hold some of the default settings for the site
            </summary>
        </member>
        <member name="F:Sitecore.Reference.Storefront.CommerceServerStorefrontConstants.CartConstants.BillingAddressNamePrefix">
            <summary>
            Name of the Billing address prefix
            </summary>
        </member>
        <member name="F:Sitecore.Reference.Storefront.CommerceServerStorefrontConstants.CartConstants.ShippingAddressNamePrefix">
            <summary>
            Name of the shipping address prefix
            </summary>
        </member>
        <member name="F:Sitecore.Reference.Storefront.CommerceServerStorefrontConstants.CartConstants.EmailAddressNamePrefix">
            <summary>
            The email address name prefix
            </summary>
        </member>
        <member name="T:Sitecore.Reference.Storefront.CommerceServerStorefrontConstants.KnowWeaklyTypesProperties">
            <summary>
            Defines the Know Commerce Server weakly typed properties.
            </summary>
        </member>
        <member name="F:Sitecore.Reference.Storefront.CommerceServerStorefrontConstants.KnowWeaklyTypesProperties.EmailText">
            <summary>
            The email text property.
            </summary>
        </member>
        <member name="F:Sitecore.Reference.Storefront.CommerceServerStorefrontConstants.KnowWeaklyTypesProperties.PartyType">
            <summary>
            The party type property.
            </summary>
        </member>
        <member name="T:Sitecore.Reference.Storefront.Search.ComputedFields.VariantIndexInfo">
            <summary>
            Defines the VariantIndexInfo class.
            </summary>
        </member>
        <member name="P:Sitecore.Reference.Storefront.Search.ComputedFields.VariantIndexInfo.VariantId">
            <summary>
            Gets or sets the variant identifier.
            </summary>
            <value>
            The variant identifier.
            </value>
        </member>
        <member name="P:Sitecore.Reference.Storefront.Search.ComputedFields.VariantIndexInfo.ListPrice">
            <summary>
            Gets or sets the list price.
            </summary>
            <value>
            The list price.
            </value>
        </member>
        <member name="P:Sitecore.Reference.Storefront.Search.ComputedFields.VariantIndexInfo.BasePrice">
            <summary>
            Gets or sets the base price.
            </summary>
            <value>
            The base price.
            </value>
        </member>
        <member name="T:Sitecore.Reference.Storefront.Search.ComputedFields.VariantInfoComputedField">
            <summary>
            Defines the VariantInfoComputedField class.
            </summary>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Search.ComputedFields.VariantInfoComputedField.ComputeValue(Sitecore.ContentSearch.IIndexable)">
            <summary>
            Computes the value.
            </summary>
            <param name="indexable">The indexable.</param>
            <returns>The computed value.  In this case we return serialized JSON.</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Search.ComputedFields.VariantInfoComputedField.GetVariantFieldValue``1(CommerceServer.Core.Catalog.Variant,System.String)">
            <summary>
            Gets the variant field value.
            </summary>
            <typeparam name="T">Type of the property to return.</typeparam>
            <param name="variant">The variant.</param>
            <param name="fieldName">Name of the field.</param>
            <returns>The request value.</returns>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Search.ComputedFields.VariantInfoComputedField.GetChildVariantsReadOnly(Sitecore.Data.ID,System.String)">
            <summary>
            Gets the child variants read only.
            </summary>
            <param name="itemId">The item identifier.</param>
            <param name="language">The language.</param>
            <returns>Product variant collection.</returns>
        </member>
        <member name="T:Sitecore.Reference.Storefront.SitecorePipelines.InitializeBundles">
            <summary>
            The initialize routes.
            </summary>
        </member>
        <member name="M:Sitecore.Reference.Storefront.SitecorePipelines.InitializeBundles.Process(Sitecore.Pipelines.PipelineArgs)">
            <summary>
            The process.
            </summary>
            <param name="args">
            The args.
            </param>
        </member>
        <member name="T:Sitecore.Reference.Storefront.SitecorePipelines.InitializeControllerFactory">
            <summary>
            Used to initialize the HttpFactoryController
            </summary>
        </member>
        <member name="M:Sitecore.Reference.Storefront.SitecorePipelines.InitializeControllerFactory.Process(Sitecore.Pipelines.PipelineArgs)">
            <summary>
            The entry point for the pipeline processor
            </summary>
            <param name="args">The arguments for the pipeline</param>
        </member>
        <member name="M:Sitecore.Reference.Storefront.SitecorePipelines.InitializeControllerFactory.SetControllerFactory(Sitecore.Pipelines.PipelineArgs)">
            <summary>
            Sets up the controller factory for Sitecore
            </summary>
            <param name="args">The args for the pipeline request</param>
        </member>
        <member name="T:Sitecore.Reference.Storefront.SitecorePipelines.InitializeRoutes">
            <summary>
            The initialize routes.
            </summary>
        </member>
        <member name="M:Sitecore.Reference.Storefront.SitecorePipelines.InitializeRoutes.Process(Sitecore.Pipelines.PipelineArgs)">
            <summary>
            The process.
            </summary>
            <param name="args">
            The args.
            </param>
        </member>
        <member name="T:Sitecore.Reference.Storefront.Infrastructure.DependenciesInstaller">
            <summary>
            The dependencies installer.
            </summary>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Infrastructure.DependenciesInstaller.Install(Castle.Windsor.IWindsorContainer,Castle.MicroKernel.SubSystems.Configuration.IConfigurationStore)">
            <summary>
            Performs the installation in the <see cref="T:Castle.Windsor.IWindsorContainer" />.
            </summary>
            <param name="container">The container.</param>
            <param name="store">The configuration store.</param>
        </member>
        <member name="T:Sitecore.Reference.Storefront.Infrastructure.WindsorControllerFactory">
            <summary>
            The windsor controller factory.
            </summary>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Infrastructure.WindsorControllerFactory.#ctor(Castle.MicroKernel.IKernel)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Reference.Storefront.Infrastructure.WindsorControllerFactory" /> class.
            </summary>
            <param name="kernel">The kernel.</param>
        </member>
        <member name="M:Sitecore.Reference.Storefront.Infrastructure.WindsorControllerFactory.IsFromCurrentAssembly(System.Type)">
            <summary>
            Determines whether the specified object is from current assembly.
            </summary>
            <param name="type">The type to check for.</param>
            <returns>True if it is from the current assembly and false otherwise</returns>
        </member>
    </members>
</doc>
