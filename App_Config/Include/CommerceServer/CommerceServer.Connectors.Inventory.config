<configuration xmlns:patch="http://www.sitecore.net/xmlconfig/">
  <sitecore>
    <inventoryProductBuilder>
      <patch:attribute name="type">Sitecore.Commerce.Connect.CommerceServer.Inventory.CommerceInventoryProductBuilder, Sitecore.Commerce.Connect.CommerceServer</patch:attribute>
    </inventoryProductBuilder>
    
    <commerce.Entities>
      <StockInformation>
        <patch:attribute name="type">Sitecore.Commerce.Connect.CommerceServer.Inventory.Models.CommerceStockInformation, Sitecore.Commerce.Connect.CommerceServer</patch:attribute>
      </StockInformation>
      <InventoryProduct>
        <patch:attribute name="type">Sitecore.Commerce.Connect.CommerceServer.Inventory.Models.CommerceInventoryProduct, Sitecore.Commerce.Connect.CommerceServer</patch:attribute>
      </InventoryProduct>
      <CommerceStockLocation type="Sitecore.Commerce.Connect.CommerceServer.Inventory.Models.CommerceStockLocation, Sitecore.Commerce.Connect.CommerceServer" />
    </commerce.Entities>

    <inventoryAutomationProvider>
      <patch:attribute name="type">Sitecore.Commerce.Connect.CommerceServer.Inventory.CommerceInventoryAutomationProvider, Sitecore.Commerce.Connect.CommerceServer</patch:attribute>
    </inventoryAutomationProvider>

    <inventoryServiceProvider singleInstance="true">
      <patch:attribute name="type">Sitecore.Commerce.Connect.CommerceServer.Inventory.CommerceInventoryServiceProvider, Sitecore.Commerce.Connect.CommerceServer</patch:attribute>
    </inventoryServiceProvider>

    <pipelines>
      <!-- Translates a Commerce InventoryCatalog object into an Sitecore.Commerce CommerceStockLocation entity. -->
      <translate.inventoryCatalogToEntity>
        <processor type="Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.TranslateInventoryCatalogToEntity, Sitecore.Commerce.Connect.CommerceServer">
          <param ref="entityFactory" />
        </processor>
      </translate.inventoryCatalogToEntity>

      <!-- Translates an Sitecore.Commerce CommerceStockLocation entity into a Commerce InventoryCatalog object. -->
      <translate.entityToInventoryCatalog>
        <processor type="Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.TranslateEntityToInventoryCatalog, Sitecore.Commerce.Connect.CommerceServer"/>
      </translate.entityToInventoryCatalog>

      <translate.skuToEntity>
        <processor type="Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.TranslateSkuToEntity, Sitecore.Commerce.Connect.CommerceServer">
          <param ref="entityFactory" />
        </processor>
      </translate.skuToEntity>

      <translate.entityToSku>
        <processor type="Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.TranslateEntityToSku, Sitecore.Commerce.Connect.CommerceServer"/>
      </translate.entityToSku>

      <commerce.inventory.getStockInformation>
        <processor type="Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.GetStockInformation, Sitecore.Commerce.Connect.CommerceServer">
          <param ref="entityFactory" />
        </processor>
        <processor type="Sitecore.Commerce.Pipelines.Inventory.GetStockInformation.GetStockInformation, Sitecore.Commerce">
          <patch:delete/>
        </processor>
      </commerce.inventory.getStockInformation>

      <commerce.inventory.getPreOrderableInformation>
        <processor type="Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.GetPreOrderableInformation, Sitecore.Commerce.Connect.CommerceServer">
          <param ref="entityFactory" />
        </processor>
        <processor type="Sitecore.Commerce.Pipelines.Inventory.GetOrderableInformation.GetPreOrderableInformation, Sitecore.Commerce">
          <patch:delete/>
        </processor>
      </commerce.inventory.getPreOrderableInformation>

      <commerce.inventory.getBackOrderableInformation>
        <processor type="Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.GetBackOrderableInformation, Sitecore.Commerce.Connect.CommerceServer">
          <param ref="entityFactory" />
        </processor>
        <processor type="Sitecore.Commerce.Pipelines.Inventory.GetOrderableInformation.GetBackOrderableInformation, Sitecore.Commerce">
          <patch:delete/>
        </processor>
      </commerce.inventory.getBackOrderableInformation>

      <commerce.inventory.stockStatusForIndexing>
        <processor type="Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.StockStatusForIndexing, Sitecore.Commerce.Connect.CommerceServer">
          <param ref="entityFactory" />
        </processor>
        <processor type="Sitecore.Commerce.Pipelines.Inventory.GetStockInformation.StockStatusForIndexing, Sitecore.Commerce">
          <patch:delete/>
        </processor>
      </commerce.inventory.stockStatusForIndexing>

      <commerce.inventory.getBackInStockInformation>
        <processor type="Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.GetBackInStockInformation, Sitecore.Commerce.Connect.CommerceServer">
          <param ref="entityFactory" />
        </processor>
        <processor type="Sitecore.Commerce.Pipelines.Inventory.GetStockInformation.GetBackInStockInformation, Sitecore.Commerce">
          <patch:delete/>
        </processor>
      </commerce.inventory.getBackInStockInformation>

      <commerce.inventory.saveSku>
        <processor type="Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.SaveCatalogObject, Sitecore.Commerce.Connect.CommerceServer" />
      </commerce.inventory.saveSku>

      <commerce.inventory.saveInventoryCatalog>
        <processor type="Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.SaveCatalogObject, Sitecore.Commerce.Connect.CommerceServer" />
      </commerce.inventory.saveInventoryCatalog>

      <commerce.inventory.createStockLocation>
        <processor type="Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.CreateStockLocation, Sitecore.Commerce.Connect.CommerceServer">
          <param ref="entityFactory" />
        </processor>
      </commerce.inventory.createStockLocation>

      <commerce.inventory.updateStockLocation>
        <processor type="Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.UpdateStockLocation, Sitecore.Commerce.Connect.CommerceServer">
          <param ref="entityFactory" />
        </processor>
      </commerce.inventory.updateStockLocation>

      <commerce.inventory.deleteStockLocation>
        <processor type="Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.DeleteStockLocation, Sitecore.Commerce.Connect.CommerceServer">
          <param ref="entityFactory" />
        </processor>
      </commerce.inventory.deleteStockLocation>

      <commerce.inventory.getStockLocation>
        <processor type="Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.GetStockLocation, Sitecore.Commerce.Connect.CommerceServer">
          <param ref="entityFactory" />
        </processor>
      </commerce.inventory.getStockLocation>

      <commerce.inventory.searchStockLocations>
        <processor type="Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.SearchStockLocations, Sitecore.Commerce.Connect.CommerceServer">
          <param ref="entityFactory" />
        </processor>
      </commerce.inventory.searchStockLocations>

      <commerce.inventory.createStockInformation>
        <processor type="Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.CreateStockInformation, Sitecore.Commerce.Connect.CommerceServer">
          <param ref="entityFactory" />
        </processor>
      </commerce.inventory.createStockInformation>

      <commerce.inventory.deleteStockInformation>
        <processor type="Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.DeleteStockInformation, Sitecore.Commerce.Connect.CommerceServer">
          <param ref="entityFactory" />
        </processor>
      </commerce.inventory.deleteStockInformation>

      <commerce.inventory.updateStockInformation>
        <processor type="Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.UpdateStockInformation, Sitecore.Commerce.Connect.CommerceServer">
          <param ref="entityFactory" />
        </processor>
      </commerce.inventory.updateStockInformation>

      <commerce.inventory.searchStockInformation>
        <processor type="Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.SearchStockInformation, Sitecore.Commerce.Connect.CommerceServer">
          <param ref="entityFactory" />
        </processor>
      </commerce.inventory.searchStockInformation>

      <commerce.inventory.getUnassociatedProductCatalogs>
        <processor type="Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.GetUnassociatedProductCatalogs, Sitecore.Commerce.Connect.CommerceServer">
          <param ref="entityFactory" />
        </processor>
      </commerce.inventory.getUnassociatedProductCatalogs>

      <commerce.inventory.getAssociatedStockLocation>
        <processor type="Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.GetAssociatedStockLocation, Sitecore.Commerce.Connect.CommerceServer">
          <param ref="entityFactory" />
        </processor>
      </commerce.inventory.getAssociatedStockLocation>

      <commerce.inventory.purgeDeletedItems>
        <processor type="Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.PurgeDeletedItems, Sitecore.Commerce.Connect.CommerceServer">
          <param ref="entityFactory" />
        </processor>
      </commerce.inventory.purgeDeletedItems>

      <commerce.inventory.associateLocation>
        <processor type="Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.AssociateLocation, Sitecore.Commerce.Connect.CommerceServer">
          <param ref="entityFactory" />
        </processor>
      </commerce.inventory.associateLocation>

      <commerce.inventory.disassociateLocation>
        <processor type="Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.DisassociateLocation, Sitecore.Commerce.Connect.CommerceServer">
          <param ref="entityFactory" />
        </processor>
      </commerce.inventory.disassociateLocation>
    </pipelines>
  </sitecore>
</configuration>
