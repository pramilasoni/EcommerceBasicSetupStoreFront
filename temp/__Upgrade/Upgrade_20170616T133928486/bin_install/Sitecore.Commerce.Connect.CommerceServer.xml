<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Sitecore.Commerce.Connect.CommerceServer</name>
    </assembly>
    <members>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Agents.CleanupExternalSettingsAgent">
            <summary>
            Agent responsible for cleaning up stale external settings entries.  This is valid only when the SeparateCatalogExternalSettingsResolver is used.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Agents.CleanupExternalSettingsAgent.ShouldLogActivity">
            <summary>
            Gets or sets a value indicating whether activities should be logged.
            </summary>
            <value>
              <c>true</c> if activities should be logged; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Agents.CleanupExternalSettingsAgent.Run">
            <summary>
            Run entry point for the agent.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Agents.CleanupExternalSettingsAgent.ProcessCatalog(Sitecore.Commerce.Connect.CommerceServer.Catalog.ICatalogRepository,System.String)">
            <summary>
            Processes the catalog.
            </summary>
            <param name="catalogRepository">The catalog respository.</param>
            <param name="catalogName">Name of the catalog.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Agents.CleanupExternalSettingsAgent.ProcessExternalSettingsCatalog(Sitecore.Commerce.Connect.CommerceServer.Catalog.ICatalogRepository,CommerceServer.Core.Catalog.ProductCatalog,CommerceServer.Core.Catalog.ProductCatalog)">
            <summary>
            Processes the external settings catalog.
            </summary>
            <param name="catalogRepository">The catalog repository.</param>
            <param name="csCatalog">The cs catalog.</param>
            <param name="csSettingsCatalog">The cs settings catalog.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Agents.CleanupExternalSettingsAgent.ProcessProduct(Sitecore.Commerce.Connect.CommerceServer.Catalog.ICatalogRepository,CommerceServer.Core.Catalog.ProductCatalog,CommerceServer.Core.Catalog.Product)">
            <summary>
            Processes the product.
            </summary>
            <param name="catalogRepository">The catalog repository.</param>
            <param name="csCatalog">The cs catalog.</param>
            <param name="csSettingsProduct">The cs settings product.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Agents.CleanupExternalSettingsAgent.ProcessVariants(Sitecore.Commerce.Connect.CommerceServer.Catalog.ICatalogRepository,CommerceServer.Core.Catalog.ProductCatalog,CommerceServer.Core.Catalog.Product,CommerceServer.Core.Catalog.Product)">
            <summary>
            Processes the variants.
            </summary>
            <param name="catalogRepository">The catalog repository.</param>
            <param name="csCatalog">The cs catalog.</param>
            <param name="csProduct">The cs product.</param>
            <param name="csSettingsProduct">The cs settings product.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Agents.CleanupExternalSettingsAgent.ProcessCategory(Sitecore.Commerce.Connect.CommerceServer.Catalog.ICatalogRepository,CommerceServer.Core.Catalog.ProductCatalog,CommerceServer.Core.Catalog.Category)">
            <summary>
            Processes the category.
            </summary>
            <param name="catalogRepository">The catalog repository.</param>
            <param name="csCatalog">The cs catalog.</param>
            <param name="csSettingsCategory">The cs settings category.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Agents.CleanupExternalSettingsAgent.LogInfo(System.String,System.Object[])">
            <summary>
            Logs the information.
            </summary>
            <param name="message">The message.</param>
            <param name="parameters">The parms.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Caching.CacheRefresh">
            <summary>
            Cache refresh class
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Caching.CacheRefresh.LastCatalogCacheRefreshTimeUtc">
            <summary>
            Gets the time in UTC at which the catalog cache was last refreshed.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Caching.CacheRefresh.Refresh(System.String,Sitecore.Commerce.Connect.CommerceServer.ICommerceServerContextManager,System.String,Sitecore.Data.ID)">
            <summary>
            Refreshes the cache.
            </summary>
            <param name="cacheEventName">Name of the cache event.</param>
            <param name="contextManager">The context manager.</param>
            <param name="databaseName">The name of the sitecore database context.</param>
            <param name="itemId">The ID of the Sitecore item that needs to be refreshed.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Caching.CacheRefresh.RemoveItemFromSitecoreCaches(Sitecore.Data.ID,System.String)">
            <summary>
            Removes the item from sitecore caches.
            </summary>
            <param name="itemId">The item identifier.</param>
            <param name="databaseName">Name of the database.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Caching.CacheRefresh.RefreshCatalogCaches(Sitecore.Commerce.Connect.CommerceServer.ICommerceServerContextManager)">
            <summary>
            Refreshes the catalog caches.
            </summary>
            <param name="contextManager">The context manager.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Caching.CacheRefresh.RefreshSitecoreCaches(System.String)">
            <summary>
            Refreshes the sitecore caches.
            </summary>
            <param name="databaseName">Name of the database.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Caching.CacheRefresh.RefreshCommerceCaches(Sitecore.Commerce.Connect.CommerceServer.ICommerceServerContextManager)">
            <summary>
            Refreshes the commerce caches.
            </summary>
            <param name="contextManager">The context manager.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Caching.CacheRefresh.RefreshSingleCache(System.String,Sitecore.Commerce.Connect.CommerceServer.ICommerceServerContextManager)">
            <summary>
            Refreshes the single Commerce cache.
            </summary>
            <param name="cacheName">Name of the cache.</param>
            <param name="contextManager">The context manager.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Caching.CacheRefresh.RefreshSiteTermCaches(Sitecore.Commerce.Connect.CommerceServer.ICommerceServerContextManager)">
            <summary>
            Refreshes the site term caches.
            </summary>
            <param name="contextManager">The context manager.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Caching.CacheRefreshWorker">
            <summary>
            Cache refresh work thread.  This is where it all happens.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Caching.CacheRefreshWorker.#ctor(System.TimeSpan,System.Threading.ManualResetEvent,System.Threading.AutoResetEvent)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Caching.CacheRefreshWorker"/> class.
            </summary>
            <param name="pollingTime">The polling interval of the cache mechanism.</param>
            <param name="stopEvent">The stop event.</param>
            <param name="workerThreadFinished">The worker thread finished.</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Caching.CacheRefreshWorker.LastRefreshTime">
            <summary>
            Gets or sets the last refresh time.
            </summary>
            <value>
            The last refresh time.
            </value>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Caching.CacheRefreshWorker.DoWork">
            <summary>
            Entry point of the worker thread.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Caching.CacheRefreshWorker.CheckForCacheRefresh">
            <summary>
            Checks for cache refresh.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Caching.CacheRefreshWorker.RefreshCache(System.String,Sitecore.Commerce.Connect.CommerceServer.ICommerceServerContextManager)">
            <summary>
            Refreshes the cache.
            </summary>
            <param name="cacheEventName">Name of the cache event.</param>
            <param name="contextManager">The context manager.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Caching.RefreshCache">
            <summary>
            Ribbon command to handle the refresh of the commerce caches
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Caching.RefreshCache.Execute(Sitecore.Shell.Framework.Commands.CommandContext)">
            <summary>
            Executes the command in the specified context.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Caching.ICacheRefreshManager">
            <summary>
            Cache refresh manager interface definition.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Caching.ICacheRefreshManager.StartCacheRefresh">
            <summary>
            Starts the cache refresh process.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Caching.ICacheRefreshManager.StopCacheRefresh">
            <summary>
            Stops the cache refresh process.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Caching.ICacheRefreshWorkerThread">
            <summary>
            Interface for cache refresh working thread.  
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Caching.ICacheRefreshWorkerThread.DoWork">
            <summary>
            Entry point of the worker thread.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Caching.EnterpriseLibraryCacheProvider">
            <summary>
            Enterprise library cache provider implementation.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Caching.EnterpriseLibraryCacheProvider.AddData``1(System.String,System.String,System.String,``0)">
            <summary>
            Adds data to the cache given the cache key.
            </summary>
            <typeparam name="T">The type of the data to be cached.</typeparam>
            <param name="prefix">The prefix of the cache name.  Must be the BrandName for presentation and the ChannelName for Application.</param>
            <param name="cacheName">Name of the cache.</param>
            <param name="cacheKey">The cache key.</param>
            <param name="data">The data to be cached.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Caching.EnterpriseLibraryCacheProvider.AddData``1(System.String,System.String,System.String,``0,System.Nullable{System.TimeSpan})">
            <summary>
            Adds data to the cache given the cache key.
            </summary>
            <typeparam name="T">The type of the data to be cached.</typeparam>
            <param name="prefix">The prefix of the cache name.  Must be the BrandName for presentation and the ChannelName for Application.</param>
            <param name="cacheName">Name of the cache.</param>
            <param name="cacheKey">The cache key.</param>
            <param name="data">The data to be cached.</param>
            <param name="cacheExpiration">The cache expiration.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Caching.EnterpriseLibraryCacheProvider.GetData``1(System.String,System.String,System.String)">
            <summary>
            Gets the data fromt he cache using the given cache key.
            </summary>
            <typeparam name="T">The type of the data to be retrieved from the cache.</typeparam>
            <param name="prefix">The prefix of the cache name.  Must be the BrandName for presentation and the ChannelName for Application.</param>
            <param name="cacheName">Name of the cache.</param>
            <param name="cacheKey">The cache key.</param>
            <returns>The cached data or null if no cache entry was found.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Caching.EnterpriseLibraryCacheProvider.TryGetData``1(System.String,System.String,System.String,``0@)">
            <summary>
            Tries to get the data from the cache.
            </summary>
            <typeparam name="T">Type of the data found in the cache.</typeparam>
            <param name="prefix">The prefix of the cache name.  Must be the BrandName for presentation and the ChannelName for Application.</param>
            <param name="cacheName">Name of the cache.</param>
            <param name="cacheKey">The cache key.</param>
            <param name="data">The data found inthe cache.  Null will be returned if it is not found.</param>
            <returns>
            'true' if the data was found otherwise false.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Caching.EnterpriseLibraryCacheProvider.RemoveData(System.String,System.String,System.String)">
            <summary>
            Removes the data.
            </summary>
            <param name="prefix">The prefix of the cache name.  Must be the BrandName for presentation and the ChannelName for Application.</param>
            <param name="cacheName">Name of the cache.</param>
            <param name="cacheKey">The cache key.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Caching.EnterpriseLibraryCacheProvider.Contains(System.String,System.String,System.String)">
            <summary>
            Indicates if the given cacheKey exists in the cache.
            </summary>
            <param name="prefix">The prefix.</param>
            <param name="cacheName">Name of the cache.</param>
            <param name="cacheKey">The cache key.</param>
            <returns>
              <c>true</c> if the cache key is found in the cache; otherwise, <c>false</c> is returned.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Caching.EnterpriseLibraryCacheProvider.ClearDataCache(System.String,System.String)">
            <summary>
            Clears the data from the cache.
            </summary>
            <param name="prefix">The prefix of the cache name.  Must be the BrandName for presentation and the ChannelName for Application.</param>
            <param name="cacheName">Name of the cache.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Caching.EnterpriseLibraryCacheProvider.GetAdditionalCacheKeyContext(System.String)">
            <summary>   
            Gets the additional cache key context.
            </summary>
            <param name="cacheKey">The cache key.</param>
            <returns>Retuns the cache key.  Override this menthod to add additional cache key parameters.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Caching.EnterpriseLibraryCacheProvider.GetCache(System.String,System.String,System.String@)">
            <summary>
            Gets the cache manager.
            </summary>
            <param name="prefix">The prefix.</param>
            <param name="cacheName">Name of the cache.</param>
            <param name="actualCacheName">Actual name of the cache.</param>
            <returns>ICacheManager for the given parameters.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Caching.ICacheProvider">
            <summary>
            Interface for cache provider in Commerce Server Sitecore integration.  
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Caching.ICacheProvider.AddData``1(System.String,System.String,System.String,``0)">
            <summary>
            Adds data to the cache.
            </summary>
            <typeparam name="T">The type to be cached.</typeparam>
            <param name="prefix">The prefix of the cache name.  Must be the BrandName for presentation and the ChannelName for Application.</param>
            <param name="cacheName">Name of the cache.</param>
            <param name="cacheKey">The cache key.</param>
            <param name="data">The data to be cached.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Caching.ICacheProvider.AddData``1(System.String,System.String,System.String,``0,System.Nullable{System.TimeSpan})">
            <summary>
            Adds data to the cache.
            </summary>
            <typeparam name="T">The type to be cached.</typeparam>
            <param name="prefix">The prefix of the cache name.  Must be the BrandName for presentation and the ChannelName for Application.</param>
            <param name="cacheName">Name of the cache.</param>
            <param name="cacheKey">The cache key.</param>
            <param name="data">The data to be cached.</param>
            <param name="cacheExpiration">The cache expiration.  This is an optional parameter</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Caching.ICacheProvider.GetData``1(System.String,System.String,System.String)">
            <summary>
            Gets the data from the cache.
            </summary>
            <typeparam name="T">The type to be retrieved from the cache.</typeparam>
            <param name="prefix">The prefix of the cache name.  Must be the BrandName for presentation and the ChannelName for Application.</param>
            <param name="cacheName">Name of the cache.</param>
            <param name="cacheKey">The cache key.</param>
            <returns>The cached item or null if nothing was found.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Caching.ICacheProvider.Contains(System.String,System.String,System.String)">
            <summary>
            Indicates if the given cacheKey exists in the cache.
            </summary>
            <param name="prefix">The prefix.</param>
            <param name="cacheName">Name of the cache.</param>
            <param name="cacheKey">The cache key.</param>
            <returns>
              <c>true</c> if the cache key is found in the cache; otherwise, <c>false</c> is returned.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Caching.ICacheProvider.TryGetData``1(System.String,System.String,System.String,``0@)">
            <summary>
            Tries to get the data from the cache.
            </summary>
            <typeparam name="T">Type of the data found in the cache.</typeparam>
            <param name="prefix">The prefix of the cache name.  Must be the BrandName for presentation and the ChannelName for Application.</param>
            <param name="cacheName">Name of the cache.</param>
            <param name="cacheKey">The cache key.</param>
            <param name="data">The data found inthe cache.  Null will be returned if it is not found.</param>
            <returns>'true' if the data was found otherwise false.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Caching.ICacheProvider.ClearDataCache(System.String,System.String)">
            <summary>
            Clears the content of the data cache.
            </summary>
            <param name="prefix">The prefix of the cache name.  Must be the BrandName for presentation and the ChannelName for Application.</param>
            <param name="cacheName">Name of the cache.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Caching.ICacheProvider.RemoveData(System.String,System.String,System.String)">
            <summary>
            Removes the data.
            </summary>
            <param name="prefix">The prefix of the cache name.  Must be the BrandName for presentation and the ChannelName for Application.</param>
            <param name="cacheName">Name of the cache.</param>
            <param name="cacheKey">The cache key.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Caching.CacheRefreshManager">
            <summary>
            Commerce cache refresh manager implementation.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Caching.CacheRefreshManager.Current">
            <summary>
            Gets or sets the current cache refresh manager instance.
            If no cache refresh manager has previsously been set, the default cache refreshmanager will get created.
            </summary>
            <value>
            The current.
            </value>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Caching.CacheRefreshManager.StartCacheRefresh">
            <summary>
            Starts the cache refresh process.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Caching.CacheRefreshManager.StopCacheRefresh">
            <summary>
            Stops the cache refresh process.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Caching.CacheRefreshManager.GetWorkerThread(System.TimeSpan,System.Threading.ManualResetEvent,System.Threading.AutoResetEvent)">
            <summary>
            Gets the worker thread.
            </summary>
            <param name="pollingTime">The polling time.</param>
            <param name="stopEvent">The stop event.</param>
            <param name="workerThreadFinished">The worker thread fisnised.</param>
            <returns>The ICacheRefreshWorkerThread instance.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Commands.DeleteGeneratedTemplatesCommand">
            <summary>
            Command that generates / updates the Commerce catalog data templates.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Commands.DeleteGeneratedTemplatesCommand.Execute(Sitecore.Shell.Framework.Commands.CommandContext)">
            <summary>
            Executes this command.
            </summary>
            <param name="context">The client context used during execution.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Commands.DeleteGeneratedTemplatesCommand.Run(Sitecore.Web.UI.Sheer.ClientPipelineArgs)">
            <summary>
            Run the command
            </summary>
            <param name="args">The args</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Commands.DeleteGeneratedTemplatesCommand.StartProcess(System.Object[])">
            <summary>
            Process the command as a job
            </summary>
            <param name="parameters">paramaters for the process, index 0 is a Sitecore.Data.Database</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Commands.GenerateCatalogDataTemplatesCommand">
            <summary>
            Command that generates / updates the Commerce catalog data templates.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Commands.GenerateCatalogDataTemplatesCommand.Execute(Sitecore.Shell.Framework.Commands.CommandContext)">
            <summary>
            Executes this command.
            </summary>
            <param name="context">The client context used during execution.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Commands.GenerateCatalogDataTemplatesCommand.StartProcess(System.Object[])">
            <summary>
            Process the command as a job
            </summary>
            <param name="parameters">paramaters for the process, index 0 is a Sitecore.Data.Database</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Commands.CatalogRebuildFullTextIndexCommand">
            <summary>
            Ribbon command to handle the refresh of the commerce caches
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Commands.CatalogRebuildFullTextIndexCommand.Execute(Sitecore.Shell.Framework.Commands.CommandContext)">
            <summary>
            Executes the command in the specified context.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Commands.CatalogRebuildFullTextIndexCommand.QueryState(Sitecore.Shell.Framework.Commands.CommandContext)">
            <summary>
            Queries the state of the command
            </summary>
            <param name="context">The context.</param>
            <returns>whether the command is enabled or disabled</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Commands.RebuildCustomCatalogCommand">
            <summary>
            Command that executes a Commerce virtual catalog rebuild.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Commands.RebuildCustomCatalogCommand.Execute(Sitecore.Shell.Framework.Commands.CommandContext)">
            <summary>
            Executes the command.
            </summary>
            <param name="context">The command context.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Commands.RebuildCustomCatalogCommand.QueryState(Sitecore.Shell.Framework.Commands.CommandContext)">
            <summary>
            Returns the appropriate command state for the given context.
            </summary>
            <param name="context">The command context.</param>
            <returns>The appropriate command state for the given context.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Commands.SaveAsDefaultQueryCommand">
            <summary>
            Command that saves a search query as the default bucket query.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Commands.SaveAsDefaultQueryCommand.Execute(Sitecore.Shell.Framework.Commands.CommandContext)">
            <summary>
            Executes this command.
            </summary>
            <param name="context">The client context used during execution.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Commands.SaveAsDefaultQueryCommand.Run(Sitecore.Web.UI.Sheer.ClientPipelineArgs)">
            <summary>
            Runs this command in a client pipeline context.
            </summary>
            <param name="args">The pipeline arguments used to run this command.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.CommerceOneColumnFormatter">
            <summary>
            Customized OneColumnFormatter for Commerce content items.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.CommerceOneColumnFormatter.RenderField(System.Web.UI.Control,Sitecore.Shell.Applications.ContentManager.Editor.Field,System.Boolean)">
            <summary>
            Renders a field.
            </summary>
            <param name="parent">The parent control.</param>
            <param name="field">The editor field.</param>
            <param name="readOnly">Specifies whether the field should be rendered as read-only.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.CommerceOneColumnFormatter.RenderField(System.Web.UI.Control,Sitecore.Shell.Applications.ContentManager.Editor.Field,Sitecore.Data.Items.Item,System.Boolean)">
            <summary>
            Renders a field.
            </summary>
            <param name="parent">The parent control.</param>
            <param name="field">The editor field.</param>
            <param name="fieldType">The field type.</param>
            <param name="readOnly">Specifies whether the field should be rendered as read-only.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.CommerceOneColumnFormatter.RenderField(System.Web.UI.Control,Sitecore.Shell.Applications.ContentManager.Editor.Field,Sitecore.Data.Items.Item,System.Boolean,System.String)">
            <summary>
            Renders a field.
            </summary>
            <param name="parent">The parent control.</param>
            <param name="field">The editor field.</param>
            <param name="fieldType">The field type.</param>
            <param name="readOnly">Specifies whether the field should be rendered as read-only.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.CommerceOneColumnFormatter.ShouldMakeReadOnly(Sitecore.Shell.Applications.ContentManager.Editor.Field)">
            <summary>
            Determines if a field should be rendered as read-only.
            </summary>
            <param name="field">The editor field.</param>
            <returns>True if the field should be rendered as read-only, otherwise false.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.CommerceResetFieldsFormatter">
            <summary>
            Customized ResetFieldsFormatter for Commerce content items.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.CommerceResetFieldsFormatter.RenderField(System.Web.UI.Control,Sitecore.Shell.Applications.ContentManager.Editor.Field,System.Boolean)">
            <summary>
            Renders a field.
            </summary>
            <param name="parent">The parent control.</param>
            <param name="field">The editor field.</param>
            <param name="readOnly">Specifies whether the field should be rendered as read-only.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.CommerceResetFieldsFormatter.RenderField(System.Web.UI.Control,Sitecore.Shell.Applications.ContentManager.Editor.Field,Sitecore.Data.Items.Item,System.Boolean)">
            <summary>
            Renders a field.
            </summary>
            <param name="parent">The parent control.</param>
            <param name="field">The editor field.</param>
            <param name="fieldType">The field type.</param>
            <param name="readOnly">Specifies whether the field should be rendered as read-only.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.CommerceResetFieldsFormatter.RenderField(System.Web.UI.Control,Sitecore.Shell.Applications.ContentManager.Editor.Field,Sitecore.Data.Items.Item,System.Boolean,System.String)">
            <summary>
            Renders a field.
            </summary>
            <param name="parent">The parent control.</param>
            <param name="field">The editor field.</param>
            <param name="fieldType">The field type.</param>
            <param name="readOnly">Specifies whether the field should be rendered as read-only.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.CommerceResetFieldsFormatter.ShouldMakeReadOnly(Sitecore.Shell.Applications.ContentManager.Editor.Field)">
            <summary>
            Determines if a field should be rendered as read-only.
            </summary>
            <param name="field">The editor field.</param>
            <returns>True if the field should be rendered as read-only, otherwise false.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.CommerceTranslatorFormatter">
            <summary>
            Customized TranslatorFormatter for Commerce content items.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.CommerceTranslatorFormatter.RenderField(System.Web.UI.Control,Sitecore.Shell.Applications.ContentManager.Editor.Field,System.Boolean)">
            <summary>
            Renders a field.
            </summary>
            <param name="parent">The parent control.</param>
            <param name="field">The editor field.</param>
            <param name="readOnly">Specifies whether the field should be rendered as read-only.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.CommerceTranslatorFormatter.RenderField(System.Web.UI.Control,Sitecore.Shell.Applications.ContentManager.Editor.Field,Sitecore.Data.Items.Item,System.Boolean)">
            <summary>
            Renders a field.
            </summary>
            <param name="parent">The parent control.</param>
            <param name="field">The editor field.</param>
            <param name="fieldType">The field type.</param>
            <param name="readOnly">Specifies whether the field should be rendered as read-only.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.CommerceTranslatorFormatter.RenderField(System.Web.UI.Control,Sitecore.Shell.Applications.ContentManager.Editor.Field,Sitecore.Data.Items.Item,System.Boolean,System.String)">
            <summary>
            Renders a field.
            </summary>
            <param name="parent">The parent control.</param>
            <param name="field">The editor field.</param>
            <param name="fieldType">The field type.</param>
            <param name="readOnly">Specifies whether the field should be rendered as read-only.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.CommerceTranslatorFormatter.ShouldMakeReadOnly(Sitecore.Shell.Applications.ContentManager.Editor.Field)">
            <summary>
            Determines if a field should be rendered as read-only.
            </summary>
            <param name="field">The editor field.</param>
            <returns>True if the field should be rendered as read-only, otherwise false.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.FieldChecker">
            <summary>
            Provides methods that performs certain checks on sitecore fields.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.FieldChecker.ShouldBeReadOnly(Sitecore.Data.ID,Sitecore.Data.ID)">
            <summary>
            Determines if the given field should be set to read-only in the content editor.
            </summary>
            <param name="fieldId">The field identifier.</param>
            <param name="templateId">The template identifier.</param>
            <returns>True if the field should be read-only; Otherwise false.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.SetCommerceEditorFormatter">
            <summary>
            Content editor pipeline that sets the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.CommerceEditorFormatter"/> as the SC editor formatter.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.SetCommerceEditorFormatter.Process(Sitecore.Shell.Applications.ContentEditor.Pipelines.RenderContentEditor.RenderContentEditorArgs)">
            <summary>
            Processes the pipeline.
            </summary>
            <param name="args">The pipeline arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.CommerceEditorFormatter">
            <summary>
            Customized EditorFormatter for Commerce content items.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.CommerceEditorFormatter.RenderField(System.Web.UI.Control,Sitecore.Shell.Applications.ContentManager.Editor.Field,System.Boolean)">
            <summary>
            Renders a field.
            </summary>
            <param name="parent">The parent control.</param>
            <param name="field">The editor field.</param>
            <param name="readOnly">Specifies whether the field should be rendered as read-only.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.CommerceEditorFormatter.RenderField(System.Web.UI.Control,Sitecore.Shell.Applications.ContentManager.Editor.Field,Sitecore.Data.Items.Item,System.Boolean)">
            <summary>
            Renders a field.
            </summary>
            <param name="parent">The parent control.</param>
            <param name="field">The editor field.</param>
            <param name="fieldType">The field type.</param>
            <param name="readOnly">Specifies whether the field should be rendered as read-only.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.CommerceEditorFormatter.RenderField(System.Web.UI.Control,Sitecore.Shell.Applications.ContentManager.Editor.Field,Sitecore.Data.Items.Item,System.Boolean,System.String)">
            <summary>
            Renders a field.
            </summary>
            <param name="parent">The parent control.</param>
            <param name="field">The editor field.</param>
            <param name="fieldType">The field type.</param>
            <param name="readOnly">Specifies whether the field should be rendered as read-only.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.CommerceEditorFormatter.ShouldMakeReadOnly(Sitecore.Shell.Applications.ContentManager.Editor.Field)">
            <summary>
            Determines if a field should be rendered as read-only.
            </summary>
            <param name="field">The editor field.</param>
            <returns>True if the field should be rendered as read-only, otherwise false.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.CatalogSelectionField">
            <summary>
            Field helping to parse and manipulate the user selected catalogs on a catalog folder item.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.CatalogSelectionField.#ctor(Sitecore.Data.Fields.Field)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.CatalogSelectionField"/> class.
            </summary>
            <param name="innerField">The field that contains the Catalog data.</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.CatalogSelectionField.CatalogNameList">
            <summary>
            Gets the catalog name list.
            </summary>
            <value>
            The catalog name list.
            </value>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.CatalogSelectionField.ToCatalogSelectionField(Sitecore.Data.Fields.Field)">
            <summary>
            Converts field to CatalogSelectionField.
            </summary>
            <param name="field">The Sitecore field.</param>
            <returns>CatalogSelectionField based on the Field.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.CatalogSelectionField.op_Implicit(Sitecore.Data.Fields.Field)~Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.CatalogSelectionField">
            <summary>
            Converts the field to a CatalogSelectionField.
            </summary>
            <param name="field">The field.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.CatalogSelectionField.RemoveCatalog(System.String)">
            <summary>
            Removes the catalog from the collection.
            </summary>
            <param name="catalogName">Name of the catalog.</param>
            <returns>True if catalog is removed; false otherwise.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.RelationshipField">
            <summary>
            Field helping to parse and manipulate the product and category CS catalog relationships content.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.RelationshipField.#ctor(Sitecore.Data.Fields.Field)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.RelationshipField"/> class.
            </summary>
            <param name="innerField">Inner field.</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.RelationshipField.FieldDatabase">
            <summary>
            Gets the database associated with this field.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.RelationshipField.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Sitecore.Data.Items.Item"/> at the specified index.
            </summary>
            <value>
            The <see cref="T:Sitecore.Data.Items.Item"/>.
            </value>
            <param name="index">The index.</param>
            <returns>Sitecore Item at the given index.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.RelationshipField.ToProductRelationshipField(Sitecore.Data.Fields.Field)">
            <summary>
            Converts the field to a <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.RelationshipField"/>.
            </summary>
            <param name="field">The Sitecore field.</param>
            <returns>The converted <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.RelationshipField"/>.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.RelationshipField.op_Implicit(Sitecore.Data.Fields.Field)~Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.RelationshipField">
            <summary>
            Converts the field to a <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.RelationshipField"/>.
            </summary>
            <param name="field">The Sitecore field.</param>
            <returns>The converted <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.RelationshipField"/>.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.RelationshipField.UpdateRelationship(Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.CatalogRelationshipInformation)">
            <summary>
            Updates thee relationship information for the specified catalog relationship item.
            </summary>
            <param name="relationshipInfo">The relationship information to be updated.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.RelationshipField.GetRelationships">
            <summary>
            Gets all catalog relationships in this field.
            </summary>
            <returns>All catalog relationships in this field.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.RelationshipField.GetRelationships(System.String)">
            <summary>
            Gets the catalog relationships in this field with the specified name.
            </summary>
            <param name="relationshipName">Name of the relationship.</param>
            <returns>The catalog relationships in this field with the specified name.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.RelationshipField.GetRelationshipsTargets(System.String)">
            <summary>
            Gets the target Stiecore items of the catalog relationships in this field with the specified name.
            </summary>
            <param name="relationshipName">Name of the relationship.</param>
            <returns>The target Stiecore items of the catalog relationships in this field with the specified name.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.RelationshipField.GetProductRelationships(System.String)">
            <summary>
            Gets the catalog relationships in this field with the specified name that refer to a product item.
            </summary>
            <param name="relationshipName">Name of the relationship.</param>
            <returns>The catalog relationships in this field with the specified name that refer to a product item.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.RelationshipField.GetProductRelationshipsTargets(System.String)">
            <summary>
            Gets the target Sitecore items of the catalog relationships in this field with the specified name that refer to a product item.
            </summary>
            <param name="relationshipName">Name of the relationship.</param>
            <returns>The target Sitecore items of the catalog relationships in this field with the specified name that refer to a product item.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.RelationshipField.GetCategoryRelationships(System.String)">
            <summary>
            Gets the catalog relationships in this field with the specified name that refer to a category item.
            </summary>
            <param name="relationshipName">Name of the relationship.</param>
            <returns>The catalog relationships for the given category relationship.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.RelationshipField.GetCategoryRelationshipsTargets(System.String)">
            <summary>
            Gets the target Sitecore items of the catalog relationships in this field with the specified name that refer to a category item.
            </summary>
            <param name="relationshipName">Name of the relationship.</param>
            <returns>The target Sitecore items of the catalog relationships in this field with the specified name that refer to a category item.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.RelationshipField.GetRelationshipsTargets">
            <summary>
            Gets the target Sitecore items of the catalog relationships in this field.
            </summary>
            <returns>The target Sitecore items of the catalog relationships in this field.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.RelationshipField.GetProductRelationships">
            <summary>
            Gets the catalog relationships in this field that refer to a product item.
            </summary>
            <returns>The catalog relationships in this field that refer to a product item.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.RelationshipField.GetProductRelationshipsTargets">
            <summary>
            Gets the target Sitecore items for the catalog relationships in this field that refer to a product item.
            </summary>
            <returns>The target Sitecore items for the catalog relationships in this field that refer to a product item..</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.RelationshipField.GetCategoryRelationships">
            <summary>
            Gets the catalog relationships in this field that refer to a category item.
            </summary>
            <returns>The catalog relationships in this field that refer to a category item.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.RelationshipField.GetCategoryRelationshipsTargets">
            <summary>
            Gets the target Sitecore items for the catalog relationships in this field that refer to a category item.
            </summary>
            <returns>The target Sitecore items for the catalog relationships in this field that refer to a category item..</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.RelationshipField.SplitRelationshipString">
            <summary>
            Splits the relationship string.
            </summary>
            <returns>String array of relationships.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.RelationshipField.UpdateAllRelationships(System.Collections.Generic.IEnumerable{Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.CatalogRelationshipInformation})">
            <summary>
            Updates the Value of this field to represent the relationships provided.
            </summary>
            <param name="allRelationships">The relationships associated with this field.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.VariantField">
            <summary>
            Field helping to parse and manipulate the product vatriant content.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.VariantField.#ctor(Sitecore.Data.Fields.Field)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.VariantField"/> class.
            </summary>
            <param name="innerField">Field that contains the variant information.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.VariantField.ToVariantField(Sitecore.Data.Fields.Field)">
            <summary>
            Converts the field to a VariantField.
            </summary>
            <param name="field">The Sitecore field.</param>
            <returns>VariantField based on the passed in Field.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.VariantField.op_Implicit(Sitecore.Data.Fields.Field)~Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.VariantField">
            <summary>
            Converts the field to a VariantField.
            </summary>
            <param name="field">The Sitecore field.</param>
            <returns>VariantField from the Field passed in.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.CatalogRelationshipInformation">
            <summary>
            Represents a relationship between two catalog items.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.CatalogRelationshipInformation.#ctor(System.Guid,System.Guid,System.Guid,CommerceServer.Core.Catalog.CommerceItemType,System.String,Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.RelationshipField)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.CatalogRelationshipInformation"/> class.
            </summary>
            <param name="fromItemExternalId">THe source item external ID.</param>
            <param name="relationshipExternalId">The relationship external ID.</param>
            <param name="toItemExternalId">The target item external ID.</param>
            <param name="toItemType">The target item type.</param>
            <param name="language">The target catalog item language.</param>
            <param name="parentField">The <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.RelationshipField"/> that owns this item.</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.CatalogRelationshipInformation.FromItemExternalId">
            <summary>
            Gets the Sitecore ID of the source item.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.CatalogRelationshipInformation.RelationshipExternalId">
            <summary>
            Gets the relationship external ID.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.CatalogRelationshipInformation.ToItemExternalId">
            <summary>
            Gets the Sitecore ID of the target item.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.CatalogRelationshipInformation.ToItemType">
            <summary>
            Gets the type of catalog item represented by the <see cref="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.CatalogRelationshipInformation.ToItemExternalId"/>
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.CatalogRelationshipInformation.Language">
            <summary>
            Gets the language of catalog item.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.CatalogRelationshipInformation.Rank">
            <summary>
            Gets or sets the rank / order of the relationship.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.CatalogRelationshipInformation.RelationshipDescription">
            <summary>
            Gets or sets the description of the relationship.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.CatalogRelationshipInformation.RelationshipName">
            <summary>
            Gets the relationship name.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.CatalogRelationshipInformation.TargetCatalogName">
            <summary>
            Gets the name of the target calog for this relationship.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.CatalogRelationshipInformation.TargetCategoryName">
            <summary>
            Gets the name of the target category for this relationship.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.CatalogRelationshipInformation.TargetProductId">
            <summary>
            Gets the ID of the target product for this relationship.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.CatalogRelationshipInformation.IsReciprocal">
            <summary>
            Gets a value that determines whether or not the relationship is reciprocal.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.CatalogRelationshipInformation.FromCatalogItem">
            <summary>
            Gets the <see cref="T:CommerceServer.Core.Catalog.CatalogItem"/> that is the source of the relationship.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.CatalogRelationshipInformation.Relationship">
            <summary>
            Gets the relationship represented by this object.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.CatalogRelationshipInformation.ToSitecoreItem">
            <summary>
            Gets the Sitecore <see cref="T:Sitecore.Data.Items.Item"/> that is the target of this relationship.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.CatalogRelationshipInformation.Parse(System.String,Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.RelationshipField)">
            <summary>
            parses a string representing the catalog relationship.
            </summary>
            <param name="value">A string representing the catalog relationship.</param>
            <param name="parentField">The <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.RelationshipField"/> that owns the parsed <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.CatalogRelationshipInformation"/>, or null if a field does not own the item.</param>
            <returns>The parsed <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.CatalogRelationshipInformation"/> object.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.CatalogRelationshipInformation.UpdateCatalogRelationship(CommerceServer.Core.Catalog.CatalogRelationshipsDataSet.CatalogRelationship)">
            <summary>
            Updates a single relationship to contain the values that have been updated by this object.
            </summary>
            <param name="catalogRelationship">The catalog relationship to update.</param>
            <returns>True if any of the provided <paramref name="catalogRelationship"/> properties have been updated, otherwise false.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.CatalogRelationshipInformation.UpdateCatalogRelationship(CommerceServer.Core.Catalog.CatalogItem)">
            <summary>
            Updates the relationship of the of the provided <see cref="T:CommerceServer.Core.Catalog.CatalogItem"/> that is represented by this object.
            </summary>
            <param name="catalogItem">The <see cref="T:CommerceServer.Core.Catalog.CatalogItem"/> whose relationship will be updated.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.CatalogRelationshipInformation.GetRelationshipProperties(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Given a list of property names, retrieves the values of those properties on the current relationship, or the target of the relationship.
            </summary>
            <param name="propertiesToRetrieve">The names of the properties to retrieve.</param>
            <returns>The values of the requested property names.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.CatalogRelationshipInformation.Serialize">
            <summary>
            Serializes the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.CatalogRelationshipInformation"/> object into a string.
            </summary>
            <returns>The string representation of this object.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.CatalogRelationshipInformation.GetTargetCatalogItemProperty(System.String)">
            <summary>
            Given a property name, retrieves the value of that property on the target of the relationship represented by this object.
            </summary>
            <param name="fieldName">The name of the target sitecore item field whose value will be retrieved.</param>
            <returns>The value of the target sitecore item specified by the <paramref name="fieldName"/> parameter.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.GetVirtualCatalogRebuildStatusWarnings">
            <summary>
            Component for the getContentEditorWarnings pipeline that checks the rebuild status of Commerce virtual catalogs.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.GetVirtualCatalogRebuildStatusWarnings.Process(Sitecore.Pipelines.GetContentEditorWarnings.GetContentEditorWarningsArgs)">
            <summary>
            pipeline execution method.  If necessary, returns a message in the content editor indicating CS is not currently initialized.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Events.CatalogExternalIdCacheRefreshEvent">
            <summary>
            Custom catalog external ID cache refresh event class
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Events.CatalogExternalIdCacheRefreshEvent.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Events.CatalogExternalIdCacheRefreshEvent"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Events.CatalogExternalIdCacheRefreshEvent.AddedExternalIds">
            <summary>
            Gets a list of Commerce catalog item external IDs that have been added to the cache.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Events.CatalogExternalIdCacheRefreshEvent.RemovedExternalIds">
            <summary>
            Gets a list of Commerce catalog item external IDs that have been removed from the cache.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Events.CatalogExternalIdCacheRefreshEvent.CacheRefreshed">
            <summary>
            Gets or sets a value indicating whether the entire external ID cache should be refreshed.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Events.CatalogExternalIdCacheRefreshEventArgs">
            <summary>
            Event arguments for the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Events.CatalogExternalIdCacheRefreshEvent"/>
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Events.CatalogExternalIdCacheRefreshEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Events.CatalogExternalIdCacheRefreshEventArgs"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Events.CatalogExternalIdCacheRefreshEventArgs.AddedExternalIds">
            <summary>
            Gets a list of Commerce catalog item external IDs that have been added to the cache.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Events.CatalogExternalIdCacheRefreshEventArgs.DeletedExternalIds">
            <summary>
            Gets a list of Commerce catalog item external IDs that have been removed from the cache.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Events.CatalogExternalIdCacheRefreshEventArgs.CacheRefreshed">
            <summary>
            Gets or sets a value indicating whether the entire external ID cache should be refreshed.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Events.CatalogExternalIdCacheRefreshEventHandler">
            <summary>
            Event handler for the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Events.CatalogExternalIdCacheRefreshEvent"/>.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Events.CatalogExternalIdCacheRefreshEventHandler.Run(Sitecore.Commerce.Connect.CommerceServer.Catalog.Events.CatalogExternalIdCacheRefreshEvent)">
            <summary>  
            Run method used to raise the local event  
            </summary>  
            <param name="event">Event info</param>  
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Events.CatalogExternalIdCacheRefreshEventHandler.OnCatalogExternalIdCacheRefresh(System.Object,System.EventArgs)">
            <summary>
            Called when the catalog external ID cache refresh event is triggered
            </summary>
            <param name="sender">The senders information</param>
            <param name="args">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Events.CatalogRebuildFullTextIndexEventArgs">
            <summary>
            Event args for <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Events.CatalogRebuildFullTextIndexEvent"/>
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Events.CatalogRebuildFullTextIndexEventArgs.#ctor(Sitecore.Data.ID,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Events.CatalogRebuildFullTextIndexEventArgs" /> class.
            </summary>
            <param name="catalogID">The id of the catalog</param>
            <param name="catalogName">The name of the catalog</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Events.CatalogRebuildFullTextIndexEventArgs.CatalogID">
            <summary>
            Gets or sets the catalog id
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Events.CatalogRebuildFullTextIndexEventArgs.CatalogName">
            <summary>
            Gets or sets the catalog name
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Events.CatalogPublishingExcluderEvent">
            <summary>
            Used to make sure the Sitecore publishing process does not try and publish Commerce Server Catalog Items
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Events.CatalogPublishingExcluderEvent.CheckProcessing(System.Object,System.EventArgs)">
            <summary>
            The method called from the publish:itemProcessing event
            </summary>
            <param name="sender">The object that created the event</param>
            <param name="args">The args for the current event</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Events.CatalogPublishingExcluderEvent.IsValidPath(Sitecore.Data.Items.Item)">
            <summary>
            Since commerce catalog items can only exist under certain paths, check and make sure
            that the current item is under a valid path
            </summary>
            <param name="currentItem">The item whose path needs to be checked</param>
            <returns>True if it is under a valid path or false otherwise</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Events.CatalogPublishingExcluderEvent.IsCatalogItem(Sitecore.Data.Items.Item)">
            <summary>
            Checks to see if is an item is a Sitecore item that represents a Commerce Catalog items
            </summary>
            <param name="currentItem">The item that needs to be checked</param>
            <returns>True if it is a Commerce Catalog item, otherwise false</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Events.CatalogExternalIdCacheRefreshHook">
            <summary>
            Hook for  <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Events.CatalogExternalIdCacheRefreshEvent"/>
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Events.CatalogExternalIdCacheRefreshHook.Initialize">
            <summary>
            Init the hook
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Events.CatalogRebuildFullTextIndexEvent">
            <summary>
            Catalog Rebuild Full Text Index Event class
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Events.CatalogRebuildFullTextIndexEvent.#ctor(Sitecore.Data.ID,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Events.CatalogRebuildFullTextIndexEvent" /> class.
            </summary>
            <param name="catalogID">Catalog id to rebuild the index on</param>
            <param name="catalogName">The catalog name</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Events.CatalogRebuildFullTextIndexEvent.CatalogID">
            <summary>
            Gets or sets the catalog id
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Events.CatalogRebuildFullTextIndexEvent.CatalogName">
            <summary>
            Gets or sets the catalog name
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Events.CatalogRebuildFullTextIndexEventHandler">
            <summary>
            Event handler for <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Events.CacheRefreshEvent"/>
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Events.CatalogRebuildFullTextIndexEventHandler.Run(Sitecore.Commerce.Connect.CommerceServer.Catalog.Events.CatalogRebuildFullTextIndexEvent)">
            <summary>  
            Run method used to raise the local event  
            </summary>  
            <param name="event">Event info</param>  
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Events.CatalogRebuildFullTextIndexEventHandler.OnRebuild(System.Object,System.EventArgs)">
            <summary>
            Called when the catalog rebuild full text index event is triggered
            </summary>
            <param name="sender">The senders information</param>
            <param name="args">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Events.CatalogRebuildFullTextIndexHook">
            <summary>
            Hook for  <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Events.CatalogRebuildFullTextIndexEvent"/>
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Events.CatalogRebuildFullTextIndexHook.Initialize">
            <summary>
            Init the hook
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogVersionException">
            <summary>
            Exception thrown if a call is made to create a product in a virtual catalog.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogVersionException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogVersionException"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogVersionException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogVersionException" /> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogVersionException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogVersionException"/> class.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogVersionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogVersionException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogVersionException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.ExternalSettingsResolverException">
            <summary>
            General exception thrown by External Setting resolvers.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.ExternalSettingsResolverException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.ExternalSettingsResolverException"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.ExternalSettingsResolverException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.ExternalSettingsResolverException"/> class.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.ExternalSettingsResolverException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.ExternalSettingsResolverException"/> class.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.ExternalSettingsResolverException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.ExternalSettingsResolverException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.ExternalSettingsResolverException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <PermissionSet>
              <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="*AllFiles*" PathDiscovery="*AllFiles*" />
              <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="SerializationFormatter" />
            </PermissionSet>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogFieldValidator">
            <summary>
            Validates fields that map to a catalog field.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogFieldValidator.PropertyDefinitionNameParameter">
            <summary>
            The name of the parameter that identifies the Commerce catalog property definition evaluated by this validator.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogFieldValidator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogFieldValidator"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogFieldValidator.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogFieldValidator"/> class.
            </summary>
            <param name="info">The serialization info.</param>
            <param name="context">The streaming context.</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogFieldValidator.Name">
            <summary>
            Gets the name.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogFieldValidator.PropertyDefinitionName">
            <summary>
            Gets or sets the name the Commerce catalog property definition evaluated by this validator.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogFieldValidator.ItemCulture">
            <summary>
            Gets the culture associated with the item currently being edited.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogFieldValidator.PropertyDefinition">
            <summary>
            Gets or sets the property definition that is used to validate this catalog field.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogFieldValidator.EnumerationValues">
            <summary>
            Gets or sets the valid enumeration values for this Catalog field.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogFieldValidator.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with the data needed to serialize the target object. 
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> to populate with data. </param>
            <param name="context">The destination <see cref="T:System.Runtime.Serialization.StreamingContext"/> for this serialization.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogFieldValidator.ValidateItem(Sitecore.Data.Items.Item)">
            <summary>
            Validates a field value of the provided Sitecore item.
            </summary>
            <param name="item">The item to validate.</param>
            <returns>The result of the evaluation.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogFieldValidator.ValidateValue(System.String)">
            <summary>
            Validates a value.
            </summary>
            <param name="valueToValidate">The value to validate.</param>
            <returns>The result of the evaluation.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogFieldValidator.GetMaxValidatorResult">
            <summary>
            Gets the maximum validator result.
            </summary>
            <returns>The maximum validator result.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogFieldValidator.Evaluate">
            <summary>
            Determines whether the value in the input control is valid for this Catalog field.
            </summary>
            <returns>The result of the evaluation.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogFieldValidator.EvaluateText(System.String)">
            <summary>
            Determines whether the value in the input control is valid for this Catalog field of type Text.
            </summary>
            <param name="valueToValidate">The value to validate.</param>
            <returns>The result of the evaluation.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogFieldValidator.EvaluateMedia(System.String)">
            <summary>
            Determines whether the value in the input control is valid for this Catalog field of type Media.
            </summary>
            <param name="valueToValidate">The value to validate.</param>
            <returns>The result of the evaluation.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogFieldValidator.EvaluateString(System.String)">
            <summary>
            Determines whether the value in the input control is valid for this Catalog field of type String.
            </summary>
            <param name="valueToValidate">The value to validate.</param>
            <returns>The result of the evaluation.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogFieldValidator.EvaluateFilePath(System.String)">
            <summary>
            Determines whether the value in the input control is valid for this Catalog field of type FilePath.
            </summary>
            <param name="valueToValidate">The value to validate.</param>
            <returns>The result of the evaluation.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogFieldValidator.EvaluateUniqueIdentifier(System.String)">
            <summary>
            Determines whether the value in the input control is valid for this Catalog field of type UniqueIdentifier.
            </summary>
            <param name="valueToValidate">The value to validate.</param>
            <returns>The result of the evaluation.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogFieldValidator.EvaluateInteger(System.String)">
            <summary>
            Determines whether the value in the input control is valid for this Catalog field of type Integer.
            </summary>
            <param name="valueToValidate">The value to validate.</param>
            <returns>The result of the evaluation.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogFieldValidator.EvaluateFloat(System.String)">
            <summary>
            Determines whether the value in the input control is valid for this Catalog field of type Float.
            </summary>
            <param name="valueToValidate">The value to validate.</param>
            <returns>The result of the evaluation.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogFieldValidator.EvaluateEnumeration(System.String)">
            <summary>
            Determines whether the value in the input control is valid for this Catalog field of type Enumeration.
            </summary>
            <param name="valueToValidate">The value to validate.</param>
            <returns>The result of the evaluation.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogFieldValidator.EvaluateDouble(System.String)">
            <summary>
            Determines whether the value in the input control is valid for this Catalog field of type Double.
            </summary>
            <param name="valueToValidate">The value to validate.</param>
            <returns>The result of the evaluation.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogFieldValidator.EvaluateDateTime(System.String)">
            <summary>
            Determines whether the value in the input control is valid for this Catalog field of type DateTime.
            </summary>
            <param name="valueToValidate">The value to validate.</param>
            <returns>The result of the evaluation.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogFieldValidator.EvaluateCurrency(System.String)">
            <summary>
            Determines whether the value in the input control is valid for this Catalog field of type Currency.
            </summary>
            <param name="valueToValidate">The value to validate.</param>
            <returns>The result of the evaluation.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogFieldValidator.EvaluateBoolean(System.String)">
            <summary>
            Determines whether the value in the input control is valid for this Catalog field of type Boolean.
            </summary>
            <param name="valueToValidate">The value to validate.</param>
            <returns>The result of the evaluation.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogFieldValidator.EvaluateBigInteger(System.String)">
            <summary>
            Determines whether the value in the input control is valid for this Catalog field of type BigInteger.
            </summary>
            <param name="valueToValidate">The value to validate.</param>
            <returns>The result of the evaluation.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogFieldValidator.EvaluateRequired(System.String)">
            <summary>
            Determines whether the value in the input control is valid for the Required restriction of this Catalog field.
            </summary>
            <param name="valueToValidate">The value to validate.</param>
            <returns>The result of the evaluation.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogItemInsertRule">
            <summary>
            Insert rule for catalog Items
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogItemInsertRule.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogItemInsertRule"/> class.
            </summary>
            <param name="count">The count.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogItemInsertRule.Expand(System.Collections.Generic.List{Sitecore.Data.Items.Item},Sitecore.Data.Items.Item)">
            <summary>
            Expands the specified masters.
            </summary>
            <param name="masters">The masters.</param>
            <param name="item">The item.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogItemInsertRule.AddTemplatesToCatalog(System.Collections.Generic.List{Sitecore.Data.Items.Item},Sitecore.Data.Items.Item)">
            <summary>
            Adds the catalog templates.
            </summary>
            <param name="masters">The masters.</param>
            <param name="item">The item.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogItemInsertRule.AddTemplatesToCategory(System.Collections.Generic.List{Sitecore.Data.Items.Item},Sitecore.Data.Items.Item)">
            <summary>
            Adds the category templates.
            </summary>
            <param name="masters">The masters.</param>
            <param name="item">The item.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogItemInsertRule.AddTemplatesToProduct(System.Collections.Generic.List{Sitecore.Data.Items.Item},Sitecore.Data.Items.Item)">
            <summary>
            Adds the product templates.
            </summary>
            <param name="masters">The masters.</param>
            <param name="item">The item.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogItemInsertRule.IsFromTemplate(Sitecore.Data.Items.Item,Sitecore.Data.ID)">
            <summary>
            Determines whether the item inherits from the given template id.
            </summary>
            <param name="item">The item.</param>
            <param name="templateId">The template identifier.</param>
            <returns>True if the item inherits from the given template id; otherwise false. </returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.ICatalogTypeOverride">
            <summary>
            Interface for Commerce Server Catalog Type Override.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.ICatalogTypeOverride.GetTypeOverride(System.String,CommerceServer.Core.Catalog.CatalogDataType)">
            <summary>
            Gets a type override for a catalog property
            </summary>
            <param name="propertyName">The property.</param>
            <param name="originalType">the non overridden type</param>
            <returns>The override type or the original if no override occurred</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.IExternalSettingsResolver">
            <summary>
            Interface for External Settings
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.IExternalSettingsResolver.GetCatalogItem(CommerceServer.Core.Catalog.Variant,CommerceServer.Core.Catalog.Product,CommerceServer.Core.Catalog.Product@)">
            <summary>
            Gets the catalog item.
            </summary>
            <param name="current">The base catalog variant.</param>
            <param name="currentProduct">The product of the variant.</param>
            <param name="settingsProduct">The settings product is returned in this parameter.</param>
            <returns>
            A Commerce Variant.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.IExternalSettingsResolver.GetCatalogItem(CommerceServer.Core.Catalog.ProductCatalog)">
            <summary>
            Gets the catalog item.
            </summary>
            <param name="current">The current.</param>
            <returns>A Commerce ProductCatalog.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.IExternalSettingsResolver.GetCatalogItem(CommerceServer.Core.Catalog.CatalogItem)">
            <summary>
            Gets the catalog item.
            </summary>
            <param name="current">The current.</param>
            <returns>A Commerce CatalogItem.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.IExternalSettingsResolver.TryGetCatalogItem(CommerceServer.Core.Catalog.Variant,CommerceServer.Core.Catalog.Product,CommerceServer.Core.Catalog.Product@)">
            <summary>
            Tries the get catalog item.
            </summary>
            <param name="current">The base catalog variant.</param>
            <param name="currentProduct">The product of the variant.</param>
            <param name="settingsProduct">The settings product is returned in this parameter.</param>
            <returns>
            A Commerce Variant; or null if it was not found.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.IExternalSettingsResolver.TryGetCatalogItem(CommerceServer.Core.Catalog.ProductCatalog)">
            <summary>
            Tries the get catalog item.
            </summary>
            <param name="current">The current.</param>
            <returns>A Commerce catalogItem or null if it was not found.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.IExternalSettingsResolver.TryGetCatalogItem(CommerceServer.Core.Catalog.CatalogItem)">
            <summary>
            Tries the get catalog item.
            </summary>
            <param name="current">The current.</param>
            <returns>A Commerce CatalogItem or null if it was not found.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.RebuildCustomCatalogJob">
            <summary>
            Job that executes a Commerce custom catalog rebuild.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Catalog.RebuildCustomCatalogJob.JobName">
            <summary>
            The name of the Rebuild Custom Catalog job.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Catalog.RebuildCustomCatalogJob.JobCategory">
            <summary>
            The category of the Rebuild Custom Catalog job.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.RebuildCustomCatalogJob.#ctor(CommerceServer.Core.Catalog.VirtualCatalog,Sitecore.Data.Items.Item)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.RebuildCustomCatalogJob" /> class.
            </summary>
            <param name="virtualCatalog">The <see cref="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.RebuildCustomCatalogJob.VirtualCatalog"/> to rebuild.</param>
            <param name="item">The <see cref="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.RebuildCustomCatalogJob.Item"/> to re-index.</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.RebuildCustomCatalogJob.RebuildStarted">
            <summary>
            Gets or sets a value indicating whether the virtual catalog rebuild has started.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.RebuildCustomCatalogJob.RebuildComplete">
            <summary>
            Gets or sets a value indicating whether the virtual catalog rebuild has completed.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.RebuildCustomCatalogJob.VirtualCatalog">
            <summary>
            Gets or sets the <see cref="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.RebuildCustomCatalogJob.VirtualCatalog"/> to rebuild.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.RebuildCustomCatalogJob.Item">
            <summary>
            Gets or sets the <see cref="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.RebuildCustomCatalogJob.Item"/> to re-index.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.RebuildCustomCatalogJob.Run">
            <summary>
            Runs the virtual catalog rebuild job.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.RebuildCustomCatalogJob.RemoveOldEntries(System.String,Sitecore.ContentSearch.ISearchIndex,Sitecore.Data.Database)">
            <summary>
            Deletes all entries related to a virtual catalog
            </summary>
            <param name="catalogName">The name of the catalog that was deleted</param>
            <param name="index">The index containing the old entries</param>
            <param name="database">The database containing the virtual catalog items</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.ItemClassificationService">
            <summary>
            <see cref="T:Sitecore.Commerce.Products.IItemClassificationService"/> implementation for Commerce Server.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.ItemClassificationService.GetCatalogName(Sitecore.Data.Items.Item)">
            <summary>
            Retrieves the name of the catalog a product item belongs to.
            </summary>
            <param name="productItem">A <see cref="T:Sitecore.Data.Items.Item"/> that represents a Product entity.</param>
            <returns>The name of the catalog the product item belongs to.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.ItemClassificationService.GetProductId(Sitecore.Data.Items.Item)">
            <summary>
            Retrieves the ID of an item that represents a Product entity.
            </summary>
            <param name="productItem">A <see cref="T:Sitecore.Data.Items.Item"/> that represents a Product entity.</param>
            <returns>The ID of the Product.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.ItemClassificationService.IsProduct(Sitecore.Data.Items.Item)">
            <summary>
            Determines if the provided <see cref="T:Sitecore.Data.Items.Item"/> represents a Product entity.
            </summary>
            <param name="item">The <see cref="T:Sitecore.Data.Items.Item"/> to examine.</param>
            <returns>True if the item represents a Product entity, otherwise false.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.ItemClassificationService.IsProductTemplate(Sitecore.Data.ID)">
            <summary>
            Determines if the provided template ID represents a Product entity template.
            </summary>
            <param name="templateId">The template ID to examine.</param>
            <returns>True if the template ID represents a Product entity template, otherwise false.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.PricePipelineProcessor">
            <summary>
            Defines the base Price pipeline processor.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.GetProductBulkPrices">
            <summary>
            Defines the GetProductBulkPrices pipeline processor.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.GetProductBulkPrices.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.GetProductPrices">
            <summary>
            Defines the GetProductsPrices pipeline processor.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.GetProductPrices.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CatalogGroupToSitecoreItemArgs">
            <summary>
            Arguments used by the translation pipeline responsible for converting a Commerce Server catalog set into its Sitecore item.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CatalogGroupToSitecoreItemArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CatalogGroupToSitecoreItemArgs"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CatalogGroupToSitecoreItemArgs.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CatalogGroupToSitecoreItemArgs"/> class.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CatalogGroupToSitecoreItemArgs.InputParameters">
            <summary>
            Gets the input parameters.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CatalogGroupToSitecoreItemArgs.OutputParameters">
            <summary>
            Gets the output parameters.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CatalogGroupToSitecoreItemArgs.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Gets the object data.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CatalogGroupToSitecoreItemArgs.Input">
            <summary>
            Defines the input parameter arguments.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CatalogGroupToSitecoreItemArgs.Input.CallContext">
            <summary>
            Gets or sets the call context.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CatalogGroupToSitecoreItemArgs.Input.ItemDefinition">
            <summary>
            Gets or sets the item definition.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CatalogGroupToSitecoreItemArgs.Input.CatalogSet">
            <summary>
            Gets or sets the catalog set.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CatalogGroupToSitecoreItemArgs.Output">
            <summary>
            Defines the output parameter arguments.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CatalogGroupToSitecoreItemArgs.Output.FieldList">
            <summary>
            Gets or sets the field list.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateDynamicCatalogGroupArgs">
            <summary>
            Arguments used by the pipeline responsible for creating a CS CatalogSet.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateDynamicCatalogGroupArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateDynamicCatalogGroupArgs"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateDynamicCatalogGroupArgs.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateDynamicCatalogGroupArgs"/> class.
            </summary>
            <param name="info">The serialized data.</param>
            <param name="context">The context.</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateDynamicCatalogGroupArgs.InputParameters">
            <summary>
            Gets the input parameters.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateDynamicCatalogGroupArgs.OutputParameters">
            <summary>
            Gets the output parameters.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateDynamicCatalogGroupArgs.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Gets the object data.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateDynamicCatalogGroupArgs.Input">
            <summary>
            Defines the input parameter arguments.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateDynamicCatalogGroupArgs.Input.CallContext">
            <summary>
            Gets or sets the call context.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateDynamicCatalogGroupArgs.Input.ItemID">
            <summary>
            Gets or sets the item ID.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateDynamicCatalogGroupArgs.Input.ParentItemID">
            <summary>
            Gets or sets the parent item ID.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateDynamicCatalogGroupArgs.Input.TemplateID">
            <summary>
            Gets or sets the template ID.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateDynamicCatalogGroupArgs.Input.CatalogSetName">
            <summary>
            Gets or sets the name of the CatalogSet.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateDynamicCatalogGroupArgs.Input.Description">
            <summary>
            Gets or sets the description of the CatalogSet.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateDynamicCatalogGroupArgs.Input.Expression">
            <summary>
            Gets or sets the expression that defines which catalogs are associated with the CatalogSet.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateDynamicCatalogGroupArgs.Output">
            <summary>
            Defines the output parameter arguments.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateDynamicCatalogGroupArgs.Output.Success">
            <summary>
            Gets or sets a value indicating whether the pipeline execution succeeded.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateStaticCatalogGroupArgs">
            <summary>
            Arguments used by the pipeline responsible for creating a CS CatalogSet.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateStaticCatalogGroupArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateStaticCatalogGroupArgs"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateStaticCatalogGroupArgs.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateStaticCatalogGroupArgs"/> class.
            </summary>
            <param name="info">The serialized data.</param>
            <param name="context">The context.</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateStaticCatalogGroupArgs.InputParameters">
            <summary>
            Gets the input parameters.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateStaticCatalogGroupArgs.OutputParameters">
            <summary>
            Gets the output parameters.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateStaticCatalogGroupArgs.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Gets the object data.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateStaticCatalogGroupArgs.Input">
            <summary>
            Defines the input parameter arguments.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateStaticCatalogGroupArgs.Input.CallContext">
            <summary>
            Gets or sets the call context.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateStaticCatalogGroupArgs.Input.ItemID">
            <summary>
            Gets or sets the item ID.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateStaticCatalogGroupArgs.Input.ParentItemID">
            <summary>
            Gets or sets the parent item ID.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateStaticCatalogGroupArgs.Input.TemplateID">
            <summary>
            Gets or sets the template ID.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateStaticCatalogGroupArgs.Input.CatalogSetName">
            <summary>
            Gets or sets the name of the CatalogSet.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateStaticCatalogGroupArgs.Input.Description">
            <summary>
            Gets or sets the description of the CatalogSet.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateStaticCatalogGroupArgs.Input.ProductCatalogs">
            <summary>
            Gets or sets the names of the product catalogs associated with the CatalogSet.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateStaticCatalogGroupArgs.Output">
            <summary>
            Defines the output parameter arguments.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateStaticCatalogGroupArgs.Output.Success">
            <summary>
            Gets or sets a value indicating whether the pipeline execution succeeded.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.GetCommerceCatalogFallbackLanguageArgs">
            <summary>
            Arguments used by the pipeline responsible for looking up catalog fallback languages.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.GetCommerceCatalogFallbackLanguageArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.GetCommerceCatalogFallbackLanguageArgs"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.GetCommerceCatalogFallbackLanguageArgs.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.GetCommerceCatalogFallbackLanguageArgs"/> class.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.GetCommerceCatalogFallbackLanguageArgs.InputParameters">
            <summary>
            Gets the input parameters.
            </summary>
            <value>
            The input parameters.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.GetCommerceCatalogFallbackLanguageArgs.OutputParameters">
            <summary>
            Gets the output parameters.
            </summary>
            <value>
            The output parameters.
            </value>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.GetCommerceCatalogFallbackLanguageArgs.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Gets the object data.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.GetCommerceCatalogFallbackLanguageArgs.Input">
            <summary>
            Defines the input parameter arguments.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.GetCommerceCatalogFallbackLanguageArgs.Input.Language">
            <summary>
            Gets or sets the language to look up the fallback language for.
            </summary>
            <value>
            The language to look up.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.GetCommerceCatalogFallbackLanguageArgs.Input.DatabaseName">
            <summary>
            Gets or sets the database name to use to lookup fallback languages.
            </summary>
            <value>
            The Sitecore database name.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.GetCommerceCatalogFallbackLanguageArgs.Output">
            <summary>
            Defines the output parameter arguments.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.GetCommerceCatalogFallbackLanguageArgs.Output.Success">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.GetCommerceCatalogFallbackLanguageArgs.Output"/> is success.
            </summary>
            <value>
              <c>true</c> if success; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.GetCommerceCatalogFallbackLanguageArgs.Output.FallbackLanguage">
            <summary>
            Gets or sets the fallback language.
            </summary>
            <value>
            The fallback language.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.DeleteCatalogItemArgs">
            <summary>
            Arguments used by the pipeline responsible for deleting items that represent a catalog or category.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.DeleteCatalogItemArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.DeleteCatalogItemArgs"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.DeleteCatalogItemArgs.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.DeleteCatalogItemArgs"/> class.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.DeleteCatalogItemArgs.InputParameters">
            <summary>
            Gets the input parameters.
            </summary>
            <value>
            The input parameters.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.DeleteCatalogItemArgs.OutputParameters">
            <summary>
            Gets the output parameters.
            </summary>
            <value>
            The output parameters.
            </value>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.DeleteCatalogItemArgs.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Gets the object data.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.DeleteCatalogItemArgs.Input">
            <summary>
            Defines the input parameter arguments.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.DeleteCatalogItemArgs.Input.Item">
            <summary>
            Gets or sets the item to be delete.
            </summary>
            <value>
            The item to be deleted.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.DeleteCatalogItemArgs.Output">
            <summary>
            Defines the output parameter arguments.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.DeleteCatalogItemArgs.Output.Success">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.DeleteCatalogItemArgs.Output"/> is success.
            </summary>
            <value>
              <c>true</c> if success; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.GetCatalogOperationProgressArgs">
            <summary>
            Arguments used by the GetCatalogOperationProgress pipeline.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.GetCatalogOperationProgressArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.GetCatalogOperationProgressArgs"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.GetCatalogOperationProgressArgs.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.GetCatalogOperationProgressArgs"/> class.
            </summary>
            <param name="info">The serialized data.</param>
            <param name="context">The context.</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.GetCatalogOperationProgressArgs.InputParameters">
            <summary>
            Gets the input parameters.
            </summary>
            <value>
            The input parameters.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.GetCatalogOperationProgressArgs.OutputParameters">
            <summary>
            Gets the output parameters.
            </summary>
            <value>
            The output parameters.
            </value>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.GetCatalogOperationProgressArgs.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Gets the object data.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.GetCatalogOperationProgressArgs.Input">
            <summary>
            Defines the input parameter arguments.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.GetCatalogOperationProgressArgs.Input.OperationId">
            <summary>
            Gets or sets the ID of the operation to return.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.GetCatalogOperationProgressArgs.Input.StartedAfter">
            <summary>
            Gets or sets the maximum age of any operations that will be returned.  For example, if StartedAfter is 24 hours, then only operations started in the last 24 hours will be returned.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.GetCatalogOperationProgressArgs.Output">
            <summary>
            Defines the output parameter arguments.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.GetCatalogOperationProgressArgs.Output.Operations">
            <summary>
            Gets or sets the progress of the operations that were requested.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.GetVirtualCatalogRebuildStatusArgs">
            <summary>
            Arguments used by the GetVirtualCatalogRebuildStatus pipeline.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.GetVirtualCatalogRebuildStatusArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.GetVirtualCatalogRebuildStatusArgs"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.GetVirtualCatalogRebuildStatusArgs.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.GetVirtualCatalogRebuildStatusArgs"/> class.
            </summary>
            <param name="info">The serialized data.</param>
            <param name="context">The context.</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.GetVirtualCatalogRebuildStatusArgs.InputParameters">
            <summary>
            Gets the input parameters.
            </summary>
            <value>
            The input parameters.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.GetVirtualCatalogRebuildStatusArgs.OutputParameters">
            <summary>
            Gets the output parameters.
            </summary>
            <value>
            The output parameters.
            </value>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.GetVirtualCatalogRebuildStatusArgs.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Gets the object data.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.GetVirtualCatalogRebuildStatusArgs.Input">
            <summary>
            Defines the input parameter arguments.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.GetVirtualCatalogRebuildStatusArgs.Input.ItemId">
            <summary>
            Gets or sets the ID of the Sitecore item to inspect.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.GetVirtualCatalogRebuildStatusArgs.Output">
            <summary>
            Defines the output parameter arguments.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.GetVirtualCatalogRebuildStatusArgs.Output.RebuildStatus">
            <summary>
            Gets or sets the rebuild status of the virtual catalog containing the item being inspected.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.PurgeCompletedCatalogOperationsArgs">
            <summary>
            Arguments used by the PurgeCompletedCatalogOperations pipeline.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.PurgeCompletedCatalogOperationsArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.PurgeCompletedCatalogOperationsArgs"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.PurgeCompletedCatalogOperationsArgs.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.PurgeCompletedCatalogOperationsArgs"/> class.
            </summary>
            <param name="info">The serialized data.</param>
            <param name="context">The context.</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.PurgeCompletedCatalogOperationsArgs.InputParameters">
            <summary>
            Gets the input parameters.
            </summary>
            <value>
            The input parameters.
            </value>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.PurgeCompletedCatalogOperationsArgs.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Gets the object data.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.PurgeCompletedCatalogOperationsArgs.Input">
            <summary>
            Defines the input parameter arguments.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.PurgeCompletedCatalogOperationsArgs.Input.OperationId">
            <summary>
            Gets or sets the ID of the operation to return.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.PurgeCompletedCatalogOperationsArgs.Input.CompletedBefore">
            <summary>
            Gets or sets the maximum end date of all completed operations that will be purged.  For example, if CompletedBefore is Jan 1st, 2014 hours, then only operations completed before Jan 1st 2014 will be purged.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.RebuildVirtualCatalogArgs">
            <summary>
            Arguments used by the RebuildVirtualCatalog pipeline.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.RebuildVirtualCatalogArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.RebuildVirtualCatalogArgs"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.RebuildVirtualCatalogArgs.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.RebuildVirtualCatalogArgs"/> class.
            </summary>
            <param name="info">The serialized data.</param>
            <param name="context">The context.</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.RebuildVirtualCatalogArgs.InputParameters">
            <summary>
            Gets the input parameters.
            </summary>
            <value>
            The input parameters.
            </value>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.RebuildVirtualCatalogArgs.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Gets the object data.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.RebuildVirtualCatalogArgs.Input">
            <summary>
            Defines the input parameter arguments.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.RebuildVirtualCatalogArgs.Input.ItemId">
            <summary>
            Gets or sets the ID of the Sitecore item whose virtual catalog will be rebuilt.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.RebuildVirtualCatalogArgs.Input.Item">
            <summary>
            Gets or sets the Sitecore item whose virtual catalog will be rebuilt.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.RevertVirtualCatalogPropertyOverrideArgs">
            <summary>
            Arguments used by the RevertVirtualCatalogPropertyOverride pipeline.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.RevertVirtualCatalogPropertyOverrideArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.RevertVirtualCatalogPropertyOverrideArgs"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.RevertVirtualCatalogPropertyOverrideArgs.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.RevertVirtualCatalogPropertyOverrideArgs"/> class.
            </summary>
            <param name="info">The serialized data.</param>
            <param name="context">The context.</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.RevertVirtualCatalogPropertyOverrideArgs.InputParameters">
            <summary>
            Gets the input parameters.
            </summary>
            <value>
            The input parameters.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.RevertVirtualCatalogPropertyOverrideArgs.OutputParameters">
            <summary>
            Gets the output parameters.
            </summary>
            <value>
            The output parameters.
            </value>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.RevertVirtualCatalogPropertyOverrideArgs.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Gets the object data.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.RevertVirtualCatalogPropertyOverrideArgs.Input">
            <summary>
            Defines the input parameter arguments.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.RevertVirtualCatalogPropertyOverrideArgs.Input.ItemId">
            <summary>
            Gets or sets the ID of the catalog item.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.RevertVirtualCatalogPropertyOverrideArgs.Input.PropertiesToRevert">
            <summary>
            Gets or sets the names of the catalog item properties that will be reverted back to the value defined in the virtual catalog's base catalog.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.RevertVirtualCatalogPropertyOverrideArgs.Input.Language">
            <summary>
            Gets or sets the language of the catalog item properties to revert.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.RevertVirtualCatalogPropertyOverrideArgs.Input.RevertProductFamilyVariants">
            <summary>
            Gets or sets a value indicating whether the entire product family (including variants) should be reset, or just the product itself (do not include variants).
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.RevertVirtualCatalogPropertyOverrideArgs.Output">
            <summary>
            Defines the output parameter arguments.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.RevertVirtualCatalogPropertyOverrideArgs.Output.Success">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.RevertVirtualCatalogPropertyOverrideArgs.Output"/> is success.
            </summary>
            <value>
              <c>true</c> if success; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateCatalogGroupArgs">
            <summary>
            Arguments used by the pipeline responsible for updating a CS CatalogSet.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateCatalogGroupArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateCatalogGroupArgs"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateCatalogGroupArgs.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateCatalogGroupArgs"/> class.
            </summary>
            <param name="info">The serialized data.</param>
            <param name="context">The context.</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateCatalogGroupArgs.InputParameters">
            <summary>
            Gets the input parameters.
            </summary>
            <value>
            The input parameters.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateCatalogGroupArgs.OutputParameters">
            <summary>
            Gets the output parameters.
            </summary>
            <value>
            The output parameters.
            </value>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateCatalogGroupArgs.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Gets the object data.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateCatalogGroupArgs.Input">
            <summary>
            Defines the input parameter arguments.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateCatalogGroupArgs.Input.CallContext">
            <summary>
            Gets or sets the call context.
            </summary>
            <value>
            The call context.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateCatalogGroupArgs.Input.ItemDefinition">
            <summary>
            Gets or sets the item definition.
            </summary>
            <value>
            The item definition.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateCatalogGroupArgs.Input.ItemChanges">
            <summary>
            Gets or sets the item changes.
            </summary>
            <value>
            The item changes.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateCatalogGroupArgs.Input.CatalogSet">
            <summary>
            Gets or sets the CatalogSet.
            </summary>
            <value>
            The CatalogSet.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateCatalogGroupArgs.Output">
            <summary>
            Defines the output parameter arguments.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateCatalogGroupArgs.Output.Success">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateCatalogGroupArgs.Output"/> is success.
            </summary>
            <value>
              <c>true</c> if success; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CatalogGroupToSitecoreItemProcessor">
            <summary>
            Pipeline responsible for converting a Commerce Server catalog set into its Sitecore item.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CatalogGroupToSitecoreItemProcessor.Process(Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CatalogGroupToSitecoreItemArgs)">
            <summary>
            Process Commerce Catalogs to Sitecore Items.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CatalogGroupToSitecoreItemProcessor.AddCreatedUpdatedDates(Sitecore.Data.Items.TemplateItem,Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CatalogGroupToSitecoreItemArgs,Sitecore.Commerce.Connect.CommerceServer.IToSitecoreFieldValue)">
            <summary>
            Adds the created and updated date fields
            </summary>
            <param name="templateItem">The template item</param>
            <param name="args">The args to use and populate</param>
            <param name="toSitecoreFieldValue">the sitecore field convertor</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CatalogGroupToSitecoreItemProcessor.ProcessIncludedCatalogs(Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CatalogGroupToSitecoreItemArgs,Sitecore.Data.Items.TemplateFieldItem)">
            <summary>
            Process the included catalogs
            </summary>
            <param name="args">The args</param>
            <param name="field">the Field</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.GetCommerceCatalogFallbackLanguage">
            <summary>
            Pipeline responsible for looking up catalog fallback languages.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.GetCommerceCatalogFallbackLanguage.Process(Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.GetCommerceCatalogFallbackLanguageArgs)">
            <summary>
            Processes a Get Commerce Catalog Fallback Language request.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.GetCommerceCatalogFallbackLanguage.GetFallbackLanguage(System.String,System.String)">
            <summary>
            Gets the fallback language for a given language.
            </summary>
            <param name="language">The language to find the fallback language for.</param>
            <param name="databaseName">The Sitecore Database name to use.</param>
            <returns>The fallback language or the default language if not found.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateDynamicCatalogGroupProcessor">
            <summary>
            Sitecore processor that creates DynamicCatalogSet Commerce items.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateDynamicCatalogGroupProcessor.Process(Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateDynamicCatalogGroupArgs)">
            <summary>
            Processes a Create DynamicCatalogSet request.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateStaticCatalogGroupProcessor">
            <summary>
            Sitecore processor that creates StaticCatalogSet Commerce items.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateStaticCatalogGroupProcessor.Process(Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateStaticCatalogGroupArgs)">
            <summary>
            Processes a Create StaticCatalogSet request.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.DeleteCatalogItems">
            <summary>
            Handles the deleting of Commerce Server catalog items
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.DeleteCatalogItems.Process(Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.DeleteCatalogItemArgs)">
            <summary>
            Processes a the provided pipeline arguments.
            </summary>
            <param name="args">The pipeline arguments.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.DeleteCatalogItems.Execute(Sitecore.Web.UI.Sheer.ClientPipelineArgs)">
            <summary>
            The entry method for the processor
            </summary>
            <param name="args">The args for teh current processor</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.DeleteCatalogItems.DeleteItem(Sitecore.Data.Items.Item)">
            <summary>
            Manages the deletion of Catalogs and Categories so that Sitecore does not try to loop down to the
            leaf nodes to delete every item in the Category or Catalog
            </summary>
            <param name="item">The item to delete</param>
            <returns>True if successful and false otherwise</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.DeleteCatalogItems.DeleteExternalSettingsCategory(Sitecore.Commerce.Connect.CommerceServer.Catalog.ICatalogRepository,System.String,System.String)">
            <summary>
            Deletes the external settings category.
            </summary>
            <param name="repository">The repository.</param>
            <param name="catalogName">Name of the catalog.</param>
            <param name="categoryId">The category identifier.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.DeleteCatalogItems.GetDatabase(Sitecore.Web.UI.Sheer.ClientPipelineArgs)">
            <summary>
            Gets the Database from the incoming pipeline args
            </summary>
            <param name="args">The arg to check</param>
            <returns>The database in the args</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.DeleteCatalogItems.GetItems(Sitecore.Web.UI.Sheer.ClientPipelineArgs)">
            <summary>
            Gets the list of items in the pipelines args
            </summary>
            <param name="args">The args to check for items</param>
            <returns>The found list of items</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.DeleteCatalogItems.MapToRealItem(Sitecore.Data.Items.Item)">
            <summary>
            If the item is a clone or some other virtual item it will retrieve the root item
            </summary>
            <param name="item">The item to check</param>
            <returns>The real item</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.DeleteCatalogItems.CheckForNavChildren(Sitecore.Data.Items.Item)">
            <summary>
            Checks the item and children recursively for a Commerce Navigation Item.  If found the data source will be removed so that
            the Commmerce Catalog data will not be deleted.
            </summary>
            <param name="item">the item</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.GetCatalogOperationProgressProcessor">
            <summary>
            Pipeline responsible for checking the status of the operations in the catalog system.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.GetCatalogOperationProgressProcessor.Process(Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.GetCatalogOperationProgressArgs)">
            <summary>
            Processes a the provided pipeline arguments.
            </summary>
            <param name="args">The pipeline arguments.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.GetCatalogOperationProgressProcessor.GetOperations(Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.GetCatalogOperationProgressArgs)">
            <summary>
            Gets the <see cref="T:CommerceServer.Core.Catalog.OperationsProgress"/> objects requested by the input arguments.
            </summary>
            <param name="args">The pipeline arguments.</param>
            <returns>The <see cref="T:CommerceServer.Core.Catalog.OperationsProgress"/> objects requested by the input arguments.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.GetVirtualCatalogRebuildStatusProcessor">
            <summary>
            Pipeline responsible for checking the status of the virtual catalog that contains a Sitecore item.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.GetVirtualCatalogRebuildStatusProcessor.Process(Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.GetVirtualCatalogRebuildStatusArgs)">
            <summary>
            Processes a the provided pipeline arguments.
            </summary>
            <param name="args">The pipeline arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.PersonalizationVisibilityProcessor">
            <summary>
            Pipeline processor that ensures the the profile card cans be edited for items deriving from relevant Commerce catalog item templates.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.PersonalizationVisibilityProcessor.Process(Sitecore.Analytics.Pipelines.GetItemPersonalizationVisibility.GetItemPersonalizationVisibilityArgs)">
            <summary>
            Processes a the provided pipeline arguments.
            </summary>
            <param name="args">The pipeline arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.PurgeCompletedCatalogOperationsProcessor">
            <summary>
            Pipeline responsible for purging completed long-running operations from the commerce catalog system.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.PurgeCompletedCatalogOperationsProcessor.Process(Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.PurgeCompletedCatalogOperationsArgs)">
            <summary>
            Processes a the provided pipeline arguments.
            </summary>
            <param name="args">The pipeline arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.RebuildCustomCatalogProcessor">
            <summary>
            Pipeline responsible for rebuilding the virtual catalog that contains a Sitecore item.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.RebuildCustomCatalogProcessor.Process(Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.RebuildVirtualCatalogArgs)">
            <summary>
            Processes a the provided pipeline arguments.
            </summary>
            <param name="args">The pipeline arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.RevertVirtualCatalogPropertyOverrideProcessor">
            <summary>
            Sitecore pipeline component that reverts the properties of a catalog item in a virtual catalog back to the original value defined in the base catalog.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.RevertVirtualCatalogPropertyOverrideProcessor.Process(Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.RevertVirtualCatalogPropertyOverrideArgs)">
            <summary>
            Reverts the properties of a catalog item in a virtual catalog back to the original value defined in the base catalog.
            </summary>
            <param name="args">The pipeline arguments.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.RevertVirtualCatalogPropertyOverrideProcessor.GetPropertiesToRevert(Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.RevertVirtualCatalogPropertyOverrideArgs,System.String,CommerceServer.Core.Catalog.DefinitionPropertyType)">
            <summary>
            Gets the properties that should be reverted on the specified item.
            </summary>
            <param name="args">The pipeline arguments.</param>
            <param name="definitionName">The name of the catalog item definition.</param>
            <param name="propertyType">The type of of properties that should be returned (variant or normal).</param>
            <returns>The properties that should be reverted on the specified item.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.RevertVirtualCatalogPropertyOverrideProcessor.GetPropertiesFromDefinition(System.String,CommerceServer.Core.Catalog.DefinitionPropertyType)">
            <summary>
            Gets the properties that are assigned to a catalog item definition.
            </summary>
            <param name="definitionName">The name of the catalog item definition.</param>
            <param name="propertyType">The type of property definitions to return (normal or variant).</param>
            <returns>The properties that are assigned to the catalog item definition.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateCatalogGroupProcessor">
            <summary>
            Sitecore processor that updates CatalogSet Commerce items.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateCatalogGroupProcessor.Process(Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateCatalogGroupArgs)">
            <summary>
            Processes a Create DynamicCatalogSet request.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateCatalogGroupProcessor.ConvertCatalogSetProperty(System.String,System.String)">
            <summary>
            Converts the string representation of a property value into its appropriate strongly-typed value.
            </summary>
            <param name="propertyName">The name of the property.</param>
            <param name="propertyValue">The string representation of the property value.</param>
            <returns>The strongly-typed representation of the property value.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateCatalogGroupProcessor.HandleIncludedCatalogsFieldChange(Sitecore.Data.Items.FieldChange,CommerceServer.Core.CatalogSets.CatalogSet)">
            <summary>
            Handles changes to the IncludedCatalogs property of a CatalogSet
            </summary>
            <param name="change">The FieldChange that contains the new field value.</param>
            <param name="catalogSet">The CatalogSet that is being modified.</param>
            <returns>True if the CatalogSet property value was changed, otherwise false.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CatalogToSitecoreItemArgs">
            <summary>
            Arguments used by the translation pipeline responsible for converting a CS catalog into its SC item.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CatalogToSitecoreItemArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CatalogToSitecoreItemArgs"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CatalogToSitecoreItemArgs.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CatalogToSitecoreItemArgs"/> class.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CatalogToSitecoreItemArgs.InputParameters">
            <summary>
            Gets the input parameters.
            </summary>
            <value>
            The input parameters.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CatalogToSitecoreItemArgs.OutputParameters">
            <summary>
            Gets the output parameters.
            </summary>
            <value>
            The output parameters.
            </value>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CatalogToSitecoreItemArgs.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Gets the object data.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CatalogToSitecoreItemArgs.Input">
            <summary>
            Defines the input parameter arguments.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CatalogToSitecoreItemArgs.Input.CallContext">
            <summary>
            Gets or sets the call context.
            </summary>
            <value>
            The call context.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CatalogToSitecoreItemArgs.Input.ItemDefinition">
            <summary>
            Gets or sets the item definition.
            </summary>
            <value>
            The item definition.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CatalogToSitecoreItemArgs.Input.VersionUri">
            <summary>
            Gets or sets the version URI.
            </summary>
            <value>
            The version URI.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CatalogToSitecoreItemArgs.Input.ProductCatalog">
            <summary>
            Gets or sets the product catalog.
            </summary>
            <value>
            The product catalog.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CatalogToSitecoreItemArgs.Output">
            <summary>
            Defines the output parameter arguments.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CatalogToSitecoreItemArgs.Output.FieldList">
            <summary>
            Gets or sets the field list.
            </summary>
            <value>
            The field list.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateVariantArgs">
            <summary>
            Arguments used by the pipeline responsible for creating a CS variant.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateVariantArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateVariantArgs"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateVariantArgs.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateVariantArgs"/> class.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateVariantArgs.InputParameters">
            <summary>
            Gets the input parameters.
            </summary>
            <value>
            The input parameters.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateVariantArgs.OutputParameters">
            <summary>
            Gets the output parameters.
            </summary>
            <value>
            The output parameters.
            </value>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateVariantArgs.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Gets the object data.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateVariantArgs.Input">
            <summary>
            Defines the input parameter arguments.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateVariantArgs.Input.CallContext">
            <summary>
            Gets or sets the call context.
            </summary>
            <value>
            The call context.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateVariantArgs.Input.ItemID">
            <summary>
            Gets or sets the item ID.
            </summary>
            <value>
            The item ID.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateVariantArgs.Input.ParentItemID">
            <summary>
            Gets or sets the parent item ID.
            </summary>
            <value>
            The parent item ID.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateVariantArgs.Input.TemplateID">
            <summary>
            Gets or sets the template ID.
            </summary>
            <value>
            The template ID.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateVariantArgs.Input.ParentItemDefinition">
            <summary>
            Gets or sets the parent item definition.
            </summary>
            <value>
            The parent item definition.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateVariantArgs.Input.ProductId">
            <summary>
            Gets or sets the product id.
            </summary>
            <value>
            The product id.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateVariantArgs.Input.VariantId">
            <summary>
            Gets or sets the variant id.
            </summary>
            <value>
            The variant id.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateVariantArgs.Input.CatalogName">
            <summary>
            Gets or sets the name of the catalog.
            </summary>
            <value>
            The name of the catalog.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateVariantArgs.Input.ProductDefinitionName">
            <summary>
            Gets or sets the name of the product definition.
            </summary>
            <value>
            The name of the product definition.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateVariantArgs.Output">
            <summary>
            Defines the output parameter arguments.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateVariantArgs.Output.Success">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateVariantArgs.Output"/> is success.
            </summary>
            <value>
              <c>true</c> if success; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateCatalogArgs">
            <summary>
            Arguments used by the pipeline responsible for creating a CS catalog.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateCatalogArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateCatalogArgs"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateCatalogArgs.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateCatalogArgs"/> class.
            </summary>
            <param name="info">The serialized data.</param>
            <param name="context">The context.</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateCatalogArgs.InputParameters">
            <summary>
            Gets the input parameters.
            </summary>
            <value>
            The input parameters.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateCatalogArgs.OutputParameters">
            <summary>
            Gets the output parameters.
            </summary>
            <value>
            The output parameters.
            </value>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateCatalogArgs.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Gets the object data.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateCatalogArgs.Input">
            <summary>
            Defines the input parameter arguments.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateCatalogArgs.Input.CallContext">
            <summary>
            Gets or sets the call context.
            </summary>
            <value>
            The call context.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateCatalogArgs.Input.ItemID">
            <summary>
            Gets or sets the item ID.
            </summary>
            <value>
            The item ID.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateCatalogArgs.Input.ParentItemID">
            <summary>
            Gets or sets the parent item ID.
            </summary>
            <value>
            The parent item ID.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateCatalogArgs.Input.TemplateID">
            <summary>
            Gets or sets the template ID.
            </summary>
            <value>
            The template ID.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateCatalogArgs.Input.CatalogName">
            <summary>
            Gets or sets the name of the catalog.
            </summary>
            <value>
            The name of the catalog.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateCatalogArgs.Input.ProductIdProperty">
            <summary>
            Gets or sets the product id property.
            </summary>
            <value>
            The product id property.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateCatalogArgs.Input.VariantIdProperty">
            <summary>
            Gets or sets the variant id property.
            </summary>
            <value>
            The variant id property.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateCatalogArgs.Input.DefaultLanguageCode">
            <summary>
            Gets or sets the default language code.
            </summary>
            <value>
            The default language code.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateCatalogArgs.Input.DefaultReportingLanguageCode">
            <summary>
            Gets or sets the default reporting language code.
            </summary>
            <value>
            The default reporting language code.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateCatalogArgs.Input.DefaultCurrencyCode">
            <summary>
            Gets or sets the default currency code.
            </summary>
            <value>
            The default currency code.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateCatalogArgs.Output">
            <summary>
            Defines the output parameter arguments.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateCatalogArgs.Output.Success">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateCatalogArgs.Output"/> is success.
            </summary>
            <value>
              <c>true</c> if success; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateCategoryArgs">
            <summary>
            Arguments used by the pipeline responsible for creating a CS category.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateCategoryArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateCategoryArgs"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateCategoryArgs.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateCategoryArgs"/> class.
            </summary>
            <param name="info">The serialized data.</param>
            <param name="context">The context.</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateCategoryArgs.InputParameters">
            <summary>
            Gets the input parameters.
            </summary>
            <value>
            The input parameters.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateCategoryArgs.OutputParameters">
            <summary>
            Gets the output parameters.
            </summary>
            <value>
            The output parameters.
            </value>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateCategoryArgs.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Gets the object data.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateCategoryArgs.Input">
            <summary>
            Defines the input parameter arguments.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateCategoryArgs.Input.CallContext">
            <summary>
            Gets or sets the call context.
            </summary>
            <value>
            The call context.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateCategoryArgs.Input.ItemID">
            <summary>
            Gets or sets the item ID.
            </summary>
            <value>
            The item ID.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateCategoryArgs.Input.ParentItemID">
            <summary>
            Gets or sets the parent item ID.
            </summary>
            <value>
            The parent item ID.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateCategoryArgs.Input.TemplateID">
            <summary>
            Gets or sets the template ID.
            </summary>
            <value>
            The template ID.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateCategoryArgs.Input.CategoryName">
            <summary>
            Gets or sets the name of the category.
            </summary>
            <value>
            The name of the category.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateCategoryArgs.Input.ParentCategoryName">
            <summary>
            Gets or sets the name of the parent category.
            </summary>
            <value>
            The name of the parent category.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateCategoryArgs.Input.CatalogName">
            <summary>
            Gets or sets the name of the catalog.
            </summary>
            <value>
            The name of the catalog.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateCategoryArgs.Input.CategoryDefinitionName">
            <summary>
            Gets or sets the name of the category definition.
            </summary>
            <value>
            The name of the category definition.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateCategoryArgs.Output">
            <summary>
            Defines the output parameter arguments.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateCategoryArgs.Output.Success">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateCategoryArgs.Output"/> is success.
            </summary>
            <value>
              <c>true</c> if success; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateProductArgs">
            <summary>
            Arguments used by the pipeline responsible for creating a CS product.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateProductArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateProductArgs"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateProductArgs.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateProductArgs"/> class.
            </summary>
            <param name="info">The serialized data.</param>
            <param name="context">The context.</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateProductArgs.InputParameters">
            <summary>
            Gets the input parameters.
            </summary>
            <value>
            The input parameters.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateProductArgs.OutputParameters">
            <summary>
            Gets the output parameters.
            </summary>
            <value>
            The output parameters.
            </value>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateProductArgs.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Gets the object data.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateProductArgs.Input">
            <summary>
            Defines the input parameter arguments.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateProductArgs.Input.CallContext">
            <summary>
            Gets or sets the call context.
            </summary>
            <value>
            The call context.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateProductArgs.Input.ItemID">
            <summary>
            Gets or sets the item ID.
            </summary>
            <value>
            The item ID.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateProductArgs.Input.ParentItemID">
            <summary>
            Gets or sets the parent item ID.
            </summary>
            <value>
            The parent item ID.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateProductArgs.Input.TemplateID">
            <summary>
            Gets or sets the template ID.
            </summary>
            <value>
            The template ID.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateProductArgs.Input.ProductId">
            <summary>
            Gets or sets the product id.
            </summary>
            <value>
            The product id.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateProductArgs.Input.ParentCategoryName">
            <summary>
            Gets or sets the name of the parent category.
            </summary>
            <value>
            The name of the parent category.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateProductArgs.Input.CatalogName">
            <summary>
            Gets or sets the name of the catalog.
            </summary>
            <value>
            The name of the catalog.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateProductArgs.Input.ProductDefinitionName">
            <summary>
            Gets or sets the name of the product definition.
            </summary>
            <value>
            The name of the product definition.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateProductArgs.Output">
            <summary>
            Defines the output parameter arguments.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateProductArgs.Output.Success">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateProductArgs.Output"/> is success.
            </summary>
            <value>
              <c>true</c> if success; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateCatalogArgs">
            <summary>
            Arguments used by the pipeline responsible for updating a CS catalog.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateCatalogArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateCatalogArgs"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateCatalogArgs.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateCatalogArgs"/> class.
            </summary>
            <param name="info">The serialized data.</param>
            <param name="context">The context.</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateCatalogArgs.InputParameters">
            <summary>
            Gets the input parameters.
            </summary>
            <value>
            The input parameters.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateCatalogArgs.OutputParameters">
            <summary>
            Gets the output parameters.
            </summary>
            <value>
            The output parameters.
            </value>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateCatalogArgs.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Gets the object data.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateCatalogArgs.Input">
            <summary>
            Defines the input parameter arguments.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateCatalogArgs.Input.CallContext">
            <summary>
            Gets or sets the call context.
            </summary>
            <value>
            The call context.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateCatalogArgs.Input.ItemDefinition">
            <summary>
            Gets or sets the item definition.
            </summary>
            <value>
            The item definition.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateCatalogArgs.Input.ItemChanges">
            <summary>
            Gets or sets the item changes.
            </summary>
            <value>
            The item changes.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateCatalogArgs.Input.Catalog">
            <summary>
            Gets or sets the catalog.
            </summary>
            <value>
            The catalog.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateCatalogArgs.Output">
            <summary>
            Defines the output parameter arguments.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateCatalogArgs.Output.Success">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateCatalogArgs.Output"/> is success.
            </summary>
            <value>
              <c>true</c> if success; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateRelationshipArgs">
            <summary>
            Arguments used by the pipeline responsible for updating a CS product relationship.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateRelationshipArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateRelationshipArgs"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateRelationshipArgs.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateRelationshipArgs"/> class.
            </summary>
            <param name="info">The serialized data.</param>
            <param name="context">The context.</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateRelationshipArgs.InputParameters">
            <summary>
            Gets the input parameters.
            </summary>
            <value>
            The input parameters.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateRelationshipArgs.OutputParameters">
            <summary>
            Gets the output parameters.
            </summary>
            <value>
            The output parameters.
            </value>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateRelationshipArgs.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Gets the object data.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateRelationshipArgs.Input">
            <summary>
            Defines the input parameter arguments.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateRelationshipArgs.Input.CallContext">
            <summary>
            Gets or sets the call context.
            </summary>
            <value>
            The call context.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateRelationshipArgs.Input.ItemDefinition">
            <summary>
            Gets or sets the item definition.
            </summary>
            <value>
            The item definition.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateRelationshipArgs.Input.ItemChanges">
            <summary>
            Gets or sets the item changes.
            </summary>
            <value>
            The item changes.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateRelationshipArgs.Input.CatalogItem">
            <summary>
            Gets or sets the catalog item.
            </summary>
            <value>
            The product.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateRelationshipArgs.Input.Relationship">
            <summary>
            Gets or sets the relationship.
            </summary>
            <value>
            The relationship.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateRelationshipArgs.Output">
            <summary>
            Defines the output parameter arguments.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateRelationshipArgs.Output.Success">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateRelationshipArgs.Output"/> is success.
            </summary>
            <value>
              <c>true</c> if success; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateVariantArgs">
            <summary>
            Arguments used by the pipeline responsible for updating a CS product variant.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateVariantArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateVariantArgs"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateVariantArgs.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateVariantArgs"/> class.
            </summary>
            <param name="info">The serialized data.</param>
            <param name="context">The context.</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateVariantArgs.InputParameters">
            <summary>
            Gets the input parameters.
            </summary>
            <value>
            The input parameters.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateVariantArgs.OutputParameters">
            <summary>
            Gets the output parameters.
            </summary>
            <value>
            The output parameters.
            </value>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateVariantArgs.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Gets the object data.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateVariantArgs.Input">
            <summary>
            Defines the input parameter arguments.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateVariantArgs.Input.CallContext">
            <summary>
            Gets or sets the call context.
            </summary>
            <value>
            The call context.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateVariantArgs.Input.ItemDefinition">
            <summary>
            Gets or sets the item definition.
            </summary>
            <value>
            The item definition.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateVariantArgs.Input.ItemChanges">
            <summary>
            Gets or sets the item changes.
            </summary>
            <value>
            The item changes.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateVariantArgs.Input.Product">
            <summary>
            Gets or sets the product.
            </summary>
            <value>
            The product.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateVariantArgs.Input.Variant">
            <summary>
            Gets or sets the variant.
            </summary>
            <value>
            The variant.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateVariantArgs.Output">
            <summary>
            Defines the output parameter arguments.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateVariantArgs.Output.Success">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateVariantArgs.Output"/> is success.
            </summary>
            <value>
              <c>true</c> if success; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateCatalogItemArgs">
            <summary>
            Arguments used by the pipeline responsible for updating a CS catalog item (category or product).
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateCatalogItemArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateCatalogItemArgs"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateCatalogItemArgs.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateCatalogItemArgs"/> class.
            </summary>
            <param name="info">The serialized data.</param>
            <param name="context">The context.</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateCatalogItemArgs.InputParameters">
            <summary>
            Gets the input parameters.
            </summary>
            <value>
            The input parameters.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateCatalogItemArgs.OutputParameters">
            <summary>
            Gets the output parameters.
            </summary>
            <value>
            The output parameters.
            </value>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateCatalogItemArgs.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Gets the object data.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateCatalogItemArgs.Input">
            <summary>
            Defines the input parameter arguments.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateCatalogItemArgs.Input.CallContext">
            <summary>
            Gets or sets the call context.
            </summary>
            <value>
            The call context.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateCatalogItemArgs.Input.ItemDefinition">
            <summary>
            Gets or sets the item definition.
            </summary>
            <value>
            The item definition.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateCatalogItemArgs.Input.ItemChanges">
            <summary>
            Gets or sets the item changes.
            </summary>
            <value>
            The item changes.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateCatalogItemArgs.Input.CatalogItem">
            <summary>
            Gets or sets the catalog item.
            </summary>
            <value>
            The catalog item.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateCatalogItemArgs.Output">
            <summary>
            Defines the output parameter arguments.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateCatalogItemArgs.Output.Success">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateCatalogItemArgs.Output"/> is success.
            </summary>
            <value>
              <c>true</c> if success; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CatalogToSitecoreItemProcessor">
            <summary>
            Pipeline responsible for converting a CS catalog into its SC item.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CatalogToSitecoreItemProcessor.Process(Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CatalogToSitecoreItemArgs)">
            <summary>
            Process Commerce Catalogs to Sitecore Items.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CatalogToSitecoreItemProcessor.AddCreatedUpdatedDates(Sitecore.Data.Items.TemplateItem,Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CatalogToSitecoreItemArgs,Sitecore.Commerce.Connect.CommerceServer.IToSitecoreFieldValue)">
            <summary>
            Adds the created and updated date fields
            </summary>
            <param name="templateItem">The template item</param>
            <param name="args">The args to use and populate</param>
            <param name="toSitecoreFieldValue">the sitecore field convertor</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CatalogToSitecoreItemProcessor.HandleSpecialProperties(Sitecore.Data.Items.TemplateFieldItem,CommerceServer.Core.Catalog.ProductCatalog,Sitecore.Data.FieldList)">
            <summary>
            handles catalog properties that have no direct mapping to Sitecore.
            </summary>
            <param name="templateField">The template field.</param>
            <param name="catalog">The catalog.</param>
            <param name="fieldList">The field list.</param>
            <returns>True if the given field was handled by this method; Otherwise false.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CatalogToSitecoreItemProcessor.GetDisplayName(CommerceServer.Core.Catalog.ProductCatalog,Sitecore.Data.VersionUri)">
            <summary>
            Gets the display name.
            </summary>
            <param name="catalog">The catalog.</param>
            <param name="versionUri">The version URI that represents the language of the display name that will be returned.</param>
            <returns>Display Name of the catalog.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CatalogToSitecoreItemProcessor.AddStronglyTypedFields(CommerceServer.Core.Catalog.ProductCatalog,Sitecore.Data.FieldList)">
            <summary>
            Captures some of the strongly typed fields on catalog and appends them to the Sitecore item
            </summary>
            <param name="productCatalog">The catalog to pull information from</param>
            <param name="fieldList">The fields list to add values to</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateVariantProcessor">
            <summary>
            Pipeline responsible for creating a CS variant.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateVariantProcessor.Process(Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateVariantArgs)">
            <summary>
            Processes a Create Variant request.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateCatalogProcessor">
            <summary>
            Pipeline responsible for creating a CS catalog.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateCatalogProcessor.Process(Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateCatalogArgs)">
            <summary>
            Processes a Create Catalog request.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateCatalogProcessor.GetReportingLanguageCode(Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateCatalogArgs)">
            <summary>
            Gets the reporting language code.
            </summary>
            <param name="args">The args.</param>
            <returns>String for reporting language.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateCatalogProcessor.GetDefaultLanguageCode(Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateCatalogArgs)">
            <summary>
            Gets the default language code.
            </summary>
            <param name="args">The args.</param>
            <returns>String for default language.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateCatalogProcessor.GetDefaultCurrency(Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateCatalogArgs)">
            <summary>
            Gets the default currency code.
            </summary>
            <param name="args">The args.</param>
            <returns>String for default currency.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateCatalogProcessor.GetVariantIdProperty(Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateCatalogArgs)">
            <summary>
            Gets the variant id property.
            </summary>
            <param name="args">The args.</param>
            <returns>String variant ID provider.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateCatalogProcessor.GetProductIdProperty(Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateCatalogArgs)">
            <summary>
            Gets the product id property.
            </summary>
            <param name="args">The args.</param>
            <returns>String Product ID.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateCategoryProcessor">
            <summary>
            Pipeline responsible for creating a CS category.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateCategoryProcessor.Process(Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateCategoryArgs)">
            <summary>
            Processes a Create Category request.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateProductProcessor">
            <summary>
            Pipeline responsible for creating a CS product.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateProductProcessor.Process(Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CreateProductArgs)">
            <summary>
            Processes a Create Product request.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateCatalogProcessor">
            <summary>
            Pipeline responsible for updating a CS catalog.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateCatalogProcessor.Process(Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateCatalogArgs)">
            <summary>
            Processes an Update Catalog request.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateCatalogProcessor.HandleSpecialPropertyUpdates(Sitecore.Data.Items.FieldChange,Sitecore.Data.Items.TemplateFieldItem,Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateCatalogArgs,CommerceServer.Core.Catalog.ProductCatalog,System.Boolean@)">
            <summary>
            handles catalog properties that have no direct mapping to Commerce Server.
            </summary>
            <param name="change">The change.</param>
            <param name="field">The field.</param>
            <param name="args">The arguments.</param>
            <param name="catalog">The catalog.</param>
            <param name="itemChanged">Is set to true if the method changed the property value in Commerce Server; Otherwise false.</param>
            <returns>
            True if the given field was handled by this method; Otherwise false.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateCatalogProcessor.HandleDisplayName(Sitecore.Data.Items.FieldChange,CommerceServer.Core.Catalog.ProductCatalog)">
            <summary>
            Applies a <see cref="T:Sitecore.Data.Items.FieldChange"/> that represnts the display name of a <see cref="T:CommerceServer.Core.Catalog.ProductCatalog"/> to the provided <see cref="T:CommerceServer.Core.Catalog.ProductCatalog"/>.
            </summary>
            <param name="change">A <see cref="T:Sitecore.Data.Items.FieldChange"/> that represnts the display name of a <see cref="T:CommerceServer.Core.Catalog.ProductCatalog"/>.</param>
            <param name="catalog">The <see cref="T:CommerceServer.Core.Catalog.ProductCatalog"/> on which the provided <paramref name="change"/> will be applied.</param>
            <returns><c>True</c> if the provided <paramref name="catalog"/> was modified, otherwise false.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateCatalogProcessor.IsCommercePropertyUpdatable(System.String)">
            <summary>
            Determines whether the Commerce Server property can be updated.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns>
              <c>true</c> if the Commerce Server property can be updated; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateCatalogProcessor.GetConverter">
            <summary>
            Gets the Commerce Property value converter.
            </summary>
            <returns>IToCommercePropertyValue converter configured for the instance.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateRelationshipProcessor">
            <summary>
            Pipeline responsible for updating a CS product relationship.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateRelationshipProcessor.Process(Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateRelationshipArgs)">
            <summary>
            Processes a update relationship request.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateRelationshipProcessor.IsStronglyTypedProperty(System.String)">
            <summary>
            Determines whether the specified property is strongly typed in Commerce Server.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns>
              <c>true</c> if the Commerce Server property is strongly typed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateRelationshipProcessor.IsCommercePropertyUpdatable(System.String)">
            <summary>
            Determines whether the Commerce Server property can be updated.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns>
              <c>true</c> if the Commerce Server property can be updated; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateRelationshipProcessor.GetValue(System.String,System.String)">
            <summary>
            Gets the value.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <param name="propertyValue">The property value.</param>
            <returns>Value of the property in the correct type.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateVariantProcessor">
            <summary>
            Pipeline responsible for updating a CS product variant.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateVariantProcessor.Process(Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateVariantArgs)">
            <summary>
            Processes a Update Variant request.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateVariantProcessor.HandleRank(Sitecore.Data.Items.FieldChange,CommerceServer.Core.Catalog.Variant)">
            <summary>
            Applies a <see cref="T:Sitecore.Data.Items.FieldChange"/> that represnts the rank of a CommerceServer.Core.Catalog.Variant to the provided CommerceServer.Core.Catalog.Variant.
            </summary>
            <param name="change">A <see cref="T:Sitecore.Data.Items.FieldChange"/> that represnts the rank of a CommerceServer.Core.Catalog.Variant.</param>
            <param name="variant">The <see cref="T:CommerceServer.Core.Catalog.CatalogItem"/> on which the provided <paramref name="change"/> will be applied.</param>
            <returns><c>True</c> if the provided <paramref name="variant"/> was modified, otherwise false.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateVariantProcessor.HandleDisplayName(Sitecore.Data.Items.FieldChange,CommerceServer.Core.Catalog.Variant)">
            <summary>
            Applies a <see cref="T:Sitecore.Data.Items.FieldChange"/> that represnts the display name of a CommerceServer.Core.Catalog.Variant to the provided CommerceServer.Core.Catalog.Variant.
            </summary>
            <param name="change">A <see cref="T:Sitecore.Data.Items.FieldChange"/> that represnts the display name of a CommerceServer.Core.Catalog.Variant.</param>
            <param name="variant">The <see cref="T:CommerceServer.Core.Catalog.CatalogItem"/> on which the provided <paramref name="change"/> will be applied.</param>
            <returns><c>True</c> if the provided <paramref name="variant"/> was modified, otherwise false.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateVariantProcessor.IsStronglyTypedProperty(System.String)">
            <summary>
            Determines whether the Commerce Server property is strongly typed.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns>
              <c>true</c> if the Commerce Server property is strongly typed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateVariantProcessor.IsCommercePropertyUpdatable(System.String,System.String)">
            <summary>
            Determines whether the Commerce Server property can be updated.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <param name="variantIdProperty">The variant id property.</param>
            <returns>
              <c>true</c> if the Commerce Server property can be updated; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateVariantProcessor.GetConverter">
            <summary>
            Gets the converter.
            </summary>
            <returns>IToCommercePropertyValue configured for the instance.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateCatalogItemProcessor">
            <summary>
            Pipeline responsible for updating a CS catalog item (category or product).
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateCatalogItemProcessor.Process(Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateCatalogItemArgs)">
            <summary>
            Processes an Update Catalog request.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateCatalogItemProcessor.TranslateToCommerceServerPropertyName(System.String)">
            <summary>
            Translates the given sitecore property name to the equivalent Commerce Server one.
            </summary>
            <param name="propertyName">Name of the Sitecore property.</param>
            <returns>The commerce property name.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateCatalogItemProcessor.IsStronglyTypedProperty(System.Int32,System.String)">
            <summary>
            Determines whether the Commerce Server property is strongly typed.
            </summary>
            <param name="itemType">Type of the item.</param>
            <param name="propertyName">Name of the property.</param>
            <returns>
              <c>true</c> if the Commerce Server property is strongly typed; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateCatalogItemProcessor.IsCommercePropertyUpdatable(System.Int32,System.String,System.String)">
            <summary>
            Determines whether the Commerce Server property is updatable.
            </summary>
            <param name="itemType">Type of the item.</param>
            <param name="propertyName">Name of the property.</param>
            <param name="productIdProperty">The id of the product property.</param>
            <returns>
              <c>true</c> if the Commerce Server property can be updated; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateCatalogItemProcessor.HandleDisplayName(Sitecore.Data.Items.FieldChange,CommerceServer.Core.Catalog.CatalogItem)">
            <summary>
            Applies a <see cref="T:Sitecore.Data.Items.FieldChange"/> that represnts the display name of a <see cref="T:CommerceServer.Core.Catalog.CatalogItem"/> to the provided <see cref="T:CommerceServer.Core.Catalog.CatalogItem"/>.
            </summary>
            <param name="change">A <see cref="T:Sitecore.Data.Items.FieldChange"/> that represnts the display name of a <see cref="T:CommerceServer.Core.Catalog.CatalogItem"/>.</param>
            <param name="catalogItem">The <see cref="T:CommerceServer.Core.Catalog.CatalogItem"/> on which the provided <paramref name="change"/> will be applied.</param>
            <returns><c>True</c> if the provided <paramref name="catalogItem"/> was modified, otherwise false.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateCatalogItemProcessor.HandlePrimaryParentCategory(Sitecore.Data.Items.FieldChange,CommerceServer.Core.Catalog.CatalogItem)">
            <summary>
            Applies a <see cref="T:Sitecore.Data.Items.FieldChange"/> that represnts the primary parent category of a <see cref="T:CommerceServer.Core.Catalog.CatalogItem"/> to the provided <see cref="T:CommerceServer.Core.Catalog.CatalogItem"/>.
            </summary>
            <param name="change">A <see cref="T:Sitecore.Data.Items.FieldChange"/> that represnts the primary parent category of a <see cref="T:CommerceServer.Core.Catalog.CatalogItem"/>.</param>
            <param name="catalogItem">The <see cref="T:CommerceServer.Core.Catalog.CatalogItem"/> on which the provided <paramref name="change"/> will be applied.</param>
            <returns><c>True</c> if the provided <paramref name="catalogItem"/> was modified, otherwise false.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateCatalogItemProcessor.HandleChildProducts(Sitecore.Data.Items.FieldChange,CommerceServer.Core.Catalog.Category)">
            <summary>
            Applies a <see cref="T:Sitecore.Data.Items.FieldChange"/> that represents the <see cref="P:CommerceServer.Core.Catalog.Category.ChildProducts"/> of a Commerce <see cref="T:CommerceServer.Core.Catalog.Category"/>.
            </summary>
            <param name="change">A <see cref="T:Sitecore.Data.Items.FieldChange"/> that reprents the <see cref="P:CommerceServer.Core.Catalog.Category.ChildProducts"/> of a Commerce <see cref="T:CommerceServer.Core.Catalog.Category"/>.</param>
            <param name="category">The Commerce <see cref="T:CommerceServer.Core.Catalog.Category"/> on which the provided <paramref name="change"/> will be applied.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateCatalogItemProcessor.HandleChildCategories(Sitecore.Data.Items.FieldChange,CommerceServer.Core.Catalog.Category)">
            <summary>
            Applies a <see cref="T:Sitecore.Data.Items.FieldChange"/> that represents the <see cref="P:CommerceServer.Core.Catalog.Category.ChildCategories"/> of a Commerce <see cref="T:CommerceServer.Core.Catalog.Category"/>.
            </summary>
            <param name="change">A <see cref="T:Sitecore.Data.Items.FieldChange"/> that reprents the <see cref="P:CommerceServer.Core.Catalog.Category.ChildCategories"/> of a Commerce <see cref="T:CommerceServer.Core.Catalog.Category"/>.</param>
            <param name="category">The Commerce <see cref="T:CommerceServer.Core.Catalog.Category"/> on which the provided <paramref name="change"/> will be applied.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateCatalogItemProcessor.HandleParentCategories(Sitecore.Data.Items.FieldChange,CommerceServer.Core.Catalog.CatalogItem)">
            <summary>
            Applies a <see cref="T:Sitecore.Data.Items.FieldChange"/> that represents the <see cref="P:CommerceServer.Core.Catalog.CatalogItem.ParentCategories"/> of a Commerce <see cref="T:CommerceServer.Core.Catalog.CatalogItem"/>.
            </summary>
            <param name="change">A <see cref="T:Sitecore.Data.Items.FieldChange"/> that reprents the <see cref="P:CommerceServer.Core.Catalog.CatalogItem.ParentCategories"/> of a Commerce <see cref="T:CommerceServer.Core.Catalog.CatalogItem"/>.</param>
            <param name="catalogItem">The Commerce <see cref="T:CommerceServer.Core.Catalog.CatalogItem"/> on which the provided <paramref name="change"/> will be applied.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateCatalogItemProcessor.HandleRelationshipList(Sitecore.Data.Items.FieldChange,CommerceServer.Core.Catalog.CatalogItem)">
            <summary>
            Processes the relationships that have been updated.
            </summary>
            <param name="change">A <see cref="T:Sitecore.Data.Items.FieldChange"/> that reprents the <see cref="P:CommerceServer.Core.Catalog.CatalogItem.ParentCategories"/> of a Commerce <see cref="T:CommerceServer.Core.Catalog.CatalogItem"/>.</param>
            <param name="catalogItem">The Commerce <see cref="T:CommerceServer.Core.Catalog.CatalogItem"/> on which the provided <paramref name="change"/> will be applied.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateCatalogItemProcessor.HandleChildCatalogItems``1(Sitecore.Data.Items.FieldChange,CommerceServer.Core.Catalog.Category,CommerceServer.Core.Catalog.SearchableObjectCollection{``0,CommerceServer.Core.Catalog.CatalogItemsDataSet})">
            <summary>
            Applies a <see cref="T:Sitecore.Data.Items.FieldChange"/> that represents the child <see cref="T:CommerceServer.Core.Catalog.CatalogItem"/> objects of a Commerce <see cref="T:CommerceServer.Core.Catalog.Category"/>.
            </summary>
            <typeparam name="T">The type of the child <see cref="T:CommerceServer.Core.Catalog.CatalogItem"/> objects that are being modified.</typeparam>
            <param name="change">A <see cref="T:Sitecore.Data.Items.FieldChange"/> that reprents the child <see cref="T:CommerceServer.Core.Catalog.CatalogItem"/> objects of a Commerce <see cref="T:CommerceServer.Core.Catalog.Category"/>.</param>
            <param name="category">The Commerce <see cref="T:CommerceServer.Core.Catalog.Category"/> on which the provided <paramref name="change"/> will be applied.</param>
            <param name="childCatalogItems">The collection that represents the <see cref="T:CommerceServer.Core.Catalog.CatalogItem"/> objects that are currently children of the provided <paramref name="category"/>.</param>
            <remarks>
            The <paramref name="childCatalogItems"/> provided must be either the <see cref="P:CommerceServer.Core.Catalog.Category.ChildCategories"/> or <see cref="P:CommerceServer.Core.Catalog.Category.ChildProducts"/>
            collection of the <paramref name="category"/> object.
            </remarks>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.UpdateCatalogItemProcessor.GetConverter">
            <summary>
            Gets the Commerce Property converter.
            </summary>
            <returns>IToCommercePropertyValue configured for the instance.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CatalogItemToSitecoreItemArgs">
            <summary>
            Arguments used by the translation pipeline responsible for converting a CS catalog item (category or product) into its SC item.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CatalogItemToSitecoreItemArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CatalogItemToSitecoreItemArgs"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CatalogItemToSitecoreItemArgs.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CatalogItemToSitecoreItemArgs"/> class.
            </summary>
            <param name="info">The serialized data.</param>
            <param name="context">The context.</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CatalogItemToSitecoreItemArgs.InputParameters">
            <summary>
            Gets the input parameters.
            </summary>
            <value>
            The input parameters.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CatalogItemToSitecoreItemArgs.OutputParameters">
            <summary>
            Gets the output parameters.
            </summary>
            <value>
            The output parameters.
            </value>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CatalogItemToSitecoreItemArgs.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Gets the object data.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CatalogItemToSitecoreItemArgs.Input">
            <summary>
            Defines the input parameter arguments.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CatalogItemToSitecoreItemArgs.Input.CallContext">
            <summary>
            Gets or sets the call context.
            </summary>
            <value>
            The call context.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CatalogItemToSitecoreItemArgs.Input.ItemDefinition">
            <summary>
            Gets or sets the item definition.
            </summary>
            <value>
            The item definition.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CatalogItemToSitecoreItemArgs.Input.VersionUri">
            <summary>
            Gets or sets the version URI.
            </summary>
            <value>
            The version URI.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CatalogItemToSitecoreItemArgs.Input.CatalogItem">
            <summary>
            Gets or sets the catalog item.
            </summary>
            <value>
            The catalog item.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CatalogItemToSitecoreItemArgs.Output">
            <summary>
            Defines the output parameter arguments.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CatalogItemToSitecoreItemArgs.Output.FieldList">
            <summary>
            Gets or sets the field list.
            </summary>
            <value>
            The field list.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.ProductVariantToSitecoreItemArgs">
            <summary>
            Arguments used by the translation pipeline responsible for converting a CS product variant into its SC item.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.ProductVariantToSitecoreItemArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.ProductVariantToSitecoreItemArgs"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.ProductVariantToSitecoreItemArgs.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.ProductVariantToSitecoreItemArgs"/> class.
            </summary>
            <param name="info">The serialized data.</param>
            <param name="context">The context.</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.ProductVariantToSitecoreItemArgs.InputParameters">
            <summary>
            Gets the input parameters.
            </summary>
            <value>
            The input parameters.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.ProductVariantToSitecoreItemArgs.OutputParameters">
            <summary>
            Gets the output parameters.
            </summary>
            <value>
            The output parameters.
            </value>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.ProductVariantToSitecoreItemArgs.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Gets the object data.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.ProductVariantToSitecoreItemArgs.Input">
            <summary>
            Defines the input parameter arguments.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.ProductVariantToSitecoreItemArgs.Input.CallContext">
            <summary>
            Gets or sets the call context.
            </summary>
            <value>
            The call context.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.ProductVariantToSitecoreItemArgs.Input.ItemDefinition">
            <summary>
            Gets or sets the item definition.
            </summary>
            <value>
            The item definition.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.ProductVariantToSitecoreItemArgs.Input.VersionUri">
            <summary>
            Gets or sets the version URI.
            </summary>
            <value>
            The version URI.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.ProductVariantToSitecoreItemArgs.Input.Product">
            <summary>
            Gets or sets the commerce product.
            </summary>
            <value>
            The product.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.ProductVariantToSitecoreItemArgs.Input.Variant">
            <summary>
            Gets or sets the variant.
            </summary>
            <value>
            The variant.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.ProductVariantToSitecoreItemArgs.Output">
            <summary>
            Defines the output parameter arguments.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.ProductVariantToSitecoreItemArgs.Output.FieldList">
            <summary>
            Gets or sets the field list.
            </summary>
            <value>
            The field list.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.RelationshipToSitecoreItemArgs">
            <summary>
            Arguments used by the translation pipeline responsible for converting a CS catalog relationship into its SC item.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.RelationshipToSitecoreItemArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.RelationshipToSitecoreItemArgs"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.RelationshipToSitecoreItemArgs.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.RelationshipToSitecoreItemArgs"/> class.
            </summary>
            <param name="info">The serialized data.</param>
            <param name="context">The context.</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.RelationshipToSitecoreItemArgs.InputParameters">
            <summary>
            Gets the input parameters.
            </summary>
            <value>
            The input parameters.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.RelationshipToSitecoreItemArgs.OutputParameters">
            <summary>
            Gets the output parameters.
            </summary>
            <value>
            The output parameters.
            </value>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.RelationshipToSitecoreItemArgs.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Gets the object data.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.RelationshipToSitecoreItemArgs.Input">
            <summary>
            Defines the input parameter arguments.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.RelationshipToSitecoreItemArgs.Input.CallContext">
            <summary>
            Gets or sets the call context.
            </summary>
            <value>
            The call context.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.RelationshipToSitecoreItemArgs.Input.ItemDefinition">
            <summary>
            Gets or sets the item definition.
            </summary>
            <value>
            The item definition.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.RelationshipToSitecoreItemArgs.Input.VersionUri">
            <summary>
            Gets or sets the version URI.
            </summary>
            <value>
            The version URI.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.RelationshipToSitecoreItemArgs.Input.CatalogRelationship">
            <summary>
            Gets or sets the catalog relationship.
            </summary>
            <value>
            The catalog relationship.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.RelationshipToSitecoreItemArgs.Input.CatalogName">
            <summary>
            Gets or sets the catalog name.
            </summary>
            <value>
            The catalog name.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.RelationshipToSitecoreItemArgs.Output">
            <summary>
            Defines the output parameter arguments.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.RelationshipToSitecoreItemArgs.Output.FieldList">
            <summary>
            Gets or sets the field list.
            </summary>
            <value>
            The field list.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CatalogItemToSitecoreItemProcessor">
            <summary>
            Pipeline responsible for converting a CS catalog item (category or product) into its SC item.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CatalogItemToSitecoreItemProcessor.Process(Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CatalogItemToSitecoreItemArgs)">
            <summary>
            Processes a Commerce Catalog Item to Sitecore Item. 
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CatalogItemToSitecoreItemProcessor.AddFieldsInSection(Sitecore.Data.Items.TemplateSectionItem,Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CatalogItemToSitecoreItemArgs,Sitecore.Commerce.Connect.CommerceServer.IToSitecoreFieldValue)">
            <summary>
            Adds the fields in section.
            </summary>
            <param name="section">The section.</param>
            <param name="args">The args.</param>
            <param name="toSitecoreFieldValue">To sitecore field value.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CatalogItemToSitecoreItemProcessor.AddCreatedUpdatedDates(Sitecore.Data.Items.TemplateItem,Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CatalogItemToSitecoreItemArgs,Sitecore.Commerce.Connect.CommerceServer.IToSitecoreFieldValue)">
            <summary>
            Adds the created and updated date fields
            </summary>
            <param name="templateItem">The template item</param>
            <param name="args">The args to use and populate</param>
            <param name="toSitecoreFieldValue">the sitecore field convertor</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CatalogItemToSitecoreItemProcessor.AddRelationships(Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CatalogItemToSitecoreItemArgs)">
            <summary>
            Adds the relationships.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CatalogItemToSitecoreItemProcessor.GetDisplayName(CommerceServer.Core.Catalog.CatalogItem)">
            <summary>
            Gets the display name.
            </summary>
            <param name="catalogItem">The variant.</param>
            <returns>Display Name of the Variant.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CatalogItemToSitecoreItemProcessor.HandlePrimaryParentCategory(Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CatalogItemToSitecoreItemArgs)">
            <summary>
            Populates the PrimaryParentCategory field with the appropriate value based on the <see cref="P:CommerceServer.Core.Catalog.CatalogItem.PrimaryParentCategoryName"/> of the <see cref="T:CommerceServer.Core.Catalog.CatalogItem"/> provided in the <paramref name="args"/>.
            </summary>
            <param name="args">The <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CatalogItemToSitecoreItemArgs"/> arguments provided to the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.CatalogItemToSitecoreItemProcessor"/>.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.ProductVariantToSitecoreItemProcessor">
            <summary>
            Pipeline responsible for converting a CS product variant into its SC item.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.ProductVariantToSitecoreItemProcessor.Process(Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.ProductVariantToSitecoreItemArgs)">
            <summary>
            Processes Commerce Server Product Variant to Sitecore Item.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.ProductVariantToSitecoreItemProcessor.AddFieldsInSection(Sitecore.Data.Items.TemplateSectionItem,Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.ProductVariantToSitecoreItemArgs,Sitecore.Commerce.Connect.CommerceServer.IToSitecoreFieldValue)">
            <summary>
            Adds the fields in section.
            </summary>
            <param name="section">The section.</param>
            <param name="args">The args.</param>
            <param name="toSitecoreFieldValue">To sitecore field value.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.ProductVariantToSitecoreItemProcessor.AddCreatedUpdatedDates(Sitecore.Data.Items.TemplateItem,Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.ProductVariantToSitecoreItemArgs,Sitecore.Commerce.Connect.CommerceServer.IToSitecoreFieldValue)">
            <summary>
            Adds the created and updated date fields
            </summary>
            <param name="templateItem">The template item</param>
            <param name="args">The args to use and populate</param>
            <param name="toSitecoreFieldValue">the sitecore field convertor</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.ProductVariantToSitecoreItemProcessor.GetDisplayName(CommerceServer.Core.Catalog.Variant)">
            <summary>
            Gets the display name.
            </summary>
            <param name="variant">The variant.</param>
            <returns>Display Name of the Variant.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.RelationshipToSitecoreItemProcessor">
            <summary>
            Pipeline responsible for converting a CS catalog relationship into its SC item.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.RelationshipToSitecoreItemProcessor.Process(Sitecore.Commerce.Connect.CommerceServer.Catalog.Pipelines.RelationshipToSitecoreItemArgs)">
            <summary>
            Processes Commerce Relationship to Sitecore Item.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.CannotCreateProductInVirtualCatalogException">
            <summary>
            Exception thrown if a call is made to create a product in a virtual catalog.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CannotCreateProductInVirtualCatalogException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.CannotCreateProductInVirtualCatalogException"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CannotCreateProductInVirtualCatalogException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.CannotCreateProductInVirtualCatalogException" /> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CannotCreateProductInVirtualCatalogException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.CannotCreateProductInVirtualCatalogException"/> class.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CannotCreateProductInVirtualCatalogException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.CannotCreateProductInVirtualCatalogException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CannotCreateProductInVirtualCatalogException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.IToCommercePropertyValue">
            <summary>
            Interface for converting to Commerce properties.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.IToCommercePropertyValue.Convert(System.String,System.String)">
            <summary>
            Converts the specified property to the correct object.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <param name="propertyValue">The property value.</param>
            <returns>Property as correct type, say DateTime.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogRepository">
            <summary>
            Repository for CS catalog functionality.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogRepository.GetPropertiesThatCanBeProductId">
            <summary>
            Gets the names of the catalog properties that can be assigned as a product ID.
            </summary>
            <returns>The names of the catalog properties that can be assigned as a product ID.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogRepository.GetPropertiesThatCanBeVariantId">
            <summary>
            Gets the names of the catalog properties that can be assigned as a variant ID.
            </summary>
            <returns>The names of the catalog properties that can be assigned as a variant ID.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogRepository.RefreshSiteCache">
            <summary>
            Refreshes the catalog cache on all front-end sites
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogRepository.AddLanguage(System.String,System.String)">
            <summary>
            Adds the language.
            </summary>
            <param name="catalogName">Name of the catalog.</param>
            <param name="language">The language.</param>
            <returns>True if the language is added; otherwise false.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogRepository.RemoveLanguage(System.String,System.String)">
            <summary>
            Removes the language from the catalog.
            </summary>
            <param name="catalogName">Name of the catalog.</param>
            <param name="language">The language.</param>
            <returns>True if the language is removed; Otherwise false.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogRepository.GetLanguagesCollection(System.String)">
            <summary>
            Gets a collection of langauges that are contained in the catalog 
            </summary>
            <param name="catalogName">the catalog name</param>
            <returns>the list of languages</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogRepository.GetDefaultCulture(System.String)">
            <summary>
            Gets the default culture for a catalog
            </summary>
            <param name="catalogName">the catalog name</param>
            <returns>The default culture for a catalog</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogRepository.GetExternalIds">
            <summary>
            Gets a collection that represents all external IDs defined in the Commerce catalog system.
            </summary>
            <returns>
            A collection that represents all external IDs defined in the Commerce catalog system.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogRepository.GetExternalIdInformation(System.Guid)">
            <summary>
            Indicates if the given externals id exists in Commerce Server.
            </summary>
            <param name="externalId">The external id.</param>
            <returns>
            CommerceItemType.NotFound if no item was found.  Otherwise it returns the actual type of the item found.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogRepository.GetCatalog(System.String)">
            <summary>
            Gets the catalog by name.
            </summary>
            <param name="catalogName">Name of the catalog.</param>
            <returns>ProductCatalog for the given Catalog Name.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogRepository.GetCatalogReadOnly(System.String)">
            <summary>
            Gets a catalog by name in read-only format.
            </summary>
            <param name="catalogName">Name of the catalog.</param>
            <returns>ProductCatalog for the given Catalog Name.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogRepository.GetCatalogs">
            <summary>
            Gets all catalog names.
            </summary>
            <returns>A list of string Catalog names.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogRepository.GetCatalogMetadataDefinitions">
            <summary>
            Gets the catalog metadata definitions.
            </summary>
            <returns>CatalogPropertiesDataSet of metadata definitions.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogRepository.AddCatalogMetadata(System.String)">
            <summary>
            Adds the catalog metadata.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogRepository.GetCatalogDefinitionList">
            <summary>
            Gets the catalog definition list.
            </summary>
            <returns>CatalogDefinitionsDataSet of all definitions in the system.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogRepository.GetCatalogDefinition(System.String)">
            <summary>
            Gets the catalog definition based on definition name.
            </summary>
            <param name="definitionName">Name of the definition.</param>
            <returns>CatalogDefinition for the specified definition name.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogRepository.CreateCatalogDefinition(System.String,CommerceServer.Core.Catalog.CatalogDefinitionType)">
            <summary>
            Creates the catalog definition.
            </summary>
            <param name="definitionName">Name of the definition.</param>
            <param name="definitionType">Type of the definition.</param>
            <returns>
            The newly created catalog definition instance; otherwise null.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogRepository.GetCatalogPropertyDefinitionList">
            <summary>
            Gets a data set containing all property definitions in the Catalog system.
            </summary>
            <returns>A data set containing all property definitions in the Catalog system.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogRepository.GetCatalogPropertyDefinition(System.String)">
            <summary>
            Gets the catalog property definition by name.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns>CatalogProperty for the specified property name.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogRepository.CreateCatalogPropertyDefinition(System.String,CommerceServer.Core.Catalog.CatalogDataType,System.Int32)">
            <summary>
            Creates the catalog property definition.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <param name="catalogDataType">Type of the catalog data.</param>
            <param name="maxLength">The maximum length.</param>
            <returns>
            The created catalog property definition.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogRepository.GetCategoryChildIDs(System.String,System.String,System.Boolean)">
            <summary>
            Gets the child IDs of a given category.
            </summary>
            <param name="catalogName">Name of the catalog.</param>
            <param name="categoryName">Name of the category.</param>
            <param name="includeProducts">Specifies whether child products should be returned in the child ID list.</param>
            <returns>A list containing the IDs of the category's children.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogRepository.GetProduct(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Gets the product.
            </summary>
            <param name="catalogName">Name of the catalog.</param>
            <param name="productID">The product ID.</param>
            <param name="language">The language.</param>
            <param name="loadFromCache">Indicates where or not the product should be retrieved from the database or cache</param>
            <returns>Commerce Server Product.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogRepository.GetProductReadOnly(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Gets a product in read-only format.
            </summary>
            <param name="catalogName">Name of the catalog.</param>
            <param name="productID">The product ID.</param>
            <param name="language">The language.</param>
            <param name="loadFromCache">Indicates where or not the product should be retrieved from the database or cache</param>
            <returns>Commerce Server Product.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogRepository.GetCategory(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Gets the category.
            </summary>
            <param name="catalogName">Name of the catalog.</param>
            <param name="categoryID">The category ID.</param>
            <param name="language">The language.</param>
            <param name="loadFromCache">Indicates where or not the category should be retrieved from the database or cache</param>
            <returns>Commerce Server Category.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogRepository.GetCategoryReadOnly(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Gets a category in read-only format.
            </summary>
            <param name="catalogName">Name of the catalog.</param>
            <param name="categoryID">The category ID.</param>
            <param name="language">The language.</param>
            <param name="loadFromCache">Indicates where or not the category should be retrieved from the database or cache</param>
            <returns>Commerce Server Category.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogRepository.CreateProduct(System.String,System.String,System.String,System.Guid,System.String)">
            <summary>
            Creates the product.
            </summary>
            <param name="definitionName">Name of the definition.</param>
            <param name="catalogName">Name of the catalog.</param>
            <param name="productId">The product id.</param>
            <param name="externalId">The external ID of the item.</param>
            <param name="parentCategory">The parent category.</param>
            <returns>Commerce Server Product.</returns>
            <exception cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.CannotCreateProductInVirtualCatalogException">Commerce Server exception if Product cannot be created.</exception>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogRepository.CreateCategory(System.String,System.String,System.String,System.Guid,System.String)">
            <summary>
            Creates the category.
            </summary>
            <param name="definitionName">Name of the definition.</param>
            <param name="catalogName">Name of the catalog.</param>
            <param name="categoryName">Name of the category.</param>
            <param name="externalId">The external ID of the item.</param>
            <param name="parentCategory">The parent category.</param>
            <returns>Commerce Server Category.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogRepository.CreateCatalog(System.String,System.String,System.String,System.String,System.String,System.Guid)">
            <summary>
            Creates the catalog.
            </summary>
            <param name="catalogName">Name of the catalog.</param>
            <param name="productIdProperty">The product id property.</param>
            <param name="variantIdProperty">The variant id property.</param>
            <param name="defaultLanguageCode">The default language code.</param>
            <param name="reportingLanguageCode">The reporting language code.</param>
            <param name="externalId">The external ID of the item.</param>
            <returns>Commerce Server Product Catalog.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogRepository.CreateVirtualCatalog(System.String,System.String,System.String,System.Guid)">
            <summary>
            Creates the virtual catalog.
            </summary>
            <param name="catalogName">Name of the catalog.</param>
            <param name="defaultLanguageCode">The default language code.</param>
            <param name="reportingLanguageCode">The reporting language code.</param>
            <param name="externalId">The external ID of the item.</param>
            <returns>Commerce Server Virtual Catalog. </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogRepository.DeleteProduct(System.String,System.String)">
            <summary>
            Deletes the product.
            </summary>
            <param name="catalogName">Name of the catalog.</param>
            <param name="productId">The product id.</param>
            <returns>True if the Product has been deleted; false otherwise.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogRepository.DeleteCategory(System.String,System.String)">
            <summary>
            Deletes the category.
            </summary>
            <param name="catalogName">Name of the catalog.</param>
            <param name="categoryName">Name of the category.</param>
            <returns>True if the Category has been deleted; false otherwise.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogRepository.DeleteCatalog(System.String)">
            <summary>
            Deletes the catalog by name.
            </summary>
            <param name="catalogName">Name of the catalog.</param>
            <returns>True if the Catalog has been deleted; false otherwise.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogRepository.CreateCatalogRelationship(System.String,System.String,System.String,System.String,CommerceServer.Core.Catalog.CatalogClassTypes,CommerceServer.Core.Catalog.CatalogClassTypes,System.String,System.String,System.Nullable{System.Guid},System.Nullable{System.Int32},System.String)">
            <summary>
            Creates the catalog relationship.
            </summary>
            <param name="catalogName">Name of the catalog.</param>
            <param name="targetCatalogName">Name of target catalog.</param>
            <param name="catalogItemId">Identifier of the catalog item.</param>
            <param name="targetCatalogItemId">Identifier of the target catalog item.</param>
            <param name="sourceClassType">Type of source Commerce Server Catalog Class Type.</param>
            <param name="targetClassType">Type of target Commerce Server Catalog Class Type.</param>
            <param name="relationshipName">Name of the relationship.</param>
            <param name="relationshipDescription">Description of the relationship.</param>
            <param name="externalId">Exteranl id of the catalog item.</param>
            <param name="rank">Rank of the relationship.</param>
            <param name="descriptionCulture">The culture to add the description under</param>
            <returns>
            True if the Catalog relationship has been created; false otherwise.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogRepository.CreateCatalogRelationship(System.String,System.String,System.String,System.String,CommerceServer.Core.Catalog.CatalogClassTypes,CommerceServer.Core.Catalog.CatalogClassTypes,System.String,System.String,System.Nullable{System.Guid},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Guid},System.String@,System.String)">
            <summary>
            Creates a two-way catalog relationship, from source to target and from target to source.
            </summary>
            <param name="catalogName">The catalog name of the source item.</param>
            <param name="targetCatalogName">The catalog name of the target item.</param>
            <param name="catalogItemId">Identifier of the source catalog item.</param>
            <param name="targetCatalogItemId">Identifier of the target catalog item.</param>
            <param name="sourceClassType">Type of source Commerce Server Catalog Class Type.</param>
            <param name="targetClassType">Type of target Commerce Server Catalog Class Type.</param>
            <param name="relationshipName">Name of the relationship.</param>
            <param name="relationshipDescription">Description of the relationship.</param>
            <param name="externalId">Exteranl id of the catalog item.</param>
            <param name="rank">Rank of the relationship.</param>
            <param name="secondaryRelationshipDescription">The description for the secondary (reciprocal) relationship.</param>
            <param name="secondaryRelationshipRank">The rank of the secondary (reciprocal) relationship.</param>
            <param name="secondaryExternalId">The external id of the secondary (reciprocal) relationship.</param>
            <param name="errorMessage">An out parameter for an error message.</param>
            <param name="descriptionCulture">The language to add the description under</param>
            <returns>True if the operation succeeded, otherwise false.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogRepository.DeleteCatalogRelationship(System.String,System.String,System.String,System.String,CommerceServer.Core.Catalog.CatalogClassTypes,CommerceServer.Core.Catalog.CatalogClassTypes,System.String,System.Boolean)">
            <summary>
            Deletes the catalog relationship.
            </summary>
            <param name="catalogName">Name of the catalog.</param>
            <param name="targetCatalogName">Name of target catalog.</param>
            <param name="catalogItemId">Identifier of the catalog item.</param>
            <param name="targetCatalogItemId">Identifier of the target catalog item.</param>
            <param name="sourceClassType">Type of source Commerce Server Catalog Class Type.</param>
            <param name="targetClassType">Type of target Commerce Server Catalog Class Type.</param>
            <param name="relationshipName">Name of the relationship.</param>
            <param name="deleteReciprocalRelationship">Optional. If true, the reciprocal relationship will also be deleted, if it exists.</param>
            <returns>
            True if the Catalog relationship has been deleted; false otherwise.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogRepository.DeleteVariant(System.String,System.String,System.String)">
            <summary>
            Deletes the variant.
            </summary>
            <param name="catalogName">Name of the catalog.</param>
            <param name="productId">The product id.</param>
            <param name="variantId">The variant id.</param>
            <returns>True if Variant has been deleted; false otherwise.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogRepository.FindRelationship(CommerceServer.Core.Catalog.CatalogItem,CommerceServer.Core.Catalog.CatalogClassTypes,System.String,System.String,System.String)">
            <summary>
            Finds the Catalog relationship.
            </summary>
            <param name="catalogItem">The cs product.</param>
            <param name="catalogClassType">Type of the catalog class.</param>
            <param name="relationshipName">Name of the relationship.</param>
            <param name="catalogItemIdentifier">The catalog item identifier.</param>
            <param name="targetCatalogName">Name of the target catalog.</param>
            <returns>Commerce Server CatalogRelationship</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogRepository.DeleteCategoryAssociation(System.String,System.String,CommerceServer.Core.Catalog.CatalogClassTypes,System.String)">
            <summary>
            Deletes the category association from a catalog item.
            </summary>
            <param name="catalogName">Name of the catalog.</param>
            <param name="itemIdentifier">The item identifier.</param>
            <param name="classType">Type of the class.</param>
            <param name="categoryNameToRemove">The category name to remove.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogRepository.AddCategoryAssociation(System.String,System.String,CommerceServer.Core.Catalog.CatalogClassTypes,System.String,System.Guid)">
            <summary>
            Adds the category association.
            </summary>
            <param name="catalogName">Name of the catalog.</param>
            <param name="itemIdentifier">The item identifier.</param>
            <param name="classType">Type of the class.</param>
            <param name="categoryNameToAdd">The category name to add.</param>
            <param name="associationExternalId">The association external id.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogRepository.GetCatalogSets">
            <summary>
            Gets the catalog sets that have been defined for the current Commerce site.
            </summary>
            <returns>The catalog sets that have been defined for the current Commerce site.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogRepository.GetCatalogSet(System.Guid)">
            <summary>
            Gets a catalog set by ID.
            </summary>
            <param name="catalogSetId">The ID of the catalog set to retrieve.</param>
            <returns>The requested Commerce Server catalog set.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogRepository.CreateDynamicCatalogSet(System.String,System.String,System.String,System.Guid)">
            <summary>
            Creates a new dynamic catalog set.
            </summary>
            <param name="catalogSetName">The name of the cataog set.</param>
            <param name="description">The description of the catalog set.</param>
            <param name="expression">The expression that defines which catalogs belong to the catalog set.</param>
            <param name="catalogSetId">The ID of the cataog set.</param>
            <returns>A new dynamic catalog set.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogRepository.CreateStaticCatalogSet(System.String,System.String,System.String[],System.Guid)">
            <summary>
            Creates a new static catalog set.
            </summary>
            <param name="catalogSetName">The name of the cataog set.</param>
            <param name="description">The description of the catalog set.</param>
            <param name="productCatalogs">The list of product catalogs that will belong to the catalog set.</param>
            <param name="catalogSetId">The ID of the cataog set.</param>
            <returns>A new static catalog set.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogRepository.DeleteCatalogSet(System.Guid)">
            <summary>
            Deletes a catalog set.
            </summary>
            <param name="catalogSetId">The ID of the catalog set to delete.</param>
            <returns>True if the catalog set was successfully deleted, otherwise false.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogRepository.GetModifiedCatalogItemExternalIdInformation(System.DateTime,System.String,CommerceServer.Core.Catalog.CommerceItemType[])">
            <summary>
            Retrieves external ID information about items in the catalog system that have been modified since the provided date.
            </summary>
            <param name="minLastModifiedDate">Specifies that only items that have been modified after this date will be retruned.</param>
            <param name="catalogName">The name of the catalog to examine.</param>
            <param name="itemTypes">Specifies that only items of the specified commerce item types will be returned.</param>
            <returns>A list of <see cref="T:CommerceServer.Core.Catalog.ExternalIdInformation"/> objects that describe the items matching the provided date, catalog, and item type filters.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogRepository.GetDeletedCatalogItemExternalIdInformation(System.String,System.DateTime)">
            <summary>
            Retrieves external ID information about itemsm in the catalog system that have been deleted since the provided date.
            </summary>
            <param name="catalogName">The name of the catalog to search.</param>
            <param name="minDeletedDate">Specifies that only items that have been deleted after this date will be retruned.</param>
            <returns>A list of <see cref="T:CommerceServer.Core.Catalog.ExternalIdInformation"/> objects that describe the items matching the provided date and catalog filters.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogRepository.GetCatalogActiveLanguage(CommerceServer.Core.Catalog.ProductCatalog,System.String)">
            <summary>
            Gets the catalog active language.
            </summary>
            <param name="catalog">The catalog.</param>
            <param name="language">The language.</param>
            <returns>String representation of active Catalog language.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogRepository.GetCategoryConfiguration(System.String,System.String,System.Boolean)">
            <summary>
            Used to build a configuration for retrieving categories
            </summary>
            <param name="catalogName">The name of the catalog</param>
            <param name="categoryId">The category's id</param>
            <param name="requestAll">Indicates whether or not you would like all components returned.</param>
            <returns>The new configuration</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogRepository.GetProductConfiguration(System.String,System.String,System.Boolean)">
            <summary>
            Used to build a configuration for retrieving a product
            </summary>
            <param name="catalogName">The name of the catalog</param>
            <param name="productId">The product's id</param>
            <param name="requestAll">Indicates whether or not you would like all components returned.</param>
            <returns>The new configuration</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogRepository.GetCatalogItem(System.String,System.String,CommerceServer.Core.Catalog.CatalogClassTypes,System.String,System.Boolean)">
            <summary>
            Returns a catalog item (i.e. product or category) based on the CatalogClassTypes
            </summary>
            <param name="catalogName">The name of the catalog containing the catalog item</param>
            <param name="catalogItemId">The id of the catalog item in the catalog</param>
            <param name="classType">The type of the item to look for</param>
            <param name="culture">The culture to retrieve the item in</param>
            <param name="loadFromCache">Indicates whether or not to retrieve the item from cache or not</param>
            <returns>The requested catalog item or null if not found</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogRepository.RefreshCatalogItem(System.String,System.String,CommerceServer.Core.Catalog.CatalogClassTypes)">
            <summary>
            Refreshes a catalog item's values from the database
            </summary>
            <param name="catalogName">The catalog containing the item to refresh</param>
            <param name="catalogItemId">The id of the item to refresh</param>
            <param name="classType">The type of item (i.e. category or product) that is being refreshed</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogRepository.AddRelationship(System.String,System.String,CommerceServer.Core.Catalog.CatalogClassTypes,System.String,System.String,System.Nullable{System.Guid},System.Nullable{System.Int32},CommerceServer.Core.Catalog.CatalogItem)">
            <summary>
            Adds a category or product relationship to a catalog item
            </summary>
            <param name="catalogName">The name of the catalog for the target relationship item</param>
            <param name="catalogItemId">The id of the item that the relationship is targetting</param>
            <param name="classType">The type of item (i.e. product or category) being related to</param>
            <param name="name">The name of the relationship</param>
            <param name="description">The description for the relationship</param>
            <param name="externalId">An id to assign to the relationship</param>
            <param name="rank">The rank of the relationship compared to other relationships on the item</param>
            <param name="catalogItem">The catalog item that the relationship is added to</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.ICatalogTemplateGenerator">
            <summary>
            Interface for Commerce Server Catalog Data Template generator Commerce Server Sitecore integration.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.ICatalogTemplateGenerator.BuildCatalogTemplates(Sitecore.Data.Database)">
            <summary>
            Builds the catalog templates.
            </summary>
            <param name="database">The database.</param>
            <returns>Sitecore TemplateCollection of Commerce Server Catalog based templates.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.ICatalogTemplateGenerator.DeleteAllGeneratedTemplates(Sitecore.Data.Database)">
            <summary>
            Deletes all of the generated templates from Sitecore
            </summary>
            <param name="database">The database.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.CommerceDataProviderBase">
            <summary>
            Base class for Commerce Server data providers in Sitecore. 
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogDataProvider">
            <summary>
            Write enabled Sitecore/Commerce Server Catalog Provider.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogDataProvider.SaveItem(Sitecore.Data.ItemDefinition,Sitecore.Data.Items.ItemChanges,Sitecore.Data.DataProviders.CallContext)">
            <summary>
            Saves an item.
            </summary>
            <param name="itemDefinition">The item definition.</param>
            <param name="changes">The changes.</param>
            <param name="context">The context.</param>
            <returns>true if we have processed the item; otherwise false.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogDataProvider.CreateItem(Sitecore.Data.ID,System.String,Sitecore.Data.ID,Sitecore.Data.ItemDefinition,Sitecore.Data.DataProviders.CallContext)">
            <summary>
            Creates an item.
            </summary>
            <param name="itemID">The item ID.</param>
            <param name="itemName">Name of the item.</param>
            <param name="templateID">The template ID.</param>
            <param name="parent">The parent.</param>
            <param name="context">The context.</param>
            <returns>true if we have processed the item; otherwise false.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogDataProvider.CreateItem(Sitecore.Data.ID,System.String,Sitecore.Data.ID,Sitecore.Data.ItemDefinition,System.DateTime,Sitecore.Data.DataProviders.CallContext)">
            <summary>
            Creates an item.
            </summary>
            <param name="itemID">The item ID.</param>
            <param name="itemName">Name of the item.</param>
            <param name="templateID">The template ID.</param>
            <param name="parent">The parent.</param>
            <param name="created">The date created.</param>
            <param name="context">The context.</param>
            <returns>true if we have processed the item; otherwise false.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogDataProvider.DeleteItem(Sitecore.Data.ItemDefinition,Sitecore.Data.DataProviders.CallContext)">
            <summary>
            Deletes an item.
            </summary>
            <param name="itemDefinition">The item definition.</param>
            <param name="context">The context.</param>
            <returns>true if we have processed the item; otherwise false.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogDataProvider.MoveItem(Sitecore.Data.ItemDefinition,Sitecore.Data.ItemDefinition,Sitecore.Data.DataProviders.CallContext)">
            <summary>
            Moves an item (ie. changes its parent).
            </summary>
            <param name="itemDefinition">The item definition.</param>
            <param name="destination">The destination.</param>
            <param name="context">The call context.</param>
            <returns>
              <c>True</c> if the item was moved by the provider, <c>false</c> otherwise.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogDataProvider.CopyItem(Sitecore.Data.ItemDefinition,Sitecore.Data.ItemDefinition,System.String,Sitecore.Data.ID,Sitecore.Data.DataProviders.CallContext)">
            <summary>
            Copies an item.
            </summary>
            <param name="source">The source.</param>
            <param name="destination">The destination.</param>
            <param name="copyName">Name of the copy.</param>
            <param name="copyID">The copy ID.</param>
            <param name="context">The context.</param>
            <returns>true if we have processed the item; otherwise false.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogDataProvider.AddVersion(Sitecore.Data.ItemDefinition,Sitecore.Data.VersionUri,Sitecore.Data.DataProviders.CallContext)">
            <summary>
            Adds the version.
            </summary>
            <param name="itemDefinition">The item definition.</param>
            <param name="baseVersion">The base version.</param>
            <param name="context">The context.</param>
            <returns>The version that was added.  -1 if not version was added.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogDataProvider.RemoveVersion(Sitecore.Data.ItemDefinition,Sitecore.Data.VersionUri,Sitecore.Data.DataProviders.CallContext)">
            <summary>
            Removes the version.
            </summary>
            <param name="itemDefinition">The item definition.</param>
            <param name="version">The version.</param>
            <param name="context">The context.</param>
            <returns>True if the version is removed; Otherwise false.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogDataProvider.GetTemplates(Sitecore.Data.DataProviders.CallContext)">
            <summary>
            Gets the templates.
            </summary>
            <param name="context">The context.</param>
            <returns>
            The collection of Catalog templates supported by the Commerce Server data provider.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogDataProvider.InitializeTemplates(Sitecore.Data.Database)">
            <summary>
            Initializes data templates utilized by the data provider.
            </summary>
            <param name="database">The database that contains the templates.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogProviderBase">
            <summary>
            The base Catalog Provider in Sitecore.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogProviderBase.SupportBigData(Sitecore.Data.DataProviders.CallContext)">
            <summary>
            Determines if the system supports big data
            </summary>
            <param name="context">The context.</param>
            <returns>True if Big Data is supported; false otherwise.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogProviderBase.GetSupportedCatalogLanguages(System.String)">
            <summary>
            Gets the supported catalog languages.
            </summary>
            <param name="catalogName">Name of the catalog.</param>
            <returns>VersionUriList for the catalog.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogGroupProvider">
            <summary>
            Catalog Set data provider for Sitecore.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogGroupProvider.GetParentID(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ItemDefinition,Sitecore.Data.DataProviders.CallContext,CommerceServer.Core.Catalog.ExternalIdInformation)">
            <summary>
            Gets the parent ID.
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="itemDefinition">The item definition.</param>
            <param name="context">The context.</param>
            <param name="information">The external id information.</param>
            <returns>
            Sitecore ID for the Catalog Set's parent.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogGroupProvider.GetChildIDs(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ItemDefinition,Sitecore.Data.DataProviders.CallContext)">
            <summary>
            Gets the child IDs of the item.
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="itemDefinition">The item definition.</param>
            <param name="context">The context.</param>
            <returns>Sitecore IDList.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogGroupProvider.GetItemFields(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ItemDefinition,Sitecore.Data.VersionUri,Sitecore.Data.DataProviders.CallContext,CommerceServer.Core.Catalog.ExternalIdInformation)">
            <summary>
            Gets the item fields.
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="itemDefinition">The item definition.</param>
            <param name="versionUri">The version URI.</param>
            <param name="context">The context.</param>
            <param name="information">The external id information.</param>
            <returns>
            Sitecore FieldList.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogGroupProvider.GetItemVersions(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ItemDefinition,Sitecore.Data.DataProviders.CallContext,CommerceServer.Core.Catalog.ExternalIdInformation)">
            <summary>
            Gets the versions of the item.
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="itemDefinition">The item definition.</param>
            <param name="context">The context.</param>
            <param name="information">The external id information.</param>
            <returns>
            Sitecore VersionUriList.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogGroupProvider.GetItemDefinition(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ID,Sitecore.Data.DataProviders.CallContext,CommerceServer.Core.Catalog.ExternalIdInformation)">
            <summary>
            Gets the item definition.
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="itemId">The item id.</param>
            <param name="context">The context.</param>
            <param name="information">The external id information.</param>
            <returns>
            Sitecore ItemDefiniton.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogGroupProvider.SaveItem(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ItemDefinition,Sitecore.Data.Items.ItemChanges,Sitecore.Data.DataProviders.CallContext,CommerceServer.Core.Catalog.ExternalIdInformation)">
            <summary>
            Saves the item.
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="itemDefinition">The item definition.</param>
            <param name="changes">The changes.</param>
            <param name="context">The context.</param>
            <param name="information">The external id information.</param>
            <returns>
            True if Item is saved; false otherwise.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogGroupProvider.CreateItem(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ID,System.String,Sitecore.Data.ID,Sitecore.Data.ItemDefinition,Sitecore.Data.DataProviders.CallContext)">
            <summary>
            Creates the item.
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="itemID">The item ID.</param>
            <param name="itemName">Name of the item.</param>
            <param name="templateID">The template ID.</param>
            <param name="parentItemDefinition">The parent item definition.</param>
            <param name="context">The context.</param>
            <returns>
            True if item has been created; false otherwise.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogGroupProvider.DeleteItem(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ItemDefinition,Sitecore.Data.DataProviders.CallContext,CommerceServer.Core.Catalog.ExternalIdInformation)">
            <summary>
            Deletes the item.
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="itemDefinition">The item definition.</param>
            <param name="context">The context.</param>
            <param name="information">The external id information.</param>
            <returns>
            True if item has been deleted; false otherwise.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogGroupProvider.CopyItem(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ItemDefinition,Sitecore.Data.ItemDefinition,System.String,Sitecore.Data.ID,Sitecore.Data.DataProviders.CallContext,CommerceServer.Core.Catalog.ExternalIdInformation)">
            <summary>
            Copies an item.
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="source">The source item definition.</param>
            <param name="destination">The destination item definition.</param>
            <param name="copyName">The name of the item copy.</param>
            <param name="copyID">The ID of the item copy.</param>
            <param name="context">The context.</param>
            <param name="information">The external ID information of the source item.</param>
            <returns>True if the item is copied; false otherwise.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogGroupProvider.MoveItem(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ItemDefinition,Sitecore.Data.ItemDefinition,Sitecore.Data.DataProviders.CallContext,CommerceServer.Core.Catalog.ExternalIdInformation)">
            <summary>
            Moves an item
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="itemDefinition">The item definition.</param>
            <param name="destination">The destination item definition.</param>
            <param name="context">The context.</param>
            <param name="information">The external ID information.</param>
            <returns>True if the item is moved; false otherwise.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogGroupProvider.AddVersion(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ItemDefinition,Sitecore.Data.VersionUri,Sitecore.Data.DataProviders.CallContext,CommerceServer.Core.Catalog.ExternalIdInformation)">
            <summary>
            Adds the version.
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="itemDefinition">The item definition.</param>
            <param name="baseVersion">The base version.</param>
            <param name="context">The context.</param>
            <param name="information">The external id information.</param>
            <returns>
            The version that was added.  -1 if not version was added.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogGroupProvider.RemoveVersion(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ItemDefinition,Sitecore.Data.VersionUri,Sitecore.Data.DataProviders.CallContext,CommerceServer.Core.Catalog.ExternalIdInformation)">
            <summary>
            Removes the version.
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="itemDefinition">The item definition.</param>
            <param name="version">The version.</param>
            <param name="context">The context.</param>
            <param name="information">The external id information.</param>
            <returns>
            True if the version was removed, otherwise false.
            </returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogGroupsFolderProvider">
            <summary>
            Catalog Groups Folder data provider for Sitecore.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogGroupsFolderProvider.GetParentID(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ItemDefinition,Sitecore.Data.DataProviders.CallContext,CommerceServer.Core.Catalog.ExternalIdInformation)">
            <summary>
            Gets the parent ID.
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="itemDefinition">The item definition.</param>
            <param name="context">The context.</param>
            <param name="information">The external id information.</param>
            <returns>
            Sitecore ID.
            </returns>
            <exception cref="T:System.NotImplementedException">Currently not implemented.</exception>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogGroupsFolderProvider.GetChildIDs(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ItemDefinition,Sitecore.Data.DataProviders.CallContext)">
            <summary>
            Get the child IDs of the given item.
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="itemDefinition">The item definition.</param>
            <param name="context">The context.</param>
            <returns>Sitecore IDList.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogGroupsFolderProvider.GetItemFields(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ItemDefinition,Sitecore.Data.VersionUri,Sitecore.Data.DataProviders.CallContext,CommerceServer.Core.Catalog.ExternalIdInformation)">
            <summary>
            Gets the fields of the item.
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="itemDefinition">The item definition.</param>
            <param name="versionUri">The version URI.</param>
            <param name="context">The context.</param>
            <param name="information">The external id information.</param>
            <returns>
            Sitecore FieldList.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogGroupsFolderProvider.GetItemVersions(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ItemDefinition,Sitecore.Data.DataProviders.CallContext,CommerceServer.Core.Catalog.ExternalIdInformation)">
            <summary>
            Gets the versions of the items.
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="itemDefinition">The item definition.</param>
            <param name="context">The context.</param>
            <param name="information">The external id information.</param>
            <returns>
            Sitecore VersionUriList.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogGroupsFolderProvider.GetItemDefinition(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ID,Sitecore.Data.DataProviders.CallContext,CommerceServer.Core.Catalog.ExternalIdInformation)">
            <summary>
            Gets the item definition.
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="itemId">The item id.</param>
            <param name="context">The context.</param>
            <param name="information">The external id information.</param>
            <returns>
            Sitecore ItemDefinition.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogGroupsFolderProvider.SaveItem(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ItemDefinition,Sitecore.Data.Items.ItemChanges,Sitecore.Data.DataProviders.CallContext,CommerceServer.Core.Catalog.ExternalIdInformation)">
            <summary>
            Saves the item.
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="itemDefinition">The item definition.</param>
            <param name="changes">The changes.</param>
            <param name="context">The context.</param>
            <param name="information">The external id information.</param>
            <returns>
            True if Item is saved; false otherwise.
            </returns>
            <exception cref="T:System.NotImplementedException">Currently not implemented.</exception>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogGroupsFolderProvider.CreateItem(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ID,System.String,Sitecore.Data.ID,Sitecore.Data.ItemDefinition,Sitecore.Data.DataProviders.CallContext)">
            <summary>
            Creates the item.
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="itemID">The item ID.</param>
            <param name="itemName">Name of the item.</param>
            <param name="templateID">The template ID.</param>
            <param name="parentItemDefinition">The parent.</param>
            <param name="context">The context.</param>
            <returns>
            True if Item created; false otherwise.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogGroupsFolderProvider.DeleteItem(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ItemDefinition,Sitecore.Data.DataProviders.CallContext,CommerceServer.Core.Catalog.ExternalIdInformation)">
            <summary>
            Deletes the item.
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="itemDefinition">The item definition.</param>
            <param name="context">The context.</param>
            <param name="information">The external id information.</param>
            <returns>
            True if Item deleted; false otherwise.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogGroupsFolderProvider.CopyItem(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ItemDefinition,Sitecore.Data.ItemDefinition,System.String,Sitecore.Data.ID,Sitecore.Data.DataProviders.CallContext,CommerceServer.Core.Catalog.ExternalIdInformation)">
            <summary>
            Copies an item.
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="source">The source item definition.</param>
            <param name="destination">The destination item definition.</param>
            <param name="copyName">The name of the item copy.</param>
            <param name="copyID">The ID of the item copy.</param>
            <param name="context">The context.</param>
            <param name="information">The external ID information of the source item.</param>
            <returns>True if the item is copied; false otherwise.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogGroupsFolderProvider.MoveItem(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ItemDefinition,Sitecore.Data.ItemDefinition,Sitecore.Data.DataProviders.CallContext,CommerceServer.Core.Catalog.ExternalIdInformation)">
            <summary>
            Moves an item
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="itemDefinition">The item definition.</param>
            <param name="destination">The destination item definition.</param>
            <param name="context">The context.</param>
            <param name="information">The external ID information.</param>
            <returns>True if the item is moved; false otherwise.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogGroupsFolderProvider.AddVersion(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ItemDefinition,Sitecore.Data.VersionUri,Sitecore.Data.DataProviders.CallContext,CommerceServer.Core.Catalog.ExternalIdInformation)">
            <summary>
            Adds the version.
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="itemDefinition">The item definition.</param>
            <param name="baseVersion">The base version.</param>
            <param name="context">The context.</param>
            <param name="information">The external id information.</param>
            <returns>
            The version that was added.  -1 if not version was added.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogGroupsFolderProvider.RemoveVersion(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ItemDefinition,Sitecore.Data.VersionUri,Sitecore.Data.DataProviders.CallContext,CommerceServer.Core.Catalog.ExternalIdInformation)">
            <summary>
            Removes the version.
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="itemDefinition">The item definition.</param>
            <param name="version">The version.</param>
            <param name="context">The context.</param>
            <param name="information">The external id information.</param>
            <returns>
            True if the version was removed, otherwise false.
            </returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.CategoryProvider">
            <summary>
            Category data provider for Sitecore.  
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CategoryProvider.GetChildIDs(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ItemDefinition,Sitecore.Data.DataProviders.CallContext)">
            <summary>
            Get Child IDs of the specified item.
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="itemDefinition">The item definition.</param>
            <param name="context">The context.</param>
            <returns>
            Sitecore IDList.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CategoryProvider.GetItemFields(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ItemDefinition,Sitecore.Data.VersionUri,Sitecore.Data.DataProviders.CallContext,CommerceServer.Core.Catalog.ExternalIdInformation)">
            <summary>
            Gets the fields of the item.
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="itemDefinition">The item definition.</param>
            <param name="versionUri">The version URI.</param>
            <param name="context">The context.</param>
            <param name="information">The external id information.</param>
            <returns>
            Sitecore FieldList.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CategoryProvider.GetItemVersions(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ItemDefinition,Sitecore.Data.DataProviders.CallContext,CommerceServer.Core.Catalog.ExternalIdInformation)">
            <summary>
            Gets versions of the specified item.
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="itemDefinition">The item definition.</param>
            <param name="context">The context.</param>
            <param name="information">The external id information.</param>
            <returns>
            Sitecore VersionUriList.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CategoryProvider.GetItemDefinition(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ID,Sitecore.Data.DataProviders.CallContext,CommerceServer.Core.Catalog.ExternalIdInformation)">
            <summary>
            Gets the item definition.
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="itemId">The item id.</param>
            <param name="context">The context.</param>
            <param name="information">The external id information.</param>
            <returns>
            Sitecore ItemDefinition.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CategoryProvider.SaveItem(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ItemDefinition,Sitecore.Data.Items.ItemChanges,Sitecore.Data.DataProviders.CallContext,CommerceServer.Core.Catalog.ExternalIdInformation)">
            <summary>
            Saves the item.
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="itemDefinition">The item definition.</param>
            <param name="changes">The changes.</param>
            <param name="context">The context.</param>
            <param name="information">The external id information.</param>
            <returns>
            True if item saved; false otherwise.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CategoryProvider.GetParentID(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ItemDefinition,Sitecore.Data.DataProviders.CallContext,CommerceServer.Core.Catalog.ExternalIdInformation)">
            <summary>
            Gets the parent ID.
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="itemDefinition">The item definition.</param>
            <param name="context">The context.</param>
            <param name="information">The external id information.</param>
            <returns>
            Sitecore ID of the Category Item's parent.
            </returns>
            <exception cref="T:System.NotImplementedException">Currently not implemented.</exception>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CategoryProvider.CreateItem(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ID,System.String,Sitecore.Data.ID,Sitecore.Data.ItemDefinition,Sitecore.Data.DataProviders.CallContext)">
            <summary>
            Creates the item.
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="itemID">The item ID.</param>
            <param name="itemName">Name of the item.</param>
            <param name="templateID">The template ID.</param>
            <param name="parentItemDefinition">The parent item definition.</param>
            <param name="context">The context.</param>
            <returns>
            True if Item created; false otherwise.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CategoryProvider.DeleteItem(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ItemDefinition,Sitecore.Data.DataProviders.CallContext,CommerceServer.Core.Catalog.ExternalIdInformation)">
            <summary>
            Deletes the item.
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="itemDefinition">The item definition.</param>
            <param name="context">The context.</param>
            <param name="information">The external id information.</param>
            <returns>
            True if Item deleted; false otherwise.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CategoryProvider.CopyItem(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ItemDefinition,Sitecore.Data.ItemDefinition,System.String,Sitecore.Data.ID,Sitecore.Data.DataProviders.CallContext,CommerceServer.Core.Catalog.ExternalIdInformation)">
            <summary>
            Copies an item.
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="source">The source item definition.</param>
            <param name="destination">The destination item definition.</param>
            <param name="copyName">The name of the item copy.</param>
            <param name="copyID">The ID of the item copy.</param>
            <param name="context">The context.</param>
            <param name="information">The external ID information of the source item.</param>
            <returns>True if the item is copied; false otherwise.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CategoryProvider.MoveItem(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ItemDefinition,Sitecore.Data.ItemDefinition,Sitecore.Data.DataProviders.CallContext,CommerceServer.Core.Catalog.ExternalIdInformation)">
            <summary>
            Moves an item
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="itemDefinition">The item definition.</param>
            <param name="destination">The destination item definition.</param>
            <param name="context">The context.</param>
            <param name="information">The external ID information.</param>
            <returns>True if the item is moved; false otherwise.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CategoryProvider.AddVersion(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ItemDefinition,Sitecore.Data.VersionUri,Sitecore.Data.DataProviders.CallContext,CommerceServer.Core.Catalog.ExternalIdInformation)">
            <summary>
            Adds the version.
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="itemDefinition">The item definition.</param>
            <param name="baseVersion">The base version.</param>
            <param name="context">The context.</param>
            <param name="information">The external id information.</param>
            <returns>
            The version that was added.  -1 if not version was added.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CategoryProvider.RemoveVersion(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ItemDefinition,Sitecore.Data.VersionUri,Sitecore.Data.DataProviders.CallContext,CommerceServer.Core.Catalog.ExternalIdInformation)">
            <summary>
            Removes the version.
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="itemDefinition">The item definition.</param>
            <param name="version">The version.</param>
            <param name="context">The context.</param>
            <param name="information">The external id information.</param>
            <returns>
            True if the version was removed, otherwise false.
            </returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogDataFolderProvider">
            <summary>
            Commerce Server data provider for retrieving Catalog information.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogDataFolderProvider.GetChildIDs(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ItemDefinition,Sitecore.Data.DataProviders.CallContext)">
            <summary>
            Get the child IDs of the given item.
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="itemDefinition">The item definition.</param>
            <param name="context">The context.</param>
            <returns>Sitecore IDList.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogDataFolderProvider.GetItemFields(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ItemDefinition,Sitecore.Data.VersionUri,Sitecore.Data.DataProviders.CallContext,CommerceServer.Core.Catalog.ExternalIdInformation)">
            <summary>
            Gets the fields of the item.
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="itemDefinition">The item definition.</param>
            <param name="versionUri">The version URI.</param>
            <param name="context">The context.</param>
            <param name="information">The external id information.</param>
            <returns>
            Sitecore FieldList.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogDataFolderProvider.GetItemVersions(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ItemDefinition,Sitecore.Data.DataProviders.CallContext,CommerceServer.Core.Catalog.ExternalIdInformation)">
            <summary>
            Gets the versions of the items.
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="itemDefinition">The item definition.</param>
            <param name="context">The context.</param>
            <param name="information">The external id information.</param>
            <returns>
            Sitecore VersionUriList.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogDataFolderProvider.GetItemDefinition(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ID,Sitecore.Data.DataProviders.CallContext,CommerceServer.Core.Catalog.ExternalIdInformation)">
            <summary>
            Gets the item definition.
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="itemId">The item id.</param>
            <param name="context">The context.</param>
            <param name="information">The external id information.</param>
            <returns>
            Sitecore ItemDefinition.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogDataFolderProvider.GetParentID(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ItemDefinition,Sitecore.Data.DataProviders.CallContext,CommerceServer.Core.Catalog.ExternalIdInformation)">
            <summary>
            Gets the parent ID.
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="itemDefinition">The item definition.</param>
            <param name="context">The context.</param>
            <param name="information">The external id information.</param>
            <returns>
            Sitecore ID.
            </returns>
            <exception cref="T:System.NotImplementedException">Currently not implemented.</exception>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogDataFolderProvider.SaveItem(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ItemDefinition,Sitecore.Data.Items.ItemChanges,Sitecore.Data.DataProviders.CallContext,CommerceServer.Core.Catalog.ExternalIdInformation)">
            <summary>
            Saves the item.
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="itemDefinition">The item definition.</param>
            <param name="changes">The changes.</param>
            <param name="context">The context.</param>
            <param name="information">The external id information.</param>
            <returns>
            True if Item is saved; false otherwise.
            </returns>
            <exception cref="T:System.NotImplementedException">Currently not implemented.</exception>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogDataFolderProvider.CreateItem(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ID,System.String,Sitecore.Data.ID,Sitecore.Data.ItemDefinition,Sitecore.Data.DataProviders.CallContext)">
            <summary>
            Creates the item.
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="itemID">The item ID.</param>
            <param name="itemName">Name of the item.</param>
            <param name="templateID">The template ID.</param>
            <param name="parent">The parent.</param>
            <param name="context">The context.</param>
            <returns>
            True if Item created; false otherwise.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogDataFolderProvider.DeleteItem(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ItemDefinition,Sitecore.Data.DataProviders.CallContext,CommerceServer.Core.Catalog.ExternalIdInformation)">
            <summary>
            Deletes the item.
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="itemDefinition">The item definition.</param>
            <param name="context">The context.</param>
            <param name="information">The external id information.</param>
            <returns>
            True if Item deleted; false otherwise.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogDataFolderProvider.CopyItem(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ItemDefinition,Sitecore.Data.ItemDefinition,System.String,Sitecore.Data.ID,Sitecore.Data.DataProviders.CallContext,CommerceServer.Core.Catalog.ExternalIdInformation)">
            <summary>
            Copies an item.
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="source">The source item definition.</param>
            <param name="destination">The destination item definition.</param>
            <param name="copyName">The name of the item copy.</param>
            <param name="copyID">The ID of the item copy.</param>
            <param name="context">The context.</param>
            <param name="information">The external ID information of the source item.</param>
            <returns>True if the item is copied; false otherwise.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogDataFolderProvider.MoveItem(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ItemDefinition,Sitecore.Data.ItemDefinition,Sitecore.Data.DataProviders.CallContext,CommerceServer.Core.Catalog.ExternalIdInformation)">
            <summary>
            Moves an item
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="itemDefinition">The item definition.</param>
            <param name="destination">The destination item definition.</param>
            <param name="context">The context.</param>
            <param name="information">The external ID information.</param>
            <returns>True if the item is moved; false otherwise.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogDataFolderProvider.AddVersion(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ItemDefinition,Sitecore.Data.VersionUri,Sitecore.Data.DataProviders.CallContext,CommerceServer.Core.Catalog.ExternalIdInformation)">
            <summary>
            Adds the version.
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="itemDefinition">The item definition.</param>
            <param name="baseVersion">The base version.</param>
            <param name="context">The context.</param>
            <param name="information">The external id information.</param>
            <returns>
            The version that was added.  -1 if not version was added.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogDataFolderProvider.RemoveVersion(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ItemDefinition,Sitecore.Data.VersionUri,Sitecore.Data.DataProviders.CallContext,CommerceServer.Core.Catalog.ExternalIdInformation)">
            <summary>
            Removes the version.
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="itemDefinition">The item definition.</param>
            <param name="version">The version.</param>
            <param name="context">The context.</param>
            <param name="information">The external id information.</param>
            <returns>
            True if the version was removed, otherwise false.
            </returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogProvider">
            <summary>
            Catalog data provider for Sitecore.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogProvider.GetChildIDs(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ItemDefinition,Sitecore.Data.DataProviders.CallContext)">
            <summary>
            Gets the child IDs of the item.
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="itemDefinition">The item definition.</param>
            <param name="context">The context.</param>
            <returns>Sitecore IDList.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogProvider.GetItemFields(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ItemDefinition,Sitecore.Data.VersionUri,Sitecore.Data.DataProviders.CallContext,CommerceServer.Core.Catalog.ExternalIdInformation)">
            <summary>
            Gets the fields of the item.
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="itemDefinition">The item definition.</param>
            <param name="versionUri">The version URI.</param>
            <param name="context">The context.</param>
            <param name="information">The external id information.</param>
            <returns>
            Sitecore FieldList.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogProvider.GetItemVersions(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ItemDefinition,Sitecore.Data.DataProviders.CallContext,CommerceServer.Core.Catalog.ExternalIdInformation)">
            <summary>
            Gets the versions of the item.
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="itemDefinition">The item definition.</param>
            <param name="context">The context.</param>
            <param name="information">The external id information.</param>
            <returns>
            Sitecore VersionUriList.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogProvider.GetItemDefinition(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ID,Sitecore.Data.DataProviders.CallContext,CommerceServer.Core.Catalog.ExternalIdInformation)">
            <summary>
            Gets the item definition.
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="itemId">The item id.</param>
            <param name="context">The context.</param>
            <param name="information">The external id information.</param>
            <returns>
            Sitecore ItemDefiniton.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogProvider.GetParentID(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ItemDefinition,Sitecore.Data.DataProviders.CallContext,CommerceServer.Core.Catalog.ExternalIdInformation)">
            <summary>
            Gets the parent ID.
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="itemDefinition">The item definition.</param>
            <param name="context">The context.</param>
            <param name="information">The external id information.</param>
            <returns>
            Sitecore ID for the Catalog's parent.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogProvider.SaveItem(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ItemDefinition,Sitecore.Data.Items.ItemChanges,Sitecore.Data.DataProviders.CallContext,CommerceServer.Core.Catalog.ExternalIdInformation)">
            <summary>
            Saves the item.
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="itemDefinition">The item definition.</param>
            <param name="changes">The changes.</param>
            <param name="context">The context.</param>
            <param name="information">The external id information.</param>
            <returns>
            True if item is saved; false otherwise.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogProvider.CreateItem(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ID,System.String,Sitecore.Data.ID,Sitecore.Data.ItemDefinition,Sitecore.Data.DataProviders.CallContext)">
            <summary>
            Creates the item.
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="itemID">The item ID.</param>
            <param name="itemName">Name of the item.</param>
            <param name="templateID">The template ID.</param>
            <param name="parentItemDefinition">The parent item definition.</param>
            <param name="context">The context.</param>
            <returns>
            Trye if item is created; false otherwise.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogProvider.DeleteItem(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ItemDefinition,Sitecore.Data.DataProviders.CallContext,CommerceServer.Core.Catalog.ExternalIdInformation)">
            <summary>
            Deletes the item.
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="itemDefinition">The item definition.</param>
            <param name="context">The context.</param>
            <param name="information">The external id information.</param>
            <returns>
            True if item deleted; false otherwise.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogProvider.CopyItem(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ItemDefinition,Sitecore.Data.ItemDefinition,System.String,Sitecore.Data.ID,Sitecore.Data.DataProviders.CallContext,CommerceServer.Core.Catalog.ExternalIdInformation)">
            <summary>
            Copies an item.
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="source">The source item definition.</param>
            <param name="destination">The destination item definition.</param>
            <param name="copyName">The name of the item copy.</param>
            <param name="copyID">The ID of the item copy.</param>
            <param name="context">The context.</param>
            <param name="information">The external ID information of the source item.</param>
            <returns>True if the item is copied; false otherwise.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogProvider.MoveItem(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ItemDefinition,Sitecore.Data.ItemDefinition,Sitecore.Data.DataProviders.CallContext,CommerceServer.Core.Catalog.ExternalIdInformation)">
            <summary>
            Moves an item
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="itemDefinition">The item definition.</param>
            <param name="destination">The destination item definition.</param>
            <param name="context">The context.</param>
            <param name="information">The external ID information.</param>
            <returns>True if the item is moved; false otherwise.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogProvider.AddVersion(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ItemDefinition,Sitecore.Data.VersionUri,Sitecore.Data.DataProviders.CallContext,CommerceServer.Core.Catalog.ExternalIdInformation)">
            <summary>
            Adds the version.
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="itemDefinition">The item definition.</param>
            <param name="baseVersion">The base version.</param>
            <param name="context">The context.</param>
            <param name="information">The external id information.</param>
            <returns>
            The version that was added.  -1 if not version was added.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogProvider.RemoveVersion(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ItemDefinition,Sitecore.Data.VersionUri,Sitecore.Data.DataProviders.CallContext,CommerceServer.Core.Catalog.ExternalIdInformation)">
            <summary>
            Removes the version.
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="itemDefinition">The item definition.</param>
            <param name="version">The version.</param>
            <param name="context">The context.</param>
            <param name="information">The external id information.</param>
            <returns>
            True if the version was removed, otherwise false.
            </returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.ProductProvider">
            <summary>
            Product data provider for Sitecore. 
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.ProductProvider.GetChildIDs(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ItemDefinition,Sitecore.Data.DataProviders.CallContext)">
            <summary>
            Gets the child IDs of the item.
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="itemDefinition">The item definition.</param>
            <param name="context">The context.</param>
            <returns>Sitecore IDList.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.ProductProvider.GetItemFields(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ItemDefinition,Sitecore.Data.VersionUri,Sitecore.Data.DataProviders.CallContext,CommerceServer.Core.Catalog.ExternalIdInformation)">
            <summary>
            Gets the items fields.
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="itemDefinition">The item definition.</param>
            <param name="versionUri">The version URI.</param>
            <param name="context">The context.</param>
            <param name="information">The external id information.</param>
            <returns>
            Sitecore FieldList.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.ProductProvider.GetItemVersions(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ItemDefinition,Sitecore.Data.DataProviders.CallContext,CommerceServer.Core.Catalog.ExternalIdInformation)">
            <summary>
            Gets the item's versions.
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="itemDefinition">The item definition.</param>
            <param name="context">The context.</param>
            <param name="information">The external id information.</param>
            <returns>
            Sitecore VersionUriList.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.ProductProvider.GetItemDefinition(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ID,Sitecore.Data.DataProviders.CallContext,CommerceServer.Core.Catalog.ExternalIdInformation)">
            <summary>
            Gets the item definition.
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="itemId">The item id.</param>
            <param name="context">The context.</param>
            <param name="information">The external id information.</param>
            <returns>
            Sitecore ItemDefinition.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.ProductProvider.GetParentID(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ItemDefinition,Sitecore.Data.DataProviders.CallContext,CommerceServer.Core.Catalog.ExternalIdInformation)">
            <summary>
            Gets the parent ID.
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="itemDefinition">The item definition.</param>
            <param name="context">The context.</param>
            <param name="information">The external id information.</param>
            <returns>
            Sitecore ID of the Product's parent.
            </returns>
            <exception cref="T:System.NotImplementedException">Currently not implemented.</exception>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.ProductProvider.SaveItem(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ItemDefinition,Sitecore.Data.Items.ItemChanges,Sitecore.Data.DataProviders.CallContext,CommerceServer.Core.Catalog.ExternalIdInformation)">
            <summary>
            Saves the item.
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="itemDefinition">The item definition.</param>
            <param name="changes">The changes.</param>
            <param name="context">The context.</param>
            <param name="information">The external id information.</param>
            <returns>
            True if the item is saved; false otherwise.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.ProductProvider.CreateItem(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ID,System.String,Sitecore.Data.ID,Sitecore.Data.ItemDefinition,Sitecore.Data.DataProviders.CallContext)">
            <summary>
            Creates the item.
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="itemID">The item ID.</param>
            <param name="itemName">Name of the item.</param>
            <param name="templateID">The template ID.</param>
            <param name="parentItemDefinition">The parent item definition.</param>
            <param name="context">The context.</param>
            <returns>
            True if the item is created; false otherwise.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.ProductProvider.DeleteItem(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ItemDefinition,Sitecore.Data.DataProviders.CallContext,CommerceServer.Core.Catalog.ExternalIdInformation)">
            <summary>
            Deletes the item.
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="itemDefinition">The item definition.</param>
            <param name="context">The context.</param>
            <param name="information">The external id information.</param>
            <returns>
            True if item is deleted; false otherwise.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.ProductProvider.CopyItem(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ItemDefinition,Sitecore.Data.ItemDefinition,System.String,Sitecore.Data.ID,Sitecore.Data.DataProviders.CallContext,CommerceServer.Core.Catalog.ExternalIdInformation)">
            <summary>
            Copies an item.
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="source">The source item definition.</param>
            <param name="destination">The destination item definition.</param>
            <param name="copyName">The name of the item copy.</param>
            <param name="copyID">The ID of the item copy.</param>
            <param name="context">The context.</param>
            <param name="information">The external ID information of the source item.</param>
            <returns>True if the item is copied; false otherwise.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.ProductProvider.MoveItem(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ItemDefinition,Sitecore.Data.ItemDefinition,Sitecore.Data.DataProviders.CallContext,CommerceServer.Core.Catalog.ExternalIdInformation)">
            <summary>
            Moves an item
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="itemDefinition">The item definition.</param>
            <param name="destination">The destination item definition.</param>
            <param name="context">The context.</param>
            <param name="information">The external ID information.</param>
            <returns>True if the item is moved; false otherwise.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.ProductProvider.AddVersion(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ItemDefinition,Sitecore.Data.VersionUri,Sitecore.Data.DataProviders.CallContext,CommerceServer.Core.Catalog.ExternalIdInformation)">
            <summary>
            Adds the version.
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="itemDefinition">The item definition.</param>
            <param name="baseVersion">The base version.</param>
            <param name="context">The context.</param>
            <param name="information">The external id information.</param>
            <returns>
            The version that was added.  -1 if not version was added.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.ProductProvider.RemoveVersion(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ItemDefinition,Sitecore.Data.VersionUri,Sitecore.Data.DataProviders.CallContext,CommerceServer.Core.Catalog.ExternalIdInformation)">
            <summary>
            Removes the version.
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="itemDefinition">The item definition.</param>
            <param name="version">The version.</param>
            <param name="context">The context.</param>
            <param name="information">The external id information.</param>
            <returns>
            True if the version was removed, otherwise false.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.ProductProvider.ProductHasVariants(CommerceServer.Core.Catalog.Product)">
            <summary>
            Determines if the product has variants.
            </summary>
            <param name="product">The product.</param>
            <returns>True if the Product has variants; false otherwise.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.ProductProvider.DeleteExternalSettingsProduct(Sitecore.Commerce.Connect.CommerceServer.Catalog.ICatalogRepository,System.String,System.String)">
            <summary>
            Deletes the external settings product.
            </summary>
            <param name="repository">The repository.</param>
            <param name="catalogName">Name of the catalog.</param>
            <param name="productId">The product identifier.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.ProductVariantProvider">
            <summary>
            Product variant data provider for Sitecore.  
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.ProductVariantProvider.GetChildIDs(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ItemDefinition,Sitecore.Data.DataProviders.CallContext)">
            <summary>
            Gets child IDs for the item.
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="itemDefinition">The item definition.</param>
            <param name="context">The context.</param>
            <returns>Sitecore IDList.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.ProductVariantProvider.GetItemFields(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ItemDefinition,Sitecore.Data.VersionUri,Sitecore.Data.DataProviders.CallContext,CommerceServer.Core.Catalog.ExternalIdInformation)">
            <summary>
            Gets the item fields.
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="itemDefinition">The item definition.</param>
            <param name="versionUri">The version URI.</param>
            <param name="context">The context.</param>
            <param name="information">The external id information.</param>
            <returns>
            Sitecore FieldList.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.ProductVariantProvider.GetItemVersions(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ItemDefinition,Sitecore.Data.DataProviders.CallContext,CommerceServer.Core.Catalog.ExternalIdInformation)">
            <summary>
            Gets the item's versions.
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="itemDefinition">The item definition.</param>
            <param name="context">The context.</param>
            <param name="information">The external id information.</param>
            <returns>
            Sitecore VersionUriList.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.ProductVariantProvider.GetItemDefinition(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ID,Sitecore.Data.DataProviders.CallContext,CommerceServer.Core.Catalog.ExternalIdInformation)">
            <summary>
            Gets the item's definition.
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="itemId">The item id.</param>
            <param name="context">The context.</param>
            <param name="information">The external id information.</param>
            <returns>
            Sitecore ItemDefinition.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.ProductVariantProvider.GetParentID(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ItemDefinition,Sitecore.Data.DataProviders.CallContext,CommerceServer.Core.Catalog.ExternalIdInformation)">
            <summary>
            Gets the parent ID.
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="itemDefinition">The item definition.</param>
            <param name="context">The context.</param>
            <param name="information">The external id information.</param>
            <returns>
            Sitecore ID of the Product Variant's property.
            </returns>
            <exception cref="T:System.NotImplementedException">Currently not implemented.</exception>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.ProductVariantProvider.SaveItem(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ItemDefinition,Sitecore.Data.Items.ItemChanges,Sitecore.Data.DataProviders.CallContext,CommerceServer.Core.Catalog.ExternalIdInformation)">
            <summary>
            Saves the item.
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="itemDefinition">The item definition.</param>
            <param name="changes">The changes.</param>
            <param name="context">The context.</param>
            <param name="information">The external id information.</param>
            <returns>
            True if item has been saved; false otherwise.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.ProductVariantProvider.CreateItem(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ID,System.String,Sitecore.Data.ID,Sitecore.Data.ItemDefinition,Sitecore.Data.DataProviders.CallContext)">
            <summary>
            Creates the item.
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="itemID">The item ID.</param>
            <param name="itemName">Name of the item.</param>
            <param name="templateID">The template ID.</param>
            <param name="parentItemDefinition">The parent item definition.</param>
            <param name="context">The context.</param>
            <returns>
            True if item has been created; false otherwise.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.ProductVariantProvider.DeleteItem(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ItemDefinition,Sitecore.Data.DataProviders.CallContext,CommerceServer.Core.Catalog.ExternalIdInformation)">
            <summary>
            Deletes the item.
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="itemDefinition">The item definition.</param>
            <param name="context">The context.</param>
            <param name="information">The external id information.</param>
            <returns>
            True if item has been deleted; false otherwise.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.ProductVariantProvider.GetDisplayName(CommerceServer.Core.Catalog.Variant)">
            <summary>
            Gets the display name.
            </summary>
            <param name="variant">The variant.</param>
            <returns>Display name of the Variant.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.ProductVariantProvider.CopyItem(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ItemDefinition,Sitecore.Data.ItemDefinition,System.String,Sitecore.Data.ID,Sitecore.Data.DataProviders.CallContext,CommerceServer.Core.Catalog.ExternalIdInformation)">
            <summary>
            Copies an item.
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="source">The source item definition.</param>
            <param name="destination">The destination item definition.</param>
            <param name="copyName">The name of the item copy.</param>
            <param name="copyID">The ID of the item copy.</param>
            <param name="context">The context.</param>
            <param name="information">The external ID information of the source item.</param>
            <returns>True if the item is copied; false otherwise.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.ProductVariantProvider.MoveItem(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ItemDefinition,Sitecore.Data.ItemDefinition,Sitecore.Data.DataProviders.CallContext,CommerceServer.Core.Catalog.ExternalIdInformation)">
            <summary>
            Moves an item
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="itemDefinition">The item definition.</param>
            <param name="destination">The destination item definition.</param>
            <param name="context">The context.</param>
            <param name="information">The external ID information.</param>
            <returns>True if the item is moved; false otherwise.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.ProductVariantProvider.AddVersion(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ItemDefinition,Sitecore.Data.VersionUri,Sitecore.Data.DataProviders.CallContext,CommerceServer.Core.Catalog.ExternalIdInformation)">
            <summary>
            Adds the version.
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="itemDefinition">The item definition.</param>
            <param name="baseVersion">The base version.</param>
            <param name="context">The context.</param>
            <param name="information">The external id information.</param>
            <returns>
            The version that was added.  -1 if not version was added.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.ProductVariantProvider.RemoveVersion(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ItemDefinition,Sitecore.Data.VersionUri,Sitecore.Data.DataProviders.CallContext,CommerceServer.Core.Catalog.ExternalIdInformation)">
            <summary>
            Removes the version.
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="itemDefinition">The item definition.</param>
            <param name="version">The version.</param>
            <param name="context">The context.</param>
            <param name="information">The external id information.</param>
            <returns>
            True if the version was removed, otherwise false.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.ProductVariantProvider.ProductHasVariants(CommerceServer.Core.Catalog.Product)">
            <summary>
            Products the has variants.
            </summary>
            <param name="product">The product.</param>
            <returns>True if the Product has variants; false otherwise.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.ProductVariantProvider.DeleteExternalSettingsVariant(Sitecore.Commerce.Connect.CommerceServer.Catalog.ICatalogRepository,System.String,System.String,System.String)">
            <summary>
            Deletes the external settings variant.
            </summary>
            <param name="repository">The repository.</param>
            <param name="catalogName">Name of the catalog.</param>
            <param name="productId">The product identifier.</param>
            <param name="variantId">The variant identifier.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.NavigationItemProvider">
            <summary>
            Navigation item provider for Sitecore.  
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.NavigationItemProvider.GetChildIDs(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ItemDefinition,Sitecore.Data.DataProviders.CallContext)">
            <summary>
            Gets the child IDs of the item.
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="itemDefinition">The item definition.</param>
            <param name="context">The context.</param>
            <returns>Sitecore IDList.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.NavigationItemProvider.GetItemFields(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ItemDefinition,Sitecore.Data.VersionUri,Sitecore.Data.DataProviders.CallContext,CommerceServer.Core.Catalog.ExternalIdInformation)">
            <summary>
            Gets the item's fields.
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="itemDefinition">The item definition.</param>
            <param name="versionUri">The version URI.</param>
            <param name="context">The context.</param>
            <param name="information">The external id information.</param>
            <returns>
            Sitecore FieldList
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.NavigationItemProvider.GetItemVersions(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ItemDefinition,Sitecore.Data.DataProviders.CallContext,CommerceServer.Core.Catalog.ExternalIdInformation)">
            <summary>
            Gets the item's versions.
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="itemDefinition">The item definition.</param>
            <param name="context">The context.</param>
            <param name="information">The external id information.</param>
            <returns>
            Sitecore VersionUriList.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.NavigationItemProvider.GetItemDefinition(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ID,Sitecore.Data.DataProviders.CallContext,CommerceServer.Core.Catalog.ExternalIdInformation)">
            <summary>
            Gets the item's definition.
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="itemId">The item id.</param>
            <param name="context">The context.</param>
            <param name="information">The external id information.</param>
            <returns>
            Sitecore ItemDefinition.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.NavigationItemProvider.GetParentID(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ItemDefinition,Sitecore.Data.DataProviders.CallContext,CommerceServer.Core.Catalog.ExternalIdInformation)">
            <summary>
            Gets the item's parent ID.
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="itemDefinition">The item definition.</param>
            <param name="context">The context.</param>
            <param name="information">The external id information.</param>
            <returns>
            Sitecore ID for the Navigation Item's parent.
            </returns>
            <exception cref="T:System.NotImplementedException">Currently not implemented.</exception>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.NavigationItemProvider.SaveItem(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ItemDefinition,Sitecore.Data.Items.ItemChanges,Sitecore.Data.DataProviders.CallContext,CommerceServer.Core.Catalog.ExternalIdInformation)">
            <summary>
            Saves the item.
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="itemDefinition">The item definition.</param>
            <param name="changes">The changes.</param>
            <param name="context">The context.</param>
            <param name="information">The external id information.</param>
            <returns>
            True if the item has been saved; false otherwise.
            </returns>
            <exception cref="T:System.NotImplementedException">Currently not implemented.</exception>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.NavigationItemProvider.CreateItem(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ID,System.String,Sitecore.Data.ID,Sitecore.Data.ItemDefinition,Sitecore.Data.DataProviders.CallContext)">
            <summary>
            Creates the item.
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="itemID">The item ID.</param>
            <param name="itemName">Name of the item.</param>
            <param name="templateID">The template ID.</param>
            <param name="parent">The parent.</param>
            <param name="context">The context.</param>
            <returns>
            True if the item has been created; false otherwise.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.NavigationItemProvider.DeleteItem(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ItemDefinition,Sitecore.Data.DataProviders.CallContext,CommerceServer.Core.Catalog.ExternalIdInformation)">
            <summary>
            Deletes the item.
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="itemDefinition">The item definition.</param>
            <param name="context">The context.</param>
            <param name="information">The external id information.</param>
            <returns>
            True if the item has been deleted; false otherwise.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.NavigationItemProvider.CopyItem(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ItemDefinition,Sitecore.Data.ItemDefinition,System.String,Sitecore.Data.ID,Sitecore.Data.DataProviders.CallContext,CommerceServer.Core.Catalog.ExternalIdInformation)">
            <summary>
            Copies an item.
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="source">The source item definition.</param>
            <param name="destination">The destination item definition.</param>
            <param name="copyName">The name of the item copy.</param>
            <param name="copyID">The ID of the item copy.</param>
            <param name="context">The context.</param>
            <param name="information">The external ID information of the source item.</param>
            <returns>True if the item is copied; false otherwise.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.NavigationItemProvider.MoveItem(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ItemDefinition,Sitecore.Data.ItemDefinition,Sitecore.Data.DataProviders.CallContext,CommerceServer.Core.Catalog.ExternalIdInformation)">
            <summary>
            Moves an item
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="itemDefinition">The item definition.</param>
            <param name="destination">The destination item definition.</param>
            <param name="context">The context.</param>
            <param name="information">The external ID information.</param>
            <returns>True if the item is moved; false otherwise.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.NavigationItemProvider.AddVersion(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ItemDefinition,Sitecore.Data.VersionUri,Sitecore.Data.DataProviders.CallContext,CommerceServer.Core.Catalog.ExternalIdInformation)">
            <summary>
            Adds the version.
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="itemDefinition">The item definition.</param>
            <param name="baseVersion">The base version.</param>
            <param name="context">The context.</param>
            <param name="information">The external id information.</param>
            <returns>
            The version that was added.  -1 if not version was added.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.NavigationItemProvider.RemoveVersion(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ItemDefinition,Sitecore.Data.VersionUri,Sitecore.Data.DataProviders.CallContext,CommerceServer.Core.Catalog.ExternalIdInformation)">
            <summary>
            Removes the version.
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="itemDefinition">The item definition.</param>
            <param name="version">The version.</param>
            <param name="context">The context.</param>
            <param name="information">The external id information.</param>
            <returns>
            True if the version was removed, otherwise false.
            </returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.ReadOnlyCatalogDataProvider">
            <summary>
            ReadOnlyCatalogDataProvider class definition.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.ReadOnlyCatalogDataProvider.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.ReadOnlyCatalogDataProvider"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.ReadOnlyCatalogDataProvider.GetChildIDs(Sitecore.Data.ItemDefinition,Sitecore.Data.DataProviders.CallContext)">
            <summary>
            Gets the child I ds.
            </summary>
            <param name="itemDefinition">The item definition.</param>
            <param name="context">The context.</param>
            <returns>The list of children IDs.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.ReadOnlyCatalogDataProvider.GetItemFields(Sitecore.Data.ItemDefinition,Sitecore.Data.VersionUri,Sitecore.Data.DataProviders.CallContext)">
            <summary>
            Gets the item fields.
            </summary>
            <param name="itemDefinition">The item definition.</param>
            <param name="versionUri">The version URI.</param>
            <param name="context">The context.</param>
            <returns>The field list.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.ReadOnlyCatalogDataProvider.GetItemDefinition(Sitecore.Data.ID,Sitecore.Data.DataProviders.CallContext)">
            <summary>
            Gets the item definition.
            </summary>
            <param name="itemId">The item id.</param>
            <param name="context">The context.</param>
            <returns>The item definition.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.ReadOnlyCatalogDataProvider.GetParentID(Sitecore.Data.ItemDefinition,Sitecore.Data.DataProviders.CallContext)">
            <summary>
            Gets the parent ID.
            </summary>
            <param name="itemDefinition">The item definition.</param>
            <param name="context">The context.</param>
            <returns>The parent ID.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.ReadOnlyCatalogDataProvider.GetItemVersions(Sitecore.Data.ItemDefinition,Sitecore.Data.DataProviders.CallContext)">
            <summary>
            Gets the item versions.
            </summary>
            <param name="itemDefinition">The item definition.</param>
            <param name="context">The context.</param>
            <returns>The versions of the item.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.ReadOnlyCatalogDataProvider.RemoveVersions(Sitecore.Data.ItemDefinition,Sitecore.Globalization.Language,System.Boolean,Sitecore.Data.DataProviders.CallContext)">
            <summary>
            Removes versions from an item.
            </summary>
            <param name="itemDefinition">The item definition.</param>
            <param name="language">The language.</param>
            <param name="removeSharedData">If set to <c>true</c> shared data is removed.</param>
            <param name="context">The context.</param>
            <returns>true if succeeded</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.ReadOnlyCatalogDataProvider.GetLanguages(Sitecore.Data.DataProviders.CallContext)">
            <summary>
            Gets the languages.
            </summary>
            <param name="context">The context.</param>
            <returns>The language collection supported by the item.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.ReadOnlyCatalogDataProvider.InitializeTemplates(Sitecore.Data.Database)">
            <summary>
            Initializes data templates utilized by the data provider.
            </summary>
            <param name="database">The database that contains the templates.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.ReadOnlyCatalogDataProvider.GetCatalogDataProvider(Sitecore.Data.ID,Sitecore.Data.DataProviders.CallContext)">
            <summary>
            Gets the catalog data provider.
            </summary>
            <param name="templateID">The template ID.</param>
            <param name="context">The context.</param>
            <returns>ISitecoreDataProvider for Catalog System. </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.ReadOnlyCatalogDataProvider.GetCatalogDataProvider(CommerceServer.Core.Catalog.CommerceItemType)">
            <summary>
            Gets the catalog data provider based on the given item type.
            </summary>
            <param name="itemType">Type of the item.</param>
            <returns>The catalog data provider or null if none is found.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.ReadOnlyCatalogDataProvider.CanProcessCatalogItem(Sitecore.Data.ID,Sitecore.Data.DataProviders.CallContext,CommerceServer.Core.Catalog.ExternalIdInformation@)">
            <summary>
            Determines whether this id is one of ours.
            </summary>
            <param name="id">The id.</param>
            <param name="context">the context</param>
            <param name="information">The information.</param>
            <returns>
              <c>true</c> if the id is ours; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.ProviderImplementationNotFoundException">
            <summary>
            ProviderImplementationNotFoundException exception thrown when a dynamically loaded type implementation cannot be found.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.ProviderImplementationNotFoundException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ProviderImplementationNotFoundException class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.ProviderImplementationNotFoundException.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.ProviderImplementationNotFoundException"/> class.
            </summary>
            <param name="expectedType">The expected type.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.ProviderImplementationNotFoundException.#ctor">
            <summary>
            Initializes a new instance of the ProviderImplementationNotFoundException class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.ProviderImplementationNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the ProviderImplementationNotFoundException class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.ProviderImplementationNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.ProviderImplementationNotFoundException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info"/> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult"/> is zero (0). </exception>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.ProviderImplementationNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="info"/> parameter is a null reference (Nothing in Visual Basic).
            </exception>
            <PermissionSet>
              <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="*AllFiles*" PathDiscovery="*AllFiles*"/>
              <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="SerializationFormatter"/>
            </PermissionSet>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.ICatalogRepository">
            <summary>
            Interface for classes accessing the Catalog system in Commerce Server. 
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.ICatalogRepository.GetPropertiesThatCanBeProductId">
            <summary>
            Gets the names of the catalog properties that can be assigned as a product ID.
            </summary>
            <returns>The names of the catalog properties that can be assigned as a product ID.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.ICatalogRepository.GetPropertiesThatCanBeVariantId">
            <summary>
            Gets the names of the catalog properties that can be assigned as a variant ID.
            </summary>
            <returns>The names of the catalog properties that can be assigned as a variant ID.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.ICatalogRepository.RefreshSiteCache">
            <summary>
            Refreshes the catalog cache on all front-end sites
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.ICatalogRepository.AddLanguage(System.String,System.String)">
            <summary>
            Adds the language to a catalog.
            </summary>
            <param name="catalogName">Name of the catalog.</param>
            <param name="language">The language.</param>
            <returns>True if the language is added; otherwise false.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.ICatalogRepository.RemoveLanguage(System.String,System.String)">
            <summary>
            Removes the language from the catalog.
            </summary>
            <param name="catalogName">Name of the catalog.</param>
            <param name="language">The language.</param>
            <returns>True if the language is removed; Otherwise false.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.ICatalogRepository.GetLanguagesCollection(System.String)">
            <summary>
            Gets a collection of langauges that are contained in the catalog 
            </summary>
            <param name="catalogName">the catalog name</param>
            <returns>the list of languages</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.ICatalogRepository.GetExternalIds">
            <summary>
            Gets a collection that represents all external IDs defined in the Commerce catalog system.
            </summary>
            <returns>
            A collection that represents all external IDs defined in the Commerce catalog system.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.ICatalogRepository.GetCatalogs">
            <summary>
            Gets all of the catalog names.
            </summary>
            <returns>ProductCatalog from the specified ID.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.ICatalogRepository.GetCatalog(System.String)">
            <summary>
            Gets the catalog by name.
            </summary>
            <param name="catalogName">Name of the catalog.</param>
            <returns>ProductCatalog for the given Catalog Name.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.ICatalogRepository.GetCatalogReadOnly(System.String)">
            <summary>
            Gets a catalog by name in read-only format.
            </summary>
            <param name="catalogName">Name of the catalog.</param>
            <returns>ProductCatalog for the given Catalog Name.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.ICatalogRepository.GetCatalogDefinitionList">
            <summary>
            Gets the catalog definition list.
            </summary>
            <returns>CatalogDefinitionsDataSet of all definitions in the system.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.ICatalogRepository.GetCatalogDefinition(System.String)">
            <summary>
            Gets the catalog definition.
            </summary>
            <param name="definitionName">Name of the definition.</param>
            <returns>CatalogDefinition for the specified definition name.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.ICatalogRepository.CreateCatalogDefinition(System.String,CommerceServer.Core.Catalog.CatalogDefinitionType)">
            <summary>
            Creates the catalog definition.
            </summary>
            <param name="definitionName">Name of the definition.</param>
            <param name="definitionType">Type of the definition.</param>
            <returns>The newly created catalog definition instance; otherwise null.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.ICatalogRepository.GetCatalogMetadataDefinitions">
            <summary>
            Gets the catalog metadata definitions.
            </summary>
            <returns>CatalogPropertiesDataSet of metadata definitions.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.ICatalogRepository.AddCatalogMetadata(System.String)">
            <summary>
            Adds the catalog metadata.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.ICatalogRepository.GetCatalogPropertyDefinitionList">
            <summary>
            Gets a data set containing all property definitions in the Catalog system.
            </summary>
            <returns>A data set containing all property definitions in the Catalog system.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.ICatalogRepository.GetCatalogPropertyDefinition(System.String)">
            <summary>
            Gets the catalog property definition.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns>CatalogProperty for the specified property name.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.ICatalogRepository.CreateCatalogPropertyDefinition(System.String,CommerceServer.Core.Catalog.CatalogDataType,System.Int32)">
            <summary>
            Creates the catalog property definition.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <param name="catalogDataType">Type of the catalog data.</param>
            <param name="maxLength">The maximum length.</param>
            <returns>The created catalog property definition.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.ICatalogRepository.GetCategoryChildIDs(System.String,System.String,System.Boolean)">
            <summary>
            Gets the child IDs of a given category.
            </summary>
            <param name="catalogName">Name of the catalog.</param>
            <param name="categoryName">Name of the category.</param>
            <param name="includeProducts">Specifies whether child products should be returned in the child ID list.</param>
            <returns>A list containing the IDs of the category's children.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.ICatalogRepository.GetProduct(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Gets the product.
            </summary>
            <param name="catalogName">Name of the catalog.</param>
            <param name="productID">The product ID.</param>
            <param name="language">The language.</param>
            <param name="loadFromCache">Indicates where or not the product should be retrieved from the database or cache</param>
            <returns>Commerce Server Product.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.ICatalogRepository.GetProductReadOnly(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Gets a product in read-only format.
            </summary>
            <param name="catalogName">Name of the catalog.</param>
            <param name="productID">The product ID.</param>
            <param name="language">The language.</param>
            <param name="loadFromCache">Indicates where or not the product should be retrieved from the database or cache</param>
            <returns>Commerce Server Product.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.ICatalogRepository.GetCategory(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Gets the category.
            </summary>
            <param name="catalogName">Name of the catalog.</param>
            <param name="categoryID">The category ID.</param>
            <param name="language">The language.</param>
            <param name="loadFromCache">Indicates where or not the category should be retrieved from the database or cache</param>
            <returns>Commerce Server Category.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.ICatalogRepository.GetCategoryReadOnly(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Gets a category in read-only format.
            </summary>
            <param name="catalogName">Name of the catalog.</param>
            <param name="categoryID">The category ID.</param>
            <param name="language">The language.</param>
            <param name="loadFromCache">Indicates where or not the category should be retrieved from the database or cache</param>
            <returns>Commerce Server Category.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.ICatalogRepository.CreateProduct(System.String,System.String,System.String,System.Guid,System.String)">
            <summary>
            Creates the product.
            </summary>
            <param name="definitionName">Name of the definition.</param>
            <param name="catalogName">Name of the catalog.</param>
            <param name="productId">The product id.</param>
            <param name="externalId">The external ID of the item.</param>
            <param name="parentCategory">The parent category.</param>
            <returns>Commerce Server Product.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.ICatalogRepository.CreateCategory(System.String,System.String,System.String,System.Guid,System.String)">
            <summary>
            Creates the category.
            </summary>
            <param name="definitionName">Name of the definition.</param>
            <param name="catalogName">Name of the catalog.</param>
            <param name="categoryName">Name of the category.</param>
            <param name="externalId">The external ID of the item.</param>
            <param name="parentCategory">The parent category.</param>
            <returns>Commerce Server Category.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.ICatalogRepository.CreateCatalog(System.String,System.String,System.String,System.String,System.String,System.Guid)">
            <summary>
            Creates the catalog.
            </summary>
            <param name="catalogName">Name of the catalog.</param>
            <param name="productIdProperty">The product id property.</param>
            <param name="variantIdProperty">The variant id property.</param>
            <param name="defaultLanguageCode">The default language code.</param>
            <param name="reportingLanguageCode">The reporting language code.</param>
            <param name="externalId">The external ID of the item.</param>
            <returns>Commerce Server Product Catalog.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.ICatalogRepository.CreateVirtualCatalog(System.String,System.String,System.String,System.Guid)">
            <summary>
            Creates the virtual catalog.
            </summary>
            <param name="catalogName">Name of the catalog.</param>
            <param name="defaultLanguageCode">The default language code.</param>
            <param name="reportingLanguageCode">The reporting language code.</param>
            <param name="externalId">The external ID of the item.</param>
            <returns>Commerce Server Virtual Catalog.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.ICatalogRepository.DeleteProduct(System.String,System.String)">
            <summary>
            Deletes the product.
            </summary>
            <param name="catalogName">Name of the catalog.</param>
            <param name="productId">The product id.</param>
            <returns>True if the Product has been deleted; false otherwise.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.ICatalogRepository.DeleteCategory(System.String,System.String)">
            <summary>
            Deletes the category.
            </summary>
            <param name="catalogName">Name of the catalog.</param>
            <param name="categoryName">Name of the category.</param>
            <returns>True if the Category has been deleted; false otherwise.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.ICatalogRepository.DeleteCatalog(System.String)">
            <summary>
            Deletes the catalog.
            </summary>
            <param name="catalogName">Name of the catalog.</param>
            <returns>True if the Catalog has been deleted; false otherwise.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.ICatalogRepository.CreateCatalogRelationship(System.String,System.String,System.String,System.String,CommerceServer.Core.Catalog.CatalogClassTypes,CommerceServer.Core.Catalog.CatalogClassTypes,System.String,System.String,System.Nullable{System.Guid},System.Nullable{System.Int32},System.String)">
            <summary>
            Creates the catalog relationship.
            </summary>
            <param name="catalogName">Name of the catalog.</param>
            <param name="targetCatalogName">Name of target catalog.</param>
            <param name="catalogItemId">Identifier of the catalog item.</param>
            <param name="targetCatalogItemId">Identifier of the target catalog item.</param>
            <param name="sourceClassType">Type of source Commerce Server Catalog Class Type.</param>
            <param name="targetClassType">Type of target Commerce Server Catalog Class Type.</param>
            <param name="relationshipName">Name of the relationship.</param>
            <param name="relationshipDescription">Description of the relationship.</param>
            <param name="externalId">External id of the catalog item.</param>
            <param name="rank">Rank of the relationship.</param>
            <param name="descriptionLanguage">The language to add the description under</param>
            <returns>
            True if the Catalog relationship has been created; false otherwise.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.ICatalogRepository.CreateCatalogRelationship(System.String,System.String,System.String,System.String,CommerceServer.Core.Catalog.CatalogClassTypes,CommerceServer.Core.Catalog.CatalogClassTypes,System.String,System.String,System.Nullable{System.Guid},System.Nullable{System.Int32},System.String,System.Nullable{System.Int32},System.Nullable{System.Guid},System.String@,System.String)">
            <summary>
            Creates a two-way catalog relationship, from source to target and from target to source.
            </summary>
            <param name="catalogName">The catalog name of the source item.</param>
            <param name="targetCatalogName">The catalog name of the target item.</param>
            <param name="catalogItemId">Identifier of the source catalog item.</param>
            <param name="targetCatalogItemId">Identifier of the target catalog item.</param>
            <param name="sourceClassType">Type of source Commerce Server Catalog Class Type.</param>
            <param name="targetClassType">Type of target Commerce Server Catalog Class Type.</param>
            <param name="relationshipName">Name of the relationship.</param>
            <param name="relationshipDescription">Description of the relationship.</param>
            <param name="externalId">Exteranl id of the catalog item.</param>
            <param name="rank">Rank of the relationship.</param>
            <param name="secondaryRelationshipDescription">The description for the secondary (reciprocal) relationship.</param>
            <param name="secondaryRelationshipRank">The rank of the secondary (reciprocal) relationship.</param>
            <param name="secondaryExternalId">The external id of the secondary (reciprocal) relationship.</param>
            <param name="errorMessage">An out parameter for an error message.</param>
            <param name="descriptionLanguage">The language to add the description under</param>
            <returns>True if the operation succeeded, otherwise false.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.ICatalogRepository.DeleteCatalogRelationship(System.String,System.String,System.String,System.String,CommerceServer.Core.Catalog.CatalogClassTypes,CommerceServer.Core.Catalog.CatalogClassTypes,System.String,System.Boolean)">
            <summary>
            Deletes the catalog relationship.
            </summary>
            <param name="catalogName">Name of the catalog.</param>
            <param name="targetCatalogName">Name of target catalog.</param>
            <param name="catalogItemId">Identifier of the catalog item.</param>
            <param name="targetCatalogItemId">Identifier of the target catalog item.</param>
            <param name="sourceClassType">Type of source Commerce Server Catalog Class Type.</param>
            <param name="targetClassType">Type of target Commerce Server Catalog Class Type.</param>
            <param name="relationshipName">Name of the relationship.</param>
            <param name="deleteReciprocalRelationship">Optional. If true, the reciprocal relationship will also be deleted, if it exists.</param>
            <returns>
            True if the Catalog relationship has been deleted; false otherwise.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.ICatalogRepository.FindRelationship(CommerceServer.Core.Catalog.CatalogItem,CommerceServer.Core.Catalog.CatalogClassTypes,System.String,System.String,System.String)">
            <summary>
            Finds the relationship.
            </summary>
            <param name="catalogItem">The catalog item.</param>
            <param name="catalogClassType">Type of the catalog class.</param>
            <param name="relationshipName">Name of the relationship.</param>
            <param name="catalogItemIdentifier">The catalog item identifier.</param>
            <param name="targetCatalogName">Name of the target catalog.</param>
            <returns>
            Commerce Server CatalogRelationship
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.ICatalogRepository.DeleteVariant(System.String,System.String,System.String)">
            <summary>
            Deletes the variant.
            </summary>
            <param name="catalogName">Name of the catalog.</param>
            <param name="productId">The product id.</param>
            <param name="variantId">The variant id.</param>
            <returns>True if Variant has been deleted; false otherwise.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.ICatalogRepository.GetExternalIdInformation(System.Guid)">
            <summary>
            Indicates if the given externals id exists in Commerce Server.
            </summary>
            <param name="externalId">The external id.</param>
            <returns>CommerceItemType.NotFound if no item was found.  Otherwise it returns the actual type of the item found.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.ICatalogRepository.DeleteCategoryAssociation(System.String,System.String,CommerceServer.Core.Catalog.CatalogClassTypes,System.String)">
            <summary>
            Deletes the category association from a catalog item.
            </summary>
            <param name="catalogName">Name of the catalog.</param>
            <param name="itemIdentifier">The item identifier.</param>
            <param name="classType">Type of the class.</param>
            <param name="categoryNameToRemove">The category name to remove.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.ICatalogRepository.AddCategoryAssociation(System.String,System.String,CommerceServer.Core.Catalog.CatalogClassTypes,System.String,System.Guid)">
            <summary>
            Adds the category association.
            </summary>
            <param name="catalogName">Name of the catalog.</param>
            <param name="itemIdentifier">The item identifier.</param>
            <param name="classType">Type of the class.</param>
            <param name="categoryNameToAdd">The category name to add.</param>
            <param name="associationExternalId">The association external id.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.ICatalogRepository.GetCatalogSets">
            <summary>
            Gets the catalog sets that have been defined for the current Commerce site.
            </summary>
            <returns>The catalog sets that have been defined for the current Commerce site.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.ICatalogRepository.GetCatalogSet(System.Guid)">
            <summary>
            Gets a catalog set by ID.
            </summary>
            <param name="catalogSetId">The ID of the catalog set to retrieve.</param>
            <returns>The requested Commerce Server catalog set.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.ICatalogRepository.CreateDynamicCatalogSet(System.String,System.String,System.String,System.Guid)">
            <summary>
            Creates a new dynamic catalog set.
            </summary>
            <param name="catalogSetName">The name of the cataog set.</param>
            <param name="description">The description of the catalog set.</param>
            <param name="expression">The expression that defines which catalogs belong to the catalog set.</param>
            <param name="catalogSetId">The ID of the catalog set.</param>
            <returns>A new dynamic catalog set.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.ICatalogRepository.CreateStaticCatalogSet(System.String,System.String,System.String[],System.Guid)">
            <summary>
            Creates a new static catalog set.
            </summary>
            <param name="catalogSetName">The name of the cataog set.</param>
            <param name="description">The description of the catalog set.</param>
            <param name="productCatalogs">The list of product catalogs that will belong to the catalog set.</param>
            <param name="catalogSetId">The ID of the catalog set.</param>
            <returns>A new static catalog set.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.ICatalogRepository.DeleteCatalogSet(System.Guid)">
            <summary>
            Deletes a catalog set.
            </summary>
            <param name="catalogSetId">The ID of the catalog set to delete.</param>
            <returns>True if the catalog set was successfully deleted, otherwise false.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.ICatalogRepository.GetModifiedCatalogItemExternalIdInformation(System.DateTime,System.String,CommerceServer.Core.Catalog.CommerceItemType[])">
            <summary>
            Retrieves external ID information about items in the catalog system that have modified since the provided date.
            </summary>
            <param name="minLastModifiedDate">Specifies that only items that have been modified after this date will be retruned.</param>
            <param name="catalogName">The name of the catalog to examine.</param>
            <param name="itemTypes">Specifies that only items of the specified commerce item types will be returned.</param>
            <returns>A list of <see cref="T:CommerceServer.Core.Catalog.ExternalIdInformation"/> objects that describe the items matching the provided date, catalog, and item type filters.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.ICatalogRepository.GetDeletedCatalogItemExternalIdInformation(System.String,System.DateTime)">
            <summary>
            Retrieves external ID information about itemsm in the catalog system that have been deleted since the provided date.
            </summary>
            <param name="catalogName">The name of the catalog to search.</param>
            <param name="minDeletedDate">Specifies that only items that have been deleted after this date will be retruned.</param>
            <returns>A list of <see cref="T:CommerceServer.Core.Catalog.ExternalIdInformation"/> objects that describe the items matching the provided date and catalog filters.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogTemplateGenerator">
            <summary>
            Generator for Sitecore data templates based on Commerce Server catalog data.  
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogTemplateGenerator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogTemplateGenerator"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogTemplateGenerator.InventoryRepository">
            <summary>
            Gets the inventory repository
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogTemplateGenerator.CatalogRepository">
            <summary>
            Gets the catalog repository
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogTemplateGenerator.PropertyTypeMapper">
            <summary>
            Gets the property type mapper
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogTemplateGenerator.CatalogItemTemplateCommerceSection">
            <summary>
            Gets the Commerce section of the catalog item base template
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogTemplateGenerator.RebuildBuiltInFieldValidators">
            <summary>
            Gets a value indicating whether field validators for built-in Commerce
            catalog properties should be rebuilt.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogTemplateGenerator.RebuildBuiltInFieldDisplayProperties">
            <summary>
            Gets a value indicating whether field display properties for built-in Commerce catalog properties should be rebuilt.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogTemplateGenerator.CurrentJob">
            <summary>
            Gets or sets the current Sitecore job context.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogTemplateGenerator.CurrentDatabase">
            <summary>
            Gets or sets the current database context.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogTemplateGenerator.IsAnyItemCreated">
            <summary>
            Gets or sets a value indicating whether any item was created during template generation.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogTemplateGenerator.IsAnyItemEdited">
            <summary>
            Gets or sets a value indicating whether any item was created during template generation.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogTemplateGenerator.BuildCatalogTemplates(Sitecore.Data.Database)">
            <summary>
            Builds the catalog templates.
            </summary>
            <param name="database">The database.</param>
            <returns>Sitecore TemplateCollection of Commerce Server Catalog based templates.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogTemplateGenerator.DeleteAllGeneratedTemplates(Sitecore.Data.Database)">
            <summary>
            Deletes the generated catalog templates.
            </summary>
            <param name="database">The database.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogTemplateGenerator.Initialize(Sitecore.Data.Database)">
            <summary>
            Initializes the class with the provided database.
            </summary>
            <param name="database">The current database.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogTemplateGenerator.GetProductCatalogTemplateCount">
            <summary>
            Gets the number of product catalog templates that will be generated.
            </summary>
            <returns>The number of product catalog templates that will be generated.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogTemplateGenerator.GetInventoryCatalogTemplateCount">
            <summary>
            Gets the number of inventory catalog templates that will be generated.
            </summary>
            <returns>The number of inventory catalog templates that will be generated.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogTemplateGenerator.BuildProductCatalogTemplates(Sitecore.Collections.ItemCollection)">
            <summary>
            Builds the product catalog templates.
            </summary>
            <param name="fieldRules">The field rules defined to validate the template fields.</param>
            <returns>Sitecore TemplateCollection of Commerce Server Catalog based templates.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogTemplateGenerator.InstallCatalogLanguages">
            <summary>
            Installs languages from the catalog in Sitecore
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogTemplateGenerator.ProcessDefinition(CommerceServer.Core.Catalog.CatalogDefinitionsDataSet.CatalogDefinition,Sitecore.Collections.ItemCollection,Sitecore.Data.Templates.TemplateCollection)">
            <summary>
            Generates the template for a catalog definition.
            </summary>
            <param name="definition">The catalog definition.</param>
            <param name="fieldRules">The field rules defined for the property types.</param>
            <param name="templateCollection">The collection of generated templates.</param>
            <returns>The generated template.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogTemplateGenerator.BuildInventoryCatalogTemplates(Sitecore.Collections.ItemCollection)">
            <summary>
            Builds the inventory catalog templates.
            </summary>
            <param name="fieldRules">The field rules defined to validate the template fields.</param>
            <returns>Sitecore TemplateCollection of Commerce Server Inventory based templates.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogTemplateGenerator.UpdateInventoryTemplate(Sitecore.Data.ID,CommerceServer.Core.Catalog.CatalogPropertiesDataSet,Sitecore.Collections.ItemCollection)">
            <summary>
            Updates an existing inventory template to match the current metadata definition.
            </summary>
            <param name="templateId">The ID of the template to update.</param>
            <param name="metadata">The inventory item metadata.</param>
            <param name="fieldRules">The field validation rules.</param>
            <returns>The template that was updated.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogTemplateGenerator.GetCategoryIcon">
            <summary>
            Gets the category icon.
            </summary>
            <returns>The category icon file name.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogTemplateGenerator.GetProductIcon">
            <summary>
            Gets the product icon.
            </summary>
            <returns>The product icon file name.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogTemplateGenerator.GetProductVariantIcon">
            <summary>
            Gets the product variant icon.
            </summary>
            <returns>The variant icon filename.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogTemplateGenerator.BuildFieldRules">
            <summary>
            Builds field validators for property definitions in the Commerce catalog system.
            </summary>
            <returns>A Sitecore <see cref="T:Sitecore.Collections.ItemCollection"/> of Field Validator items based on property definitions in the Commerce catalog system.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogTemplateGenerator.ShouldGenerateFieldForProperty(System.Guid,CommerceServer.Core.Catalog.CatalogPropertiesDataSet.CatalogProperty)">
            <summary>
            Determines if a Sitecore template field should be generated for the the specified catalog property.
            </summary>
            <param name="templateId">The ID of the template those fields are being generated.</param>
            <param name="propertyDefinition">The catalog system property definition.</param>
            <returns>True if a Sitecore template field should be generated for the specified catalogo property, otherwise false.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogTemplateGenerator.StatusMessage(System.String)">
            <summary>
            Updates status message for the current job.
            </summary>
            <param name="key">The status message key.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogTemplateGenerator.StatusMessage(System.String,System.Object[])">
            <summary>
            Updates status message for the current job.
            </summary>
            <param name="key">The status message key.</param>
            <param name="parameters">the parameters</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogTemplateGenerator.RebuildBuiltInFieldDisplayPropertiesWorker">
            <summary>
            Rebuild the catalog custom properties
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogTemplateGenerator.RebuildBuiltInFieldValidatorsWorker(Sitecore.Collections.ItemCollection)">
            <summary>
            Rebuild the catalog custom properties
            </summary>
            <param name="fieldRules">The field validation rules that have been defined for the catalog system.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogTemplateGenerator.AppendBuiltInFieldValidators(Sitecore.Data.ID,Sitecore.Collections.ItemCollection)">
            <summary>
            Appends the catalog custom properties.
            </summary>
            <param name="templateID">The template ID.</param>
            <param name="fieldRules">The field validation rules that have been defined for the catalog system.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogTemplateGenerator.AppendBuiltInFieldDisplayProperties(Sitecore.Data.ID)">
            <summary>
            Appends the catalog custom properties.
            </summary>
            <param name="templateID">The template ID.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogTemplateGenerator.RemoveUnmappedProperties(Sitecore.Data.ID,CommerceServer.Core.Catalog.CatalogPropertiesDataSet)">
            <summary>
            Removes field in the Commerce section that do not map to a metadata definition from the specified template
            </summary>
            <param name="templateId">The ID of the template whose unmapped fields should be removed.</param>
            <param name="metadata">The catalog item metadata.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogTemplateGenerator.AppendCustomProperties(Sitecore.Data.ID,Sitecore.Collections.ItemCollection,CommerceServer.Core.Catalog.CatalogPropertiesDataSet)">
            <summary>
            Appends the catalog / inventoory custom properties to a template.
            </summary>
            <param name="templateId">The template ID.</param>
            <param name="fieldRules">The field validation rules that have been defined for the catalog system.</param>
            <param name="metadata">The catalog item metadata.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.ToCommercePropertyValue">
            <summary>
            Converts a Commerce Server property to the appropiate native data type.  
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.ToCommercePropertyValue.Convert(System.String,System.String)">
            <summary>
            Converts the specified property to the correct object.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <param name="propertyValue">The property value.</param>
            <returns>Object in correct type for given Commerce Server property.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogExternalIdCache">
            <summary>
            Helper class for adding IDs to Sitecore for Commerce Server items.  
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogExternalIdCache.ClearCache">
            <summary>
            Clears the catalog external ID cache.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogExternalIdCache.RemoveFromCache(System.Guid)">
            <summary>
            Removes an external ID from the cache.
            </summary>
            <param name="externalId">The external ID to remove.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogExternalIdCache.AddToCache(CommerceServer.Core.Catalog.ExternalIdInformation)">
            <summary>
            Adds new external ID information to the cache.
            </summary>
            <param name="externalInformation">The external ID information to add.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogExternalIdCache.IsCatalogItemExternalId(System.Guid)">
            <summary>
            Checks if a external ID represents an item in the Catalog system.
            </summary>
            <param name="externalId">The external ID.</param>
            <returns>True if the external ID represents an item in the Catalog system, otherwise false.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogExternalIdCache.GetCatalogInformation(System.String)">
            <summary>
            Gets external ID information about a catalog in Commerce Server
            </summary>
            <param name="catalogName">The catalog name.</param>
            <returns>
            external ID information about a catlaog in Commerce Server, or null if catalog was found.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogExternalIdCache.GetExternalIdInformation(System.Guid)">
            <summary>
            Gets external ID information about an item in Commerce Server
            </summary>
            <param name="externalId">The external id.</param>
            <returns>
            external ID information about an item in Commerce Server, or null if no item was found.
            </returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogInformation">
            <summary>
            Represents commonly needed information about catalogs in the commerce system.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogInformation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogInformation"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogInformation.#ctor(CommerceServer.Core.Catalog.ProductCatalog,CommerceServer.Core.Catalog.ExternalIdInformation)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogInformation"/> class.
            </summary>
            <param name="catalog">The product catlaog.</param>
            <param name="externalInfo">The item external information.</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogInformation.ExternalInformation">
            <summary>
            Gets or sets the external ID information associated with the cataog.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogInformation.IsVirtualCatalog">
            <summary>
            Gets or sets a value indicating whether the catalog is a virtual catalog.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogInformation.CatalogName">
            <summary>
            Gets or sets the name of the catalog.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogInformation.Languages">
            <summary>
            Gets the languages associated with the catalog.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogInformation.SitecoreLanguages">
            <summary>
            Gets the Sitecore languages associated with the catalog.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogTypeOverride">
            <summary>
            Catalog type override class
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogTypeOverride.GetTypeOverride(System.String,CommerceServer.Core.Catalog.CatalogDataType)">
            <summary>
            Gets a type override for a catalog property
            </summary>
            <param name="propertyName">The property.</param>
            <param name="originalType">the non overridden type</param>
            <returns>The override type or the original if no override occurred</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.DefaultExternalSettingsResolver">
            <summary>
            Represents the default catalog external settings resolver.  The default is to return the external settings from the given catalog item.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.DefaultExternalSettingsResolver.GetCatalogItem(CommerceServer.Core.Catalog.Variant,CommerceServer.Core.Catalog.Product,CommerceServer.Core.Catalog.Product@)">
            <summary>
            Gets the catalog item.
            </summary>
            <param name="current">The base catalog variant.</param>
            <param name="currentProduct">The product of the variant.</param>
            <param name="settingsProduct">The settings product is returned in this parameter.</param>
            <returns>
            A Commerce Variant.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.DefaultExternalSettingsResolver.GetCatalogItem(CommerceServer.Core.Catalog.ProductCatalog)">
            <summary>
            Gets the catalog item.
            </summary>
            <param name="current">The current.</param>
            <returns>
            A Commerce ProductCatalog.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.DefaultExternalSettingsResolver.GetCatalogItem(CommerceServer.Core.Catalog.CatalogItem)">
            <summary>
            Gets the catalog item.
            </summary>
            <param name="current">The current.</param>
            <returns>
            A Commerce CatalogItem.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.DefaultExternalSettingsResolver.TryGetCatalogItem(CommerceServer.Core.Catalog.Variant,CommerceServer.Core.Catalog.Product,CommerceServer.Core.Catalog.Product@)">
            <summary>
            Tries the get catalog item.
            </summary>
            <param name="current">The base catalog variant.</param>
            <param name="currentProduct">The product of the variant.</param>
            <param name="settingsProduct">The settings product is returned in this parameter.</param>
            <returns>
            A Commerce Variant; or null if it was not found.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.DefaultExternalSettingsResolver.TryGetCatalogItem(CommerceServer.Core.Catalog.ProductCatalog)">
            <summary>
            Tries the get catalog item.
            </summary>
            <param name="current">The current.</param>
            <returns>
            A Commerce catalogItem or null if it was not found.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.DefaultExternalSettingsResolver.TryGetCatalogItem(CommerceServer.Core.Catalog.CatalogItem)">
            <summary>
            Tries the get catalog item.
            </summary>
            <param name="current">The current.</param>
            <returns>
            A Commerce CatalogItem or null if it was not found.
            </returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.SeparateCatalogExternalSettingsResolver">
            <summary>
            Represents the external settings provider that saves external settings values in a separate catalog.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Catalog.SeparateCatalogExternalSettingsResolver.CatalogRepository">
            <summary>
            Gets the catalog repository.
            </summary>
            <value>
            The catalog repository.
            </value>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.SeparateCatalogExternalSettingsResolver.GetCatalogItem(CommerceServer.Core.Catalog.Variant,CommerceServer.Core.Catalog.Product,CommerceServer.Core.Catalog.Product@)">
            <summary>
            Gets the catalog item.  Creates it if it was not found.
            </summary>
            <param name="current">The current.</param>
            <param name="currentProduct">The product of the variant.</param>
            <param name="settingsProduct">The settings product is returned in this parameter.</param>
            <returns>
            A Commerce Variant.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.SeparateCatalogExternalSettingsResolver.GetCatalogItem(CommerceServer.Core.Catalog.ProductCatalog)">
            <summary>
            Gets the catalog item.  Creates it if it was not found.
            </summary>
            <param name="current">The current.</param>
            <returns>
            A Commerce ProductCatalog.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.SeparateCatalogExternalSettingsResolver.GetCatalogItem(CommerceServer.Core.Catalog.CatalogItem)">
            <summary>
            Gets the catalog item.  Creates it if it was not found.
            </summary>
            <param name="current">The current.</param>
            <returns>
            A Commerce CatalogItem.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.SeparateCatalogExternalSettingsResolver.TryGetCatalogItem(CommerceServer.Core.Catalog.Variant,CommerceServer.Core.Catalog.Product,CommerceServer.Core.Catalog.Product@)">
            <summary>
            Tries the get catalog item.
            </summary>
            <param name="current">The current.</param>
            <param name="currentProduct">The product of the variant.</param>
            <param name="settingsProduct">The settings product is returned in this parameter.</param>
            <returns>
            A Commerce Variant; or null if it was not found.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.SeparateCatalogExternalSettingsResolver.TryGetCatalogItem(CommerceServer.Core.Catalog.ProductCatalog)">
            <summary>
            Tries the get catalog item.
            </summary>
            <param name="current">The current.</param>
            <returns>
            A Commerce catalogItem or null if it was not found.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.SeparateCatalogExternalSettingsResolver.TryGetCatalogItem(CommerceServer.Core.Catalog.CatalogItem)">
            <summary>
            Tries the get catalog item.
            </summary>
            <param name="current">The current.</param>
            <returns>
            A Commerce CatalogItem or null if it was not found.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.SeparateCatalogExternalSettingsResolver.GetExternalSettingsCatalogName(System.String)">
            <summary>
            Gets the name of the external settings catalog.
            </summary>
            <param name="catalog">The base catalog.</param>
            <returns>The name of the external settings catalog.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.SeparateCatalogExternalSettingsResolver.EnsureExternalSettingsCatalog(System.String,System.Boolean)">
            <summary>
            Ensures the external settings product catalog has been created..
            </summary>
            <param name="baseCatalog">The base catalog.</param>
            <param name="createIfNotExist">if set to <c>true</c> [create if not exist].</param>
            <returns>An instance of the product catalog.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.SeparateCatalogExternalSettingsResolver.TryGetExternalSettingsProductCatalog(System.String)">
            <summary>
            Tries the get the product catalog.
            </summary>
            <param name="catalogName">Name of the catalog.</param>
            <returns>An instance of the product catalog;  Otherwise null.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.SeparateCatalogExternalSettingsResolver.TryGetExternalSettingsCategory(CommerceServer.Core.Catalog.Category)">
            <summary>
            Tries the get the external settings category.
            </summary>
            <param name="current">The current.</param>
            <returns>An instance of the Category; Otherwise null.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.SeparateCatalogExternalSettingsResolver.TryGetExternalSettingsProduct(System.String,System.String)">
            <summary>
            Tries the get the external settings product.
            </summary>
            <param name="baseCatalog">The base catalog.</param>
            <param name="productId">The product identifier.</param>
            <returns>A Product instance; Otherwise null.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.SeparateCatalogExternalSettingsResolver.CreateExternalSettingsCatalog(System.String,System.String)">
            <summary>
            Creates the external settings catalog.
            </summary>
            <param name="baseCatalog">The base catalog.</param>
            <param name="settingsCatalog">The settings catalog.</param>
            <returns>The external settings Catalog.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.SeparateCatalogExternalSettingsResolver.CreateExternalSettingsCategory(CommerceServer.Core.Catalog.Category,CommerceServer.Core.Catalog.ProductCatalog)">
            <summary>
            Creates the external settings category.
            </summary>
            <param name="current">The current.</param>
            <param name="csCatalog">The cs catalog.</param>
            <returns>The external settings Catagory.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.SeparateCatalogExternalSettingsResolver.CreateExternalSettingsProduct(System.String,CommerceServer.Core.Catalog.ProductCatalog)">
            <summary>
            Creates the external settings product.
            </summary>
            <param name="productId">The product identifier.</param>
            <param name="csCatalog">The cs catalog.</param>
            <returns>The external settings Product</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.SeparateCatalogExternalSettingsResolver.CreateExternalSettingsVariant(CommerceServer.Core.Catalog.Variant,CommerceServer.Core.Catalog.ProductCatalog,CommerceServer.Core.Catalog.Product@)">
            <summary>
            Creates the external settings variant.
            </summary>
            <param name="current">The current.</param>
            <param name="settingsCatalog">The settings catalog.</param>
            <param name="settingsProduct">The settings product is returned in this parameter.</param>
            <returns>The external settings Variant.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.SeparateCatalogExternalSettingsResolver.EnsureExternalSettingsCatalogPropertyDefinition(System.String,CommerceServer.Core.Catalog.CatalogDataType,System.Int32,System.Boolean)">
            <summary>
            Ensures the external settings catalog property definition gets created if it does not already exist.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <param name="dataType">Type of the data.</param>
            <param name="length">The length.</param>
            <param name="isCatalogMetadata">if set to <c>true</c> the property is added as Catalog metadata.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.SeparateCatalogExternalSettingsResolver.TryGetCatalogPropertyDefinition(System.String)">
            <summary>
            Tries to get the given catalog property definition.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns>The catalog property definition;  Otherwise null if it does not exist.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.SeparateCatalogExternalSettingsResolver.EnsureProductDefinition(CommerceServer.Core.Catalog.ProductCatalog)">
            <summary>
            Ensures the product definition gets created if it does not exist.
            </summary>
            <param name="csCatalog">The cs catalog.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.SeparateCatalogExternalSettingsResolver.EnsureCategoryDefinition(CommerceServer.Core.Catalog.ProductCatalog)">
            <summary>
            Ensures the category definition gets created if it does not exist.
            </summary>
            <param name="csCatalog">The cs catalog.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.SeparateCatalogExternalSettingsResolver.TryGetCatalogDefinition(System.String)">
            <summary>
            Tries to get the catalog definition.
            </summary>
            <param name="definitionName">Name of the definition.</param>
            <returns>A catalog definition or null if it does not exist.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.SeparateCatalogExternalSettingsResolver.CreateProductDefinition(CommerceServer.Core.Catalog.ProductCatalog)">
            <summary>
            Creates the product definition.
            </summary>
            <param name="csCatalog">The cs catalog.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.SeparateCatalogExternalSettingsResolver.CreateCategoryDefinition(CommerceServer.Core.Catalog.ProductCatalog)">
            <summary>
            Creates the category definition.
            </summary>
            <param name="csCatalog">The cs catalog.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogUtility">
            <summary>
            Utility class for the Commerce catalog system.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogUtility.CategoryPrefix">
            <summary>
            The Category sitecore prefix
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogUtility.ProductPrefix">
            <summary>
            The Product sitecore prefix
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogUtility.VariantPrefix">
            <summary>
            The Variant sitecore prefix
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogUtility.DisplayNameColumn">
            <summary>
            The name of the display name field in Commerce Server
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogUtility.DisplayNamePrefix">
            <summary>
            The seperator between the display name and the culture for multi-languaged display name
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogUtility.GetProductExternalIdFromRepository(System.String,System.String,System.String)">
            <summary>
            Gets the product external identifier from repository.
            </summary>
            <param name="productCatalog">The product catalog.</param>
            <param name="productId">The product identifier.</param>
            <param name="variantId">The variant identifier.</param>
            <returns>The product/variant externalId; Otherwise null.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogUtility.GetSelectedCatalogs(Sitecore.Data.Items.Item)">
            <summary>
            Gets the list of selected catalogs from a catalogs folder item.
            </summary>
            <param name="catalogsFolderItem">The catalogs folder item.</param>
            <returns>The list of selected catalogs.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogUtility.GetCatalogContainingItem(Sitecore.Data.ID)">
            <summary>
            Gets the <see cref="T:CommerceServer.Core.Catalog.ProductCatalog"/> that contains the specified item.
            </summary>
            <param name="itemId">The ID of the Sitecore <see cref="T:Sitecore.Data.Items.Item"/> to inspect.</param>
            <returns>The <see cref="T:CommerceServer.Core.Catalog.ProductCatalog"/> that contains the specified item, or null if the item does not belong to a Commerce catalog.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogUtility.GetVirtualCatalogStatus(Sitecore.Data.ID)">
            <summary>
            Gets the current status of the virtual catalog a catalog item item belongs to.
            </summary>
            <param name="itemId">The ID of the Sitecore <see cref="T:Sitecore.Data.Items.Item"/> to inspect.</param>
            <returns>The current status of the virtual catalog a catalog item item belongs to.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogUtility.RefreshCatalogCache(Sitecore.Data.ID,System.String)">
            <summary>
            Clears the Commerce catalog cache.
            </summary>
            <param name="itemId">The Sitecore ID of the item that needs to be refreshed.</param>
            <param name="databaseName">The name of the Sitecore database that contains the item.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogUtility.GetDisplayName(CommerceServer.Core.Catalog.ProductCatalog,System.String)">
            <summary>
            Gets the display name of a <see cref="T:CommerceServer.Core.Catalog.ProductCatalog"/> in the provided language.
            </summary>
            <param name="catalog">The <see cref="T:CommerceServer.Core.Catalog.ProductCatalog"/>.</param>
            <param name="language">The language.</param>
            <returns>The display name of the catalog in the provided language.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogUtility.GetDisplayName(CommerceServer.Core.Catalog.ProductCatalog,System.String,System.String@)">
            <summary>
            Gets the display name of a <see cref="T:CommerceServer.Core.Catalog.ProductCatalog"/> in the provided language.
            </summary>
            <param name="catalog">The <see cref="T:CommerceServer.Core.Catalog.ProductCatalog"/>.</param>
            <param name="language">The language.</param>
            <param name="displayNameColumn">Recieves the name of the column containing the display name.</param>
            <returns>The display name of the catalog in the provided language.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogUtility.GetDisplayName(CommerceServer.Core.Catalog.CatalogProperty,System.String)">
            <summary>
            Gets the display name of a <see cref="T:CommerceServer.Core.Catalog.CatalogProperty"/> in the provided language.
            </summary>
            <param name="catalogProperty">The <see cref="T:CommerceServer.Core.Catalog.CatalogProperty"/>.</param>
            <param name="language">The language.</param>
            <returns>The display name of the catalog property in the provided language.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogUtility.GetDisplayName(CommerceServer.Core.Catalog.CatalogProperty,System.String,System.String@)">
            <summary>
            Gets the display name of a <see cref="T:CommerceServer.Core.Catalog.CatalogProperty"/> in the provided language.
            </summary>
            <param name="catalogProperty">The <see cref="T:CommerceServer.Core.Catalog.CatalogProperty"/>.</param>
            <param name="language">The language.</param>
            <param name="displayNameColumn">Recieves the name of the column containing the display name.</param>
            <returns>The display name of the catalog property in the provided language.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogUtility.BuildCatalogDisplayNameKey(System.String)">
            <summary>
            Constructs the key name for the language-specific display name of a catalog item.
            </summary>
            <param name="culture">The display name culture.</param>
            <returns>The key name for the language-specific display name of a catalog item.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogUtility.RefreshExternalIdCache(System.Boolean)">
            <summary>
            Clears the catalog external ID cache.
            </summary>
            <param name="raiseEvent">A value indicating whether a Sitecore event should be raised for this action.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogUtility.RemoveFromExternalIdCache(System.Guid,System.Boolean)">
            <summary>
            Removes an external ID from the cache.
            </summary>
            <param name="externalId">The external ID to remove.</param>
            <param name="raiseEvent">A value indicating whether a Sitecore event should be raised for this action.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogUtility.AddToExternalIdCache(System.Guid,System.Boolean)">
            <summary>
            Adds new external ID information to the cache.
            </summary>
            <param name="externalId">The external ID to add.</param>
            <param name="raiseEvent">A value indicating whether a Sitecore event should be raised for this action.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogUtility.IsCatalogItemExternalId(System.Guid)">
            <summary>
            Checks if a external ID represents an item in the Catalog system.
            </summary>
            <param name="externalId">The external ID.</param>
            <returns>True if the external ID represents an item in the Catalog system, otherwise false.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogUtility.GetExternalIdInformation(System.Guid)">
            <summary>
            Gets external ID information about an item in Commerce Server
            </summary>
            <param name="externalId">The external id.</param>
            <returns>
            external ID information about an item in Commerce Server, or null if no item was found.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogUtility.GetCatalogInformation(System.String)">
            <summary>
            Gets external ID information about a catalog in Commerce Server
            </summary>
            <param name="catalogName">The catalog name.</param>
            <returns>
            external ID information about a catlaog in Commerce Server, or null if catalog was found.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogUtility.RefreshTemplateHierarchyCache(System.Boolean)">
            <summary>
            Clears the internal cache of item hierarchies.
            </summary>
            <param name="raiseEvent">A value indicating whether a Sitecore event should be raised for this action.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogUtility.IsItemDerivedFromCommerceTemplate(Sitecore.Data.Items.Item,Sitecore.Data.ID)">
            <summary>
            Checks if an item is derived from the provided Commerce template.
            </summary>
            <param name="item">The item to examine.</param>
            <param name="commerceTemplateId">The ID of a Commerce template.</param>
            <returns>True if the item derives from the provided Commerce template ID, otherwise false.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogUtility.IsTemplateDerivedFromCommerceTemplate(Sitecore.Data.ID,Sitecore.Data.ID)">
            <summary>
            Checks if a template is derived from the provided Commerce template.
            </summary>
            <param name="itemTemplateId">The ID of the template to examine.</param>
            <param name="commerceTemplateId">The ID of a Commerce template.</param>
            <returns>True if the template derives from the provided Commerce template ID, otherwise false.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogUtility.IsTemplateDerivedFromCommerceTemplate(Sitecore.Data.ID,System.String,Sitecore.Data.ID)">
            <summary>
            Checks if a template is derived from the provided Commerce template.
            </summary>
            <param name="itemTemplateId">The ID of the template to examine.</param>
            <param name="databaseName">The name of the Sitecore database.</param>
            <param name="commerceTemplateId">The ID of a Commerce template.</param>
            <returns>True if the template derives from the provided Commerce template ID, otherwise false.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogUtility.IsKnownCommerceTemplate(Sitecore.Data.ID,Sitecore.Data.Database)">
            <summary>
            Determines whether the given template id is a Commerce defined one.
            </summary>
            <param name="templateId">The template id.</param>
            <param name="database">The database.</param>
            <returns>
              <c>true</c> if the given template id is a Commerce defined template; otherwise, <c>false</c> is returned.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogUtility.IsInVirtualCatalog(Sitecore.Data.Items.Item)">
            <summary>
            Checks to see if an item is in a virtual catalog
            </summary>
            <param name="item">The item to verify</param>
            <returns>True if it is in a virtual catalog and false otherwise</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogUtility.IsVirtualItem(Sitecore.Data.Items.Item)">
            <summary>
            Checks to see if an item is existing in a virtual catalog via a rule and not an item that has been created in a virtual catalog
            </summary>
            <param name="item">The item to verify</param>
            <returns>True if it is a virtual item and false otherwise</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogUtility.IsVirtualCatalogMaterialized(Sitecore.Data.Items.Item)">
            <summary>
            Checks to see if a virtual catalog is materialized
            </summary>
            <param name="item">A item in the virtual catalog</param>
            <returns>True if the virtual catalog is materialized and false otherwise</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogUtility.IsVirtualItem(System.String,System.String)">
            <summary>
            Checks to see if an item is existing in a virtual catalog via a rule and not an item that has been created in a virtual catalog
            </summary>
            <param name="catalogName">Name of the catalog.</param>
            <param name="id">The id of the product, category, or variant.</param>
            <returns>
            True if it is a virtual item and false otherwise
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogUtility.GetBaseCatalogForVirtualItem(System.String)">
            <summary>
            Gets the base catalog name of the virtual item
            </summary>
            <param name="id">The id of the product, category, or variant.</param>
            <returns>
            Returns the base catalog name of the virtual item
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogUtility.GetBaseIdForVirtualItem(System.String)">
            <summary>
            Gets the base id of the virtual item
            </summary>
            <param name="id">The id of the product, category, or variant.</param>
            <returns>
            Returns the base id of the virtual item
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogUtility.GetBaseTemplates(Sitecore.Data.ID,System.String)">
            <summary>
            Gets the base item template for the specified template and database.
            </summary>
            <param name="templateId">The ID of the template to examine.</param>
            <param name="databaseName">The name of the Sitecore database.</param>
            <returns>A list of base template ids for the specified template.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogTemplateHierarchyCache">
            <summary>
            Cache used to store the hierarchy information about Sitecore templates
            implemented by or derived from Commerce Server.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogTemplateHierarchyCache.ClearCache">
            <summary>
            Clears the internal cache of item hierarchies.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogTemplateHierarchyCache.IsItemDerivedFromCommerceTemplate(Sitecore.Data.Items.Item,Sitecore.Data.ID)">
            <summary>
            Checks if an item is derived from the provided Commerce template.
            </summary>
            <param name="item">The item to examine.</param>
            <param name="commerceTemplateId">The ID of a Commerce template.</param>
            <returns>True if the item derives from the provided Commerce template ID, otherwise false.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogTemplateHierarchyCache.IsTemplateDerivedFromCommerceTemplate(Sitecore.Data.ID,Sitecore.Data.ID)">
            <summary>
            Checks if a template is derived from the provided Commerce template.
            </summary>
            <param name="itemTemplateId">The ID of the template to examine.</param>
            <param name="commerceTemplateId">The ID of a Commerce template.</param>
            <returns>True if the template derives from the provided Commerce template ID, otherwise false.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogTemplateHierarchyCache.IsTemplateDerivedFromCommerceTemplate(Sitecore.Data.ID,System.String,Sitecore.Data.ID)">
            <summary>
            Checks if a template is derived from the provided Commerce template.
            </summary>
            <param name="itemTemplateId">The ID of the template to examine.</param>
            <param name="databaseName">The name of the Sitecore database.</param>
            <param name="commerceTemplateId">The ID of a Commerce template.</param>
            <returns>True if the template derives from the provided Commerce template ID, otherwise false.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Catalog.CatalogTemplateHierarchyCache.GetBaseTemplates(Sitecore.Data.ID,System.String)">
            <summary>
            Gets the base item template for the specified template and database.
            </summary>
            <param name="templateId">The ID of the template to examine.</param>
            <param name="databaseName">The name of the Sitecore database.</param>
            <returns>A list of base template ids for the specified template.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.ImportProfiles">
            <summary>
            Ribbon command to handle the refresh of the commerce user profile cache
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.ImportProfiles.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.ImportProfiles" /> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.ImportProfiles.Execute(Sitecore.Shell.Framework.Commands.CommandContext)">
            <summary>
            Executes the command in the specified context.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.ImportProfiles.QueryState(Sitecore.Shell.Framework.Commands.CommandContext)">
            <summary>
            Query the state of the command
            </summary>
            <param name="context">the context</param>
            <returns>the state of the command</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.ImportProfiles.Run(Sitecore.Web.UI.Sheer.ClientPipelineArgs)">
            <summary>
            Run the command
            </summary>
            <param name="args">The args</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.ImportProfiles.GetSetting(System.String,System.String)">
            <summary>
            Get a specific setting from the profile import settings
            </summary>
            <param name="settingName">name of the setting to retreive</param>
            <param name="defaultValue">default value to pass back if not found</param>
            <returns>the settings value or the default value not found or empty</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.ImportProfiles.StartImportProcess(System.Object[])">
            <summary>
            Process the import command as a job
            </summary>
            <param name="parameters">the parameters</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.RefreshProfileCache">
            <summary>
            Ribbon command to handle the refresh of the commerce user profile cache
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.RefreshProfileCache.Execute(Sitecore.Shell.Framework.Commands.CommandContext)">
            <summary>
            Executes the command in the specified context.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.CommerceProfileDefinitionRepository">
            <summary>
            Used to access profile definitions
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.CommerceProfileDefinitionRepository.GetDefinitions">
            <summary>
            Gets all of the profile definitions stored in Commerce Server
            </summary>
            <returns>A list of the available definitions</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.CommerceProfileDefinitionRepository.GetDefinitionGroups(System.String)">
            <summary>
            Gets the definition groups.
            </summary>
            <param name="name">The name.</param>
            <returns>A list of CommerceProfileDefinitionGroup objects.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.CommerceProfileDefinitionRepository.GetDefinition(System.String)">
            <summary>
            Get a specific definition from the current site
            </summary>
            <param name="name">Profile definition name to retrieve</param>
            <returns>The profile definition if found, otherwise null</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.CommerceProfileDefinitionRepository.BuildOutBasicDefinition(Sitecore.Commerce.Connect.CommerceServer.Profiles.Models.CommerceProfileDefinition,System.Xml.Linq.XElement)">
            <summary>
            Creates the basic definition for the profile
            </summary>
            <param name="basicDefinition">The basic definition to populate</param>
            <param name="fullXmlDefinition">The xml element to gather the profile information from</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.CommerceProfileDefinitionRepository.GetConnectionString">
            <summary>
            Gets the connection string for the commerce resource collection
            </summary>
            <returns>The connection string</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.CommerceProfileDefinitionRepository.GetProfileDefinitionNames(CommerceServer.Core.Profiles.IBusinessDataAdmin)">
            <summary>
            Gets all of the profile definition names
            </summary>
            <param name="bizDataAdmin">The admin object to grab the profile defs from</param>
            <returns>The list of profile definitions</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.CommerceProfileDefinitionRepository.GetProfileDefinition(CommerceServer.Core.Profiles.IBusinessDataAdmin,System.String)">
            <summary>
            Gets a profile definition from a name
            </summary>
            <param name="bizDataAdmin">The admin object to grab the profile defs from</param>
            <param name="name">The name of the definition to reteive</param>
            <returns>The profile definition or null if not found</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.PopulateContactBasicFacetsProcessor">
            <summary>
            Updates the xDB contact with some basic required information
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.PopulateContactBasicFacetsProcessor.LeaseOwnerPrefix">
            <summary>
            The prefix used for the lease owner identifier
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.PopulateContactBasicFacetsProcessor.entityFactory">
            <summary>
            The entity factory.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.PopulateContactBasicFacetsProcessor.#ctor(Sitecore.Commerce.Data.Customers.IUserRepository,Sitecore.Commerce.Entities.IEntityFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.PopulateContactBasicFacetsProcessor" /> class.
            </summary>
            <param name="userRepository">The user repository.</param>
            <param name="entityFactory">The entity factory.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.PopulateContactBasicFacetsProcessor.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Called when the pipeline executes
            </summary>
            <param name="args">The args used to drive the creation of the user</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.PopulateContactBasicFacetsProcessor.UpdateFacets(Sitecore.Analytics.Tracking.Contact,Sitecore.Commerce.Services.Customers.CreateUserResult)">
            <summary>
            Adds some basic facets to the Contact
            </summary>
            <param name="contact">The Contact to add facets to</param>
            <param name="createUserResult">The result containing details about the created user</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.PopulateContactBasicFacetsProcessor.GetUserProfile(System.String)">
            <summary>
            Gets the user profile from the external system.
            </summary>
            <param name="userName">The username of the profile to retrieve.</param>
            <returns>The profile of the user</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.PopulateContactBasicFacetsProcessor.GetUserIdentifier(Sitecore.Commerce.Services.Customers.CreateUserResult)">
            <summary>
            Gets the string to identify the user with
            </summary>
            <param name="result">The result that contains all info about the user</param>
            <returns>The string to identify the user with</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetProfilesFromFieldArgs">
            <summary>
            Represents the args required for the the profile pipeline
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetProfilesFromFieldArgs._input">
            <summary>
            Used to hold the input paramters for the pipeline
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetProfilesFromFieldArgs._output">
            <summary>
            Used to hold the output paramters for the pipeline
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetProfilesFromFieldArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetProfilesFromFieldArgs" /> class
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetProfilesFromFieldArgs.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetProfilesFromFieldArgs" /> class
            </summary>
            <param name="info">Info for the context</param>
            <param name="context">The streaming context</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetProfilesFromFieldArgs.InputParameters">
            <summary>
            Gets the input params for the pipeline
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetProfilesFromFieldArgs.OutputParameters">
            <summary>
            Gets the output from the pipeline
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetProfilesFromFieldArgs.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Gets the object data.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetProfilesFromFieldArgs.Input">
            <summary>
            Represents the input required by the pipeline
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetProfilesFromFieldArgs.Input.Profile">
            <summary>
            Gets or sets the profile
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetProfilesFromFieldArgs.Input.Field">
            <summary>
            Gets or sets the field
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetProfilesFromFieldArgs.Input.ProfileType">
            <summary>
            Gets or sets the type to retreive
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetProfilesFromFieldArgs.Input.Options">
            <summary>
            Gets or sets the options
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetProfilesFromFieldArgs.Output">
            <summary>
            Represents the output from the pipeline
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetProfilesFromFieldArgs.Output.Profiles">
            <summary>
            Gets or sets all of the CommerceServer profiles
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetProfilesFromFieldArgs.Output.TotalRecords">
            <summary>
            Gets or sets the total record count
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetUserProfilesArgs">
            <summary>
            The set of args required for getting a profile
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetUserProfilesArgs._input">
            <summary>
            Used to hold the input paramters for the pipeline
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetUserProfilesArgs._output">
            <summary>
            Used to hold the output paramters for the pipeline
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetUserProfilesArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetUserProfilesArgs" /> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetUserProfilesArgs.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetUserProfilesArgs" /> class.
            </summary>
            <param name="info">Info for the context</param>
            <param name="context">The streaming context</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetUserProfilesArgs.InputParameters">
            <summary>
            Gets the input params for the pipeline
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetUserProfilesArgs.OutputParameters">
            <summary>
            Gets the output from the pipeline
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetUserProfilesArgs.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Gets the object data.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetUserProfilesArgs.Input">
            <summary>
            Represents the input to the pipeline
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetUserProfilesArgs.Input.AuthenticationOption">
            <summary>
            Gets or sets the authentication option
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetUserProfilesArgs.Input.UserNameToMatch">
            <summary>
            Gets or sets the user name
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetUserProfilesArgs.Input.UserInactiveSinceDate">
            <summary>
            Gets or sets the inactive since date
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetUserProfilesArgs.Input.PageIndex">
            <summary>
            Gets or sets the page index
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetUserProfilesArgs.Input.PageSize">
            <summary>
            Gets or sets the page size
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetUserProfilesArgs.Output">
            <summary>
            Represents the output from the pipeline
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetUserProfilesArgs.Output.Profiles">
            <summary>
            Gets or sets the CommerceServer profile
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetUserProfilesArgs.Output.TotalRecords">
            <summary>
            Gets or sets the total record count
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.DeleteInactiveUserProfilesArgs">
            <summary>
            Represents the args needed for deleting a profile
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.DeleteInactiveUserProfilesArgs._input">
            <summary>
            Used to hold the input paramters for the pipeline
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.DeleteInactiveUserProfilesArgs._output">
            <summary>
            Used to hold the output paramters for the pipeline
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.DeleteInactiveUserProfilesArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.DeleteInactiveUserProfilesArgs" /> class
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.DeleteInactiveUserProfilesArgs.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.DeleteInactiveUserProfilesArgs" /> class
            </summary>
            <param name="info">Info for the context</param>
            <param name="context">The streaming context</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.DeleteInactiveUserProfilesArgs.InputParameters">
            <summary>
            Gets the input to the pipeline
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.DeleteInactiveUserProfilesArgs.OutputParameters">
            <summary>
            Gets the output from the pipeline
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.DeleteInactiveUserProfilesArgs.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Gets the object data.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.DeleteInactiveUserProfilesArgs.Input">
            <summary>
            Represents the input to the pipeline
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.DeleteInactiveUserProfilesArgs.Input.InactiveDate">
            <summary>
            Gets or sets the date in which to delete user profiles from
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.DeleteInactiveUserProfilesArgs.Output">
            <summary>
            Represents the output from the pipeline
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.DeleteInactiveUserProfilesArgs.Output.ProfilesDeletedCount">
            <summary>
            Gets or sets the count of the number of profiles deleted
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetProfilesFromFieldProcessor">
            <summary>
            Used to gather a collection of profiles
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetProfilesFromFieldProcessor.Process(Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetProfilesFromFieldArgs)">
            <summary>
            Performs the search for multiple profiles
            </summary>
            <param name="args">The args required to search for the profiles</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetUserProfilesProcessor">
            <summary>
            Used to gather a collection of profiles
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetUserProfilesProcessor.Process(Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetUserProfilesArgs)">
            <summary>
            Performs the search for multiple profiles
            </summary>
            <param name="args">The args required to search for the profiles</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.DeleteInactiveUserProfilesProcessor">
            <summary>
            Used to delete a profile
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.DeleteInactiveUserProfilesProcessor.Process(Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.DeleteInactiveUserProfilesArgs)">
            <summary>
            Performs a delete of inactive user profiles
            </summary>
            <param name="args">The args required to find the profiles and delete them</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetProfileDefinitionArgs">
            <summary>
            Represents the args required for the the profile pipeline
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetProfileDefinitionArgs._input">
            <summary>
            Used to hold the input paramters for the pipeline
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetProfileDefinitionArgs._output">
            <summary>
            Used to hold the output paramters for the pipeline
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetProfileDefinitionArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetProfileDefinitionArgs" /> class
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetProfileDefinitionArgs.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetProfileDefinitionArgs" /> class
            </summary>
            <param name="info">Info for the context</param>
            <param name="context">The streaming context</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetProfileDefinitionArgs.InputParameters">
            <summary>
            Gets the input params for the pipeline
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetProfileDefinitionArgs.OutputParameters">
            <summary>
            Gets the output from the pipeline
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetProfileDefinitionArgs.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Gets the object data.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetProfileDefinitionArgs.Input">
            <summary>
            Represents the input required by the pipeline
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetProfileDefinitionArgs.Input.Name">
            <summary>
            Gets or sets the name of the profile definition
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetProfileDefinitionArgs.Output">
            <summary>
            Represents the output from the pipeline
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetProfileDefinitionArgs.Output.CommerceProfileDefinition">
            <summary>
            Gets or sets the CommerceServer profile definition
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetProfileDefinitionsArgs">
            <summary>
            Represents the args required for the the profile pipeline
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetProfileDefinitionsArgs._input">
            <summary>
            Used to hold the input paramters for the pipeline
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetProfileDefinitionsArgs._output">
            <summary>
            Used to hold the output paramters for the pipeline
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetProfileDefinitionsArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetProfileDefinitionsArgs" /> class
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetProfileDefinitionsArgs.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetProfileDefinitionsArgs" /> class
            </summary>
            <param name="info">Info for the context</param>
            <param name="context">The streaming context</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetProfileDefinitionsArgs.InputParameters">
            <summary>
            Gets the input params for the pipeline
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetProfileDefinitionsArgs.OutputParameters">
            <summary>
            Gets the output from the pipeline
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetProfileDefinitionsArgs.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Gets the object data.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetProfileDefinitionsArgs.Input">
            <summary>
            Represents the input required by the pipeline
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetProfileDefinitionsArgs.Output">
            <summary>
            Represents the output from the pipeline
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetProfileDefinitionsArgs.Output.CommerceProfileDefinitions">
            <summary>
            Gets or sets all of the CommerceServer profile definitions
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetProfilesArgs">
            <summary>
            Represents the args required for the the profile pipeline
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetProfilesArgs._input">
            <summary>
            Used to hold the input paramters for the pipeline
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetProfilesArgs._output">
            <summary>
            Used to hold the output paramters for the pipeline
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetProfilesArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetProfilesArgs" /> class
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetProfilesArgs.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetProfilesArgs" /> class
            </summary>
            <param name="info">Info for the context</param>
            <param name="context">The streaming context</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetProfilesArgs.InputParameters">
            <summary>
            Gets the input params for the pipeline
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetProfilesArgs.OutputParameters">
            <summary>
            Gets the output from the pipeline
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetProfilesArgs.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Gets the object data.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetProfilesArgs.Input">
            <summary>
            Represents the input required by the pipeline
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetProfilesArgs.Input.Name">
            <summary>
            Gets or sets the name of the profile type
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetProfilesArgs.Input.Field">
            <summary>
            Gets or sets the field
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetProfilesArgs.Input.Ids">
            <summary>
            Gets or sets the ids to search for
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetProfilesArgs.Output">
            <summary>
            Represents the output from the pipeline
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetProfilesArgs.Output.CommerceProfiles">
            <summary>
            Gets or sets all of the CommerceServer profiles
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.DeleteProfileArgs">
            <summary>
            Represents the args needed for deleting a profile
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.DeleteProfileArgs._input">
            <summary>
            Used to hold the input paramters for the pipeline
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.DeleteProfileArgs._output">
            <summary>
            Used to hold the output paramters for the pipeline
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.DeleteProfileArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.DeleteProfileArgs" /> class
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.DeleteProfileArgs.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.DeleteProfileArgs" /> class
            </summary>
            <param name="info">Info for the context</param>
            <param name="context">The streaming context</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.DeleteProfileArgs.InputParameters">
            <summary>
            Gets the input to the pipeline
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.DeleteProfileArgs.OutputParameters">
            <summary>
            Gets the output from the pipeline
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.DeleteProfileArgs.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Gets the object data.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.DeleteProfileArgs.Input">
            <summary>
            Represents the input to the pipeline
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.DeleteProfileArgs.Input.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.DeleteProfileArgs.Input.Id">
            <summary>
            Gets or sets the id
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.DeleteProfileArgs.Input.Field">
            <summary>
            Gets or sets the field
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.DeleteProfileArgs.Output">
            <summary>
            Represents the output from the pipeline
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.DeleteProfileArgs.Output.Success">
            <summary>
            Gets or sets a value indicating whether the action was successful or not
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.CreateProfileArgs">
            <summary>
            Used to represent the args for the create profile pipeline
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.CreateProfileArgs._input">
            <summary>
            Used to hold the input paramters for the pipeline
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.CreateProfileArgs._output">
            <summary>
            Used to hold the output paramters for the pipeline
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.CreateProfileArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.CreateProfileArgs" /> class
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.CreateProfileArgs.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.CreateProfileArgs" /> class
            </summary>
            <param name="info">Info for the context</param>
            <param name="context">The streaming context</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.CreateProfileArgs.InputParameters">
            <summary>
            Gets the input params for the pipeline
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.CreateProfileArgs.OutputParameters">
            <summary>
            Gets the output from the pipeline
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.CreateProfileArgs.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Gets the object data.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.CreateProfileArgs.Input">
            <summary>
            Represents the input required by the pipeline
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.CreateProfileArgs.Input.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.CreateProfileArgs.Input.Id">
            <summary>
            Gets or sets the id
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.CreateProfileArgs.Output">
            <summary>
            Represents the output from the pipeline
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.CreateProfileArgs.Output.CommerceProfile">
            <summary>
            Gets or sets the CommerceServer profile
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetProfileArgs">
            <summary>
            The set of args required for getting a profile
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetProfileArgs._input">
            <summary>
            Used to hold the input paramters for the pipeline
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetProfileArgs._output">
            <summary>
            Used to hold the output paramters for the pipeline
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetProfileArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetProfileArgs" /> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetProfileArgs.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetProfileArgs" /> class.
            </summary>
            <param name="info">Info for the context</param>
            <param name="context">The streaming context</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetProfileArgs.InputParameters">
            <summary>
            Gets the input params for the pipeline
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetProfileArgs.OutputParameters">
            <summary>
            Gets the output from the pipeline
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetProfileArgs.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Gets the object data.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetProfileArgs.Input">
            <summary>
            Represents the input to the pipeline
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetProfileArgs.Input.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetProfileArgs.Input.Id">
            <summary>
            Gets or sets the id
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetProfileArgs.Input.Field">
            <summary>
            Gets or sets the field
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetProfileArgs.Output">
            <summary>
            Represents the output from the pipeline
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetProfileArgs.Output.CommerceProfile">
            <summary>
            Gets or sets the CommerceServer profile
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.ProfileTranslatorArgs">
            <summary>
            The args for translating a profile to a model
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.ProfileTranslatorArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.ProfileTranslatorArgs" /> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.ProfileTranslatorArgs.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.ProfileTranslatorArgs" /> class.
            </summary>
            <param name="info">Info for the context</param>
            <param name="context">The streaming context</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetProfileDefinitionProcessor">
            <summary>
            Used to get a specific profile definition
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetProfileDefinitionProcessor.Process(Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetProfileDefinitionArgs)">
            <summary>
            Performs the search for a profile definition with a given name
            </summary>
            <param name="args">The args required to search for the profile definition</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetProfileDefinitionsProcessor">
            <summary>
            Used to gather a collection of profile definitions
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetProfileDefinitionsProcessor.Process(Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetProfileDefinitionsArgs)">
            <summary>
            Performs the search for all of the profile definitions
            </summary>
            <param name="args">The args required to search for the profiles</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetProfilesProcessor">
            <summary>
            Used to gather a collection of profiles
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetProfilesProcessor.Process(Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetProfilesArgs)">
            <summary>
            Performs the search for multiple profiles
            </summary>
            <param name="args">The args required to search for the profiles</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.DeleteProfileProcessor">
            <summary>
            Used to delete a profile
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.DeleteProfileProcessor.Process(Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.DeleteProfileArgs)">
            <summary>
            Performs a delete of a profile
            </summary>
            <param name="args">The args required to find a profile and delete it</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.CreateProfileProcessor">
            <summary>
            Used to create a profile
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.CreateProfileProcessor.Process(Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.CreateProfileArgs)">
            <summary>
            Performs the creation of a profile
            </summary>
            <param name="args">The args required to create a profile</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.ProfileToCommerceModel">
            <summary>
            A processor used to translate a profile to a commerce model
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.ProfileToCommerceModel.Process(Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.ProfileTranslatorArgs)">
            <summary>
            Converts a profile to a commerce model
            </summary>
            <param name="args">The args required for the translation</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.ProfileToCommerceModel.AddProperty(Sitecore.Commerce.Connect.CommerceServer.Models.CommerceModel,CommerceServer.Core.Runtime.Profiles.ProfileProperty,System.String)">
            <summary>
            Adds a property to the model
            </summary>
            <param name="destination">Model to add property to</param>
            <param name="property">Property to Add</param>
            <param name="groupName">Name of group if the property has a group</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetProfileProcessor">
            <summary>
            Used to get a Commerce Server profile
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetProfileProcessor.Process(Sitecore.Commerce.Connect.CommerceServer.Profiles.Pipelines.GetProfileArgs)">
            <summary>
            Gets a profile with the specified args
            </summary>
            <param name="args">The args to find the profile</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.Events.ProfileCacheRefreshEventArgs">
            <summary>
            Event args for <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.Events.CommerceProfileCacheRefreshEvent"/>
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.Events.ProfileCacheRefreshEventArgs.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.Events.ProfileCacheRefreshEventArgs" /> class.
            </summary>
            <param name="userName">userName(s) to refresh - names need to be seperated by a |</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Events.ProfileCacheRefreshEventArgs.UserName">
            <summary>
            Gets or sets the user name(s)
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.Events.CommerceUserEventHandler">
            <summary>
            Handles Sitecore User Events
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.Events.CommerceUserEventHandler.OnUserDeleted(System.Object,System.EventArgs)">
            <summary>
            Called when a user is deleted from Sitecore
            </summary>
            <param name="sender">The senders information</param>
            <param name="args">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.Events.CommerceUserEventHandler.OnUserUpdated(System.Object,System.EventArgs)">
            <summary>
            Called when a user is updated within Sitecore
            </summary>
            <param name="sender">The senders information</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.Events.CommerceProfileCacheRefreshEvent">
            <summary>
            Custom Profile Cache refresh event class
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.Events.CommerceProfileCacheRefreshEvent.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.Events.CommerceProfileCacheRefreshEvent" /> class.
            </summary>
            <param name="userName">userName(s) to refresh - names need to be seperated by a |</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Events.CommerceProfileCacheRefreshEvent.UserName">
            <summary>
            Gets or sets the user name(s)
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.Events.CommerceProfileCacheRefreshEventHandler">
            <summary>
            Event handler for <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.Events.CommerceProfileCacheRefreshEvent"/>
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.Events.CommerceProfileCacheRefreshEventHandler.Run(Sitecore.Commerce.Connect.CommerceServer.Profiles.Events.CommerceProfileCacheRefreshEvent)">
            <summary>  
            Run method used to raise the local event  
            </summary>  
            <param name="event">Event info</param>  
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.Events.CommerceProfileCacheRefreshEventHandler.OnProfileCacheRefresh(System.Object,System.EventArgs)">
            <summary>
            Called when the Profile Cache refresh event is triggered
            </summary>
            <param name="sender">The senders information</param>
            <param name="args">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.Events.CommerceProfileCacheRefreshHook">
            <summary>
            Hook for  <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.Events.CommerceProfileCacheRefreshEvent"/>
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.Events.CommerceProfileCacheRefreshHook.Initialize">
            <summary>
            Init the hook
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.ProfileImportException">
            <summary>
            Exception thrown from the Profile import jobs.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.ProfileImportException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.ProfileImportException"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.ProfileImportException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.ProfileImportException" /> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.ProfileImportException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.ProfileImportException"/> class.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.ProfileImportException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.ProfileImportException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.ProfileImportException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.Utilities.IProfileImportPasswordGeneration">
            <summary>
            Profile Import password generation interface.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.Utilities.IProfileImportPasswordGeneration.GetPassword(System.String,System.String)">
            <summary>
            Gets a password for a given user.
            </summary>
            <param name="fullUserName">full user name including domain.</param>
            <param name="email">email address for this user</param>
            <returns>new password</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.Utilities.IProfileImport">
            <summary>
            The interface all profile import classes must implement
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Utilities.IProfileImport.ErrorThreshold">
            <summary>
            Gets or sets the ErrorThreshold property
            </summary>
            <remarks>Number of errors to handle before stopping the creation of users, defaults to 10</remarks>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Utilities.IProfileImport.MaxDegreeOfParallelism">
            <summary>
            Gets or sets the MaxDegreeOfParallelism property
            </summary>
            <remarks>Number of parallel processes to run for the profile import, defaults to 4</remarks>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Utilities.IProfileImport.ErrorCount">
            <summary>
            Gets or sets the number of errors encountered during the import
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Utilities.IProfileImport.DomainForSitecoreUsers">
            <summary>
            Gets or sets the DomainForSitecoreUsers property
            </summary>
            <remarks>Domain to create the user account in, defaults to "CommerceUsers"</remarks>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Utilities.IProfileImport.FieldForUserNameGeneration">
            <summary>
            Gets or sets the FieldForUserNameGeneration property
            </summary>
            <remarks>Field that will be used to generate the user name for adding into Sitecore, defaults to GeneralInfo.email_address</remarks>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Utilities.IProfileImport.EmailAddressFieldName">
            <summary>
            Gets or sets the EmailAddressFieldName property
            </summary>
            <remarks>Field that will be used to querying the email address from the CS profile system, defaults to GeneralInfo.email_address</remarks>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Utilities.IProfileImport.UniqueKeyForQueryInUserObjectTable">
            <summary>
            Gets or sets the UniqueKeyForQueryInUserObjectTable property
            </summary>
            <remarks>Used for querying into the Commerce Server UserObject profile table, must be a unique key</remarks>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Utilities.IProfileImport.SitecoreCoreConnectionString">
            <summary>
            Gets or sets the Sitecore core database connection string
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Utilities.IProfileImport.ProfileContext">
            <summary>
            Gets or sets the ProfileContext
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.Utilities.IProfileImport.GetNonLinkedProfilesInfo">
            <summary>
            Get a list of profiles that would be imported into Sitecore
            </summary>
            <returns>List of affected profiles</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.Utilities.IProfileImport.CreateUsers(System.Collections.Generic.List{Sitecore.Commerce.Connect.CommerceServer.Profiles.Utilities.ProfileInfo},System.Boolean,Sitecore.Commerce.Connect.CommerceServer.Profiles.Utilities.IProfileImportPasswordGeneration)">
            <summary>
            Create the Sitecore users and link the CS profiles to them
            </summary>
            <param name="infoList">Profile info to process</param>
            <param name="returnPassword">true is plain text passwords are to be returned, if false, passwords will not be returned</param>
            <param name="getPasswordGeneration">Password inteface to use to generate passwords.  If no interface is provided the membership generate password function will be called.</param>
            <returns>List of users that were created</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.Utilities.ProfileImportViaMembership">
            <summary>
            ProfileImportViaMembership class
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.Utilities.ProfileImportViaMembership.CreateUsers(System.Collections.Generic.List{Sitecore.Commerce.Connect.CommerceServer.Profiles.Utilities.ProfileInfo},System.Boolean,Sitecore.Commerce.Connect.CommerceServer.Profiles.Utilities.IProfileImportPasswordGeneration)">
            <summary>
            Create the Sitecore users and link the CS profiles to them
            </summary>
            <param name="infoList">Profile info to process</param>
            <param name="returnPassword">true is plain text passwords are to be returned, if false, passwords will not be returned</param>
            <param name="getPassword">Password inteface to use to generate passwords.  If no interface is provided the membership generate password function will be called.</param>
            <returns>List of users that were created</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.Utilities.ProfileImportViaMembership.SitecoreUserExists(System.String)">
            <summary>
            Check to see if a sitecore user exists with this username
            </summary>
            <param name="userName">username to query for</param>
            <returns>true if the user already exists</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.Utilities.ProfileImportViaMembership.CreateSitecoreUser(System.String,System.String,System.String)">
            <summary>
            Creates a Sitecore user based on the provided params
            </summary>
            <param name="userName">New username to create - assumes the user does not exist</param>
            <param name="password">plain text password to assign to this user</param>
            <param name="email">email address to assign to this user</param>
            <returns>true is the user was created</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.Utilities.ProfileImportViaMembership.LogCreateUserError(Sitecore.Commerce.Connect.CommerceServer.Profiles.Utilities.ProfileInfo,System.Exception)">
            <summary>
            Logs an error out to the log file
            </summary>
            <param name="info">profile info for the error log</param>
            <param name="ex">Exception to include in the log</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.Utilities.ProfileImportViaMembership.LogError(System.String)">
            <summary>
            Logs an error out
            </summary>
            <param name="msg">string to log</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.Utilities.ProfileImportViaMembership.LogInfo(System.String)">
            <summary>
            Logs info out
            </summary>
            <param name="msg">string to log</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.Utilities.ProfileInfo">
            <summary>
            ProfileInfo Class
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.Utilities.ProfileInfo.#ctor(System.String,System.Collections.Generic.KeyValuePair{System.String,System.String},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.Utilities.ProfileInfo" /> class.
            </summary>
            <param name="uniqueId">unique Id of this profile</param>
            <param name="field">Field and value to use to generate the username</param>
            <param name="email">email of this profile</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Utilities.ProfileInfo.UniqueID">
            <summary>
            Gets or sets the UniqueID property
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Utilities.ProfileInfo.Email">
            <summary>
            Gets or sets the Password property
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Utilities.ProfileInfo.Password">
            <summary>
            Gets or sets the Password property
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Utilities.ProfileInfo.FullUserName">
            <summary>
            Gets or sets the FullUserName property
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Utilities.ProfileInfo.ProfileLinkedToSitecore">
            <summary>
            Gets or sets a value indicating whether this profile has been linked to Sitecore
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Utilities.ProfileInfo.Field">
            <summary>
            Gets or sets the Field property that is used for generating the username for Sitecore
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.Utilities.SitecoreUserInfo">
            <summary>
            SitecoreUserInfo Class
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.Utilities.SitecoreUserInfo.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.Utilities.SitecoreUserInfo" /> class.
            </summary>
            <param name="userName">userName of this sitecore user</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.Utilities.SitecoreUserInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.Utilities.SitecoreUserInfo" /> class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Utilities.SitecoreUserInfo.UserName">
            <summary>
            Gets or sets the userName property
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Utilities.SitecoreUserInfo.Email">
            <summary>
            Gets or sets the email property
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Utilities.SitecoreUserInfo.Password">
            <summary>
            Gets or sets the password property
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.Utilities.ProfileImportPasswordGeneration">
            <summary>
            ProfileImportPasswordGeneration class
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.Utilities.ProfileImportPasswordGeneration.GetPassword(System.String,System.String)">
            <summary>
            Gets a password for a given user.
            </summary>
            <param name="fullUserName">full user name including domain.</param>
            <param name="email">email address for this user</param>
            <returns>new password</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.Utilities.ProfileImport">
            <summary>
            ProfileImport class
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.Utilities.ProfileImport.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.Utilities.ProfileImport" /> class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Utilities.ProfileImport.ErrorThreshold">
            <summary>
            Gets or sets the ErrorThreshold property
            </summary>
            <remarks>Number of errors to handle before stopping the creation of users, defaults to 10</remarks>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Utilities.ProfileImport.MaxDegreeOfParallelism">
            <summary>
            Gets or sets the MaxDegreeOfParallelism property
            </summary>
            <remarks>Number of parallel processes to run for the profile import, defaults to 4</remarks>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Utilities.ProfileImport.ErrorCount">
            <summary>
            Gets or sets the number of errors encountered during the import
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Utilities.ProfileImport.DomainForSitecoreUsers">
            <summary>
            Gets or sets the DomainForSitecoreUsers property
            </summary>
            <remarks>Domain to create the user account in, defaults to "CommerceUsers"</remarks>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Utilities.ProfileImport.FieldForUserNameGeneration">
            <summary>
            Gets or sets the FieldForUserNameGeneration property
            </summary>
            <remarks>Field that will be used to generate the user name for adding into Sitecore, defaults to GeneralInfo.email_address</remarks>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Utilities.ProfileImport.EmailAddressFieldName">
            <summary>
            Gets or sets the EmailAddressFieldName property
            </summary>
            <remarks>Field that will be used to querying the email address from the CS profile system, defaults to GeneralInfo.email_address</remarks>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Utilities.ProfileImport.UniqueKeyForQueryInUserObjectTable">
            <summary>
            Gets or sets the UniqueKeyForQueryInUserObjectTable property
            </summary>
            <remarks>Used for querying into the Commerce Server UserObject profile table, must be a unique key</remarks>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Utilities.ProfileImport.SitecoreCoreConnectionString">
            <summary>
            Gets or sets the Sitecore core database connection string
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Utilities.ProfileImport.ProfileContext">
            <summary>
            Gets or sets the ProfileContext
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.Utilities.ProfileImport.GetNonLinkedProfilesInfo">
            <summary>
            Get a list of profiles that would be imported into Sitecore
            </summary>
            <returns>List of affected profiles</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.Utilities.ProfileImport.CreateUsers(System.Collections.Generic.List{Sitecore.Commerce.Connect.CommerceServer.Profiles.Utilities.ProfileInfo},System.Boolean,Sitecore.Commerce.Connect.CommerceServer.Profiles.Utilities.IProfileImportPasswordGeneration)">
            <summary>
            Create the Sitecore users and link the CS profiles to them
            </summary>
            <param name="infoList">Profile info to process</param>
            <param name="returnPassword">true is plain text passwords are to be returned, if false, passwords will not be returned</param>
            <param name="getPassword">Password inteface to use to generate passwords.  If no interface is provided the membership generate password function will be called.</param>
            <returns>List of users that were created</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.Utilities.ProfileImport.PerformProfileQuery(System.Collections.Generic.List{Sitecore.Commerce.Connect.CommerceServer.Profiles.Utilities.ProfileInfo},System.String)">
            <summary>
            Performs a query on the commerce profile system
            </summary>
            <param name="info">List to add the found profiles to</param>
            <param name="queryString">the query string to use</param>
            <returns>the number of profiles found</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.Utilities.ProfileImport.GetPassword(System.String,System.String,Sitecore.Commerce.Connect.CommerceServer.Profiles.Utilities.IProfileImportPasswordGeneration)">
            <summary>
            Get a password for this user
            </summary>
            <param name="fullUserName">fullUserName of the user to get the password for</param>
            <param name="email">Email of this user if it is available</param>
            <param name="getPasswordGeneration">Password inteface to use to generate passwords.  If no interface is provided the membership generate password function will be called.</param>
            <returns>plain text password to use for this user</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.Utilities.ProfileImport.LogCreateUserError(Sitecore.Commerce.Connect.CommerceServer.Profiles.Utilities.ProfileInfo,System.Exception)">
            <summary>
            Logs an error out to the log file
            </summary>
            <param name="info">profile info for the error log</param>
            <param name="ex">Exception to include in the log</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.Utilities.ProfileImport.LogError(System.String)">
            <summary>
            Logs an error out
            </summary>
            <param name="message">string to log</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.Utilities.ProfileImport.LogInfo(System.String)">
            <summary>
            Logs info out
            </summary>
            <param name="message">string to log</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.Utilities.ProfileImport.UpdateCSProfile(System.String,System.String)">
            <summary>
            Update the CS Profile external ID property
            </summary>
            <param name="userName">username to use for updating the externalId property with</param>
            <param name="id">CS UserObject profile unique of the profile to update</param>
            <returns>true if the profile was updated</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.Utilities.ProfileImport.PopulateProfileInfo(ADODB.Fields)">
            <summary>
            Populate the ProfileInfo for this row
            </summary>
            <param name="fields">fields to make use of for populating the data</param>
            <returns>new ProfileInfo</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.Utilities.ProfileImport.CreateSitecoreUser(System.String,System.String,System.String)">
            <summary>
            Creates a Sitecore user based on the provided params
            </summary>
            <remarks>This method will create a salt value and hash the password if the MembershipPasswordFormat.Hashed is being used.  If MembershipPasswordFormat.Clear is 
                        specified, the password will be placed in the db as a plain text value</remarks>
            <param name="userName">New username to create - assumes the user does not exist</param>
            <param name="password">plain text password to assign to this user</param>
            <param name="email">email address to assign to this user</param>
            <returns>true is the user was created</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.Utilities.ProfileImport.CreateSitecoreProfile(System.String)">
            <summary>
            Creates the Sitecore profile info for the provided user
            </summary>
            <param name="userName">User name to create the profile for</param>
            <returns>true if the profile was created</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.Utilities.ProfileImport.SitecoreUserExists(System.String)">
            <summary>
            Check to see if a sitecore user exists with this username
            </summary>
            <param name="userName">username to query for</param>
            <returns>true if the user already exists</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.Utilities.ProfileImport.GenerateSalt">
            <summary>
            Generate a salt value like the sql membership provider does
            </summary>
            <returns>newly created salt</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.Utilities.ProfileImport.EncodePassword(System.String,System.Web.Security.MembershipPasswordFormat,System.String)">
            <summary>
            Encode the password
            </summary>
            <param name="pass">password to encode</param>
            <param name="passwordFormat">password format being used by the membership provider</param>
            <param name="salt">salt value to make use of</param>
            <returns>newly encoded password</returns>
            <exception cref="T:System.NotSupportedException">MembershipPasswordFormat.Encrypted is not supported</exception>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.ImportProfilesJob">
            <summary>
            ImportProfilesJob class
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Profiles.ImportProfilesJob.ImportProfilesJobName">
            <summary>
            The name of this job
            </summary>
            <remarks>Internal name, no need to be in resources</remarks>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Profiles.ImportProfilesJob._job">
            <summary>
            the job
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.ImportProfilesJob.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.ImportProfilesJob" /> class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.ImportProfilesJob.Name">
            <summary>
            Gets the name of the job
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.ImportProfilesJob.Job">
            <summary>
            Gets the job from the job manager
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.ImportProfilesJob.ProfilesFound">
            <summary>
            Gets or sets the number of profiles found to import
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.ImportProfilesJob.ProfilesImported">
            <summary>
            Gets or sets the number of profiles that were imported
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.ImportProfilesJob.ErrorCount">
            <summary>
            Gets or sets the number of errors encountered
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.ImportProfilesJob.GetCurrentJob">
            <summary>
            Gets the current job from this instance
            </summary>
            <returns>the Job</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.ImportProfilesJob.Import">
            <summary>
            Do the import profiles job
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.ImportProfilesJob.VerifyFileWrite(Sitecore.Jobs.Job,System.String)">
            <summary>
            Can we write to the file
            </summary>
            <param name="job">job info</param>
            <param name="outfile">outfile name</param>
            <remarks>Will throw an exception if we cannot write to the file</remarks>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.ImportProfilesJob.CreateSitecoreUsers(Sitecore.Commerce.Connect.CommerceServer.Profiles.Utilities.IProfileImport,System.Collections.Generic.List{Sitecore.Commerce.Connect.CommerceServer.Profiles.Utilities.ProfileInfo},Sitecore.Jobs.Job,System.String)">
            <summary>
            Create the users from the list of profiles
            </summary>
            <param name="profileImport">the import object</param>
            <param name="profiles">the list of profiles</param>
            <param name="job">the job</param>
            <param name="outfile">the output file</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.ImportProfilesJob.OutputFileinfo(System.Collections.Generic.List{Sitecore.Commerce.Connect.CommerceServer.Profiles.Utilities.SitecoreUserInfo},System.String)">
            <summary>
            Dump out the created user info
            </summary>
            <param name="sitecoreUsers">list of users</param>
            <param name="outfile">outfile to write to</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.ImportProfilesJob.LoadSettings(Sitecore.Commerce.Connect.CommerceServer.Profiles.Utilities.IProfileImport)">
            <summary>
            Load the settings from config
            </summary>
            <param name="profileImport">Profile Import to load settings for</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.ImportProfilesJob.GetSetting(System.String)">
            <summary>
            Get a specific setting
            </summary>
            <param name="settingName">name of the setting to retreive</param>
            <returns>the settings value or empty string if not found</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.CommerceServerSwitchingMembershipProvider">
            <summary>
            A switching membership provider to override the Sitecore switcher
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.CommerceServerSwitchingMembershipProvider.DeleteUser(System.String,System.Boolean)">
            <summary>
            Deletes a user from the proper provider, but then ensure that other providers are notified in case they also have info on that user.
            </summary>
            <param name="userName">the user name to delete</param>
            <param name="deleteAllRelatedData">are we to delete all related data</param>
            <returns>true if the user was deleted</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.CommerceServerSwitchingMembershipProvider.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Finds users from the list of providers matching the string provided
            </summary>
            <param name="userNameToMatch">name possibly containing wildcards</param>
            <param name="pageIndex">The index of the page of results to return. pageIndex is zero-based.</param>
            <param name="pageSize">The size of the page of results to return.</param>
            <param name="totalRecords">The total number of matched users.</param>
            <returns>the membership collection of users found</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.Models.CommerceProfileDefinitionGroup">
            <summary>
            Represents a Commerce Profile Definition
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Models.CommerceProfileDefinitionGroup.Description">
            <summary>
            Gets or sets the description
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Models.CommerceProfileDefinitionGroup.DisplayName">
            <summary>
            Gets or sets the display name
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Models.CommerceProfileDefinitionGroup.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.Models.ProfilePagingOptions">
            <summary>
            Profile Paging Options Class
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.Models.ProfilePagingOptions.#ctor(System.Int32,System.Int32,Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.SortDirection)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.Models.ProfilePagingOptions" /> class.
            </summary>
            <param name="startingIndex">Starting index of the pages</param>
            <param name="pageSize">Size of the pages</param>
            <param name="sortDirection">Direction of the sort</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.Models.ProfilePagingOptions.#ctor(System.String,System.Int32,System.Int32,Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.SortDirection)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.Models.ProfilePagingOptions" /> class.
            </summary>
            <param name="sortField">Field to sort by</param>
            <param name="startingIndex">Starting index of the pages</param>
            <param name="pageSize">Size of the pages</param>
            <param name="sortDirection">Direction of the sort</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Models.ProfilePagingOptions.PageSize">
            <summary>
            Gets or sets the size of the pages
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Models.ProfilePagingOptions.StartingIndex">
            <summary>
            Gets or sets the starting page index
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Models.ProfilePagingOptions.SortField">
            <summary>
            Gets or sets the sort field to sort items by
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Models.ProfilePagingOptions.SortDirection">
            <summary>
            Gets or sets the sort direction
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.Models.ProfilePropertyListCollection`1">
            <summary>
            Handles Profile Property collections and keeps track if the collection if dirty
            </summary>
            <typeparam name="T">the Type</typeparam>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Profiles.Models.ProfilePropertyListCollection`1._internalList">
            <summary>
            the internal list
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.Models.ProfilePropertyListCollection`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.Models.ProfilePropertyListCollection`1" /> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.Models.ProfilePropertyListCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.Models.ProfilePropertyListCollection`1" /> class.
            </summary>
            <param name="collection">collection to initalize from</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Models.ProfilePropertyListCollection`1.IsDirty">
            <summary>
            Gets a value indicating whether the list is dirty
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Models.ProfilePropertyListCollection`1.Count">
            <summary>
            Gets a value indicating the count of the list
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Models.ProfilePropertyListCollection`1.IsReadOnly">
            <summary>
            Gets a value indicating whether the list is read only
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Models.ProfilePropertyListCollection`1.Item(System.Int32)">
            <summary>
            Indexer for the list
            </summary>
            <param name="index">index to retreive</param>
            <returns>The item at the index</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.Models.ProfilePropertyListCollection`1.GetEnumerator">
            <summary>
            Gets the Enumerator
            </summary>
            <returns>the enumerator</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.Models.ProfilePropertyListCollection`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Gets the Enumerator
            </summary>
            <returns>the enumerator</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.Models.ProfilePropertyListCollection`1.Add(`0)">
            <summary>
            Adds an item
            </summary>
            <param name="item">the item to add</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.Models.ProfilePropertyListCollection`1.Clear">
            <summary>
            Clears the list
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.Models.ProfilePropertyListCollection`1.Contains(`0)">
            <summary>
            Does the list contain an item
            </summary>
            <param name="item">the item</param>
            <returns>true if the item is in the list</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.Models.ProfilePropertyListCollection`1.CopyTo(`0[],System.Int32)">
            <summary>
            CopyTo implementation
            </summary>
            <param name="array">the array</param>
            <param name="arrayIndex">the array index</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.Models.ProfilePropertyListCollection`1.Remove(`0)">
            <summary>
            Remove an item from the list
            </summary>
            <param name="item">the item to remove</param>
            <returns>true if the item was removed</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.Models.ProfilePropertyListCollection`1.IndexOf(`0)">
            <summary>
            Gets the index of an item
            </summary>
            <param name="item">the item</param>
            <returns>the index</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.Models.ProfilePropertyListCollection`1.Insert(System.Int32,`0)">
            <summary>
            Inserts an item
            </summary>
            <param name="index">the index to insert at</param>
            <param name="item">the item</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.Models.ProfilePropertyListCollection`1.RemoveAt(System.Int32)">
            <summary>
            Removes an item at an index
            </summary>
            <param name="index">the index</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.Models.ProfilePropertyListCollection`1.ClearDirtyFlag">
            <summary>
            Clears the dirty flag
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.Models.ProfilePropertyListCollection`1.InnerList">
            <summary>
            Get the internal list
            </summary>
            <returns>the internal list</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.Models.CommerceProfileDefinition">
            <summary>
            Represents a Commerce Profile Definition
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.Models.CommerceProfileDefinition.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.Models.CommerceProfileDefinition" /> class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Models.CommerceProfileDefinition.Description">
            <summary>
            Gets or sets the description
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Models.CommerceProfileDefinition.DisplayName">
            <summary>
            Gets or sets the display name
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Models.CommerceProfileDefinition.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Models.CommerceProfileDefinition.DbTableName">
            <summary>
            Gets or sets the Database table name
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Models.CommerceProfileDefinition.PrimaryKeyProperty">
            <summary>
            Gets or sets the primary key
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Models.CommerceProfileDefinition.Properties">
            <summary>
            Gets all of the properties belonging to the definition
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.Models.CommerceProfileProperty">
            <summary>
            Represents a profile property belonging to a profile definition
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.Models.CommerceProfileProperty.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.Models.CommerceProfileProperty" /> class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Models.CommerceProfileProperty.Attributes">
            <summary>
            Gets the attributes of the property
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Models.CommerceProfileProperty.Description">
            <summary>
            Gets or sets the description of the property
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Models.CommerceProfileProperty.DisplayName">
            <summary>
            Gets or sets the display name of the property
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Models.CommerceProfileProperty.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Models.CommerceProfileProperty.IsSearchable">
            <summary>
            Gets or sets a value indicating whether or not the property is searchable
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Models.CommerceProfileProperty.IsExported">
            <summary>
            Gets or sets a value indicating whether or not the property is exportable
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Models.CommerceProfileProperty.IsDefaultNull">
            <summary>
            Gets or sets a value indicating whether or not the default value of the property is null
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Models.CommerceProfileProperty.IsRequired">
            <summary>
            Gets or sets a value indicating whether or not the property is required
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Models.CommerceProfileProperty.IsUpdatable">
            <summary>
            Gets or sets a value indicating whether or not the property is updatable
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Models.CommerceProfileProperty.IsActive">
            <summary>
            Gets or sets a value indicating whether or not the property is active
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Models.CommerceProfileProperty.PropertyType">
            <summary>
            Gets or sets the property type
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Models.CommerceProfileProperty.KeyDefinition">
            <summary>
            Gets or sets the property key type
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Models.CommerceProfileProperty.Group">
            <summary>
            Gets or sets the group the property belongs to
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Models.CommerceProfileProperty.DbColumnName">
            <summary>
            Gets or sets the db column the property is mapped ot
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Models.CommerceProfileProperty.DbTableName">
            <summary>
            Gets or sets the db table the property is mapped to
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.Models.CommerceProfilePropertyAttribute">
            <summary>
            Used to represent an attribute of a profile property
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Models.CommerceProfilePropertyAttribute.Description">
            <summary>
            Gets or sets the description
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Models.CommerceProfilePropertyAttribute.DisplayName">
            <summary>
            Gets or sets the display name
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Models.CommerceProfilePropertyAttribute.Name">
            <summary>
            Gets or sets the name
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.Models.CommerceProfilePropertyAttribute.Value">
            <summary>
            Gets or sets the value
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.ICommerceProfileDefinitionRepository">
            <summary>
            The interface that a profile definition repository needs to implement
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.ICommerceProfileDefinitionRepository.GetDefinitions">
            <summary>
            Gets all of the definitions from the current site
            </summary>
            <returns>The collection of profile definitions</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.ICommerceProfileDefinitionRepository.GetDefinition(System.String)">
            <summary>
            Get a specific definition from the current site
            </summary>
            <param name="name">Profile definition name to retrieve</param>
            <returns>The profile definition if found, otherwise null</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.ICommerceProfileDefinitionRepository.GetDefinitionGroups(System.String)">
            <summary>
            Gets the definition groups.
            </summary>
            <param name="name">The name.</param>
            <returns>A list of CommerceProfileDefinitionGroup objects.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.CommerceServerProfileProvider">
            <summary>
            A profile membership provider for Commerce Server
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.CommerceServerProfileProvider.ApplicationName">
            <summary>
            Gets or sets the application name for the current app
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.CommerceServerProfileProvider.DeleteInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)">
            <summary>
            Deletes inactive Commerce Server profiles
            </summary>
            <param name="authenticationOption">The deletion options</param>
            <param name="userInactiveSinceDate">The date to delete since</param>
            <returns>The number of profiles deleted</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.CommerceServerProfileProvider.DeleteProfiles(System.String[])">
            <summary>
            Deletes a specified list of profiles
            </summary>
            <param name="usernames">The ids of the profiles to delete</param>
            <returns>The number of profiles deleted</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.CommerceServerProfileProvider.DeleteProfiles(System.Web.Profile.ProfileInfoCollection)">
            <summary>
            Deletes a list of profiles
            </summary>
            <param name="profiles">The profiles to delete</param>
            <returns>The number of profiles deleted</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.CommerceServerProfileProvider.FindInactiveProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.DateTime,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Finds a list of inactive Commerce Server profiles
            </summary>
            <param name="authenticationOption">The options for deletion</param>
            <param name="usernameToMatch">Used if you want to perform a match on usernames</param>
            <param name="userInactiveSinceDate">The date to delete from</param>
            <param name="pageIndex">The item to start from if paging</param>
            <param name="pageSize">The number of items to return if paging</param>
            <param name="totalRecords">The number of profiles found</param>
            <returns>The requested number of inactive profiles</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.CommerceServerProfileProvider.FindProfilesByUserName(System.Web.Profile.ProfileAuthenticationOption,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Finds a list of inactive Commerce Server profiles
            </summary>
            <param name="authenticationOption">The options for deletion</param>
            <param name="usernameToMatch">Used if you want to perform a match on usernames</param>
            <param name="pageIndex">The item to start from if paging</param>
            <param name="pageSize">The number of items to return if paging</param>
            <param name="totalRecords">The number of profiles found</param>
            <returns>The requested number of inactive profiles</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.CommerceServerProfileProvider.GetAllInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Finds a list of inactive Commerce Server profiles
            </summary>
            <param name="authenticationOption">The options for deletion</param>
            <param name="userInactiveSinceDate">The date to delete from</param>
            <param name="pageIndex">The item to start from if paging</param>
            <param name="pageSize">The number of items to return if paging</param>
            <param name="totalRecords">The number of profiles found</param>
            <returns>The requested number of inactive profiles</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.CommerceServerProfileProvider.GetAllProfiles(System.Web.Profile.ProfileAuthenticationOption,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets all Commerce Server profiles
            </summary>
            <param name="authenticationOption">The options for deletion</param>
            <param name="pageIndex">The item to start from if paging</param>
            <param name="pageSize">The number of items to return if paging</param>
            <param name="totalRecords">The number of profiles found</param>
            <returns>The requested number of profiles</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.CommerceServerProfileProvider.GetNumberOfInactiveProfiles(System.Web.Profile.ProfileAuthenticationOption,System.DateTime)">
            <summary>
            Checks the number of inactive profiles
            </summary>
            <param name="authenticationOption">The options for searches</param>
            <param name="userInactiveSinceDate">The date to search from</param>
            <returns>The count of inactive profiles</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.CommerceServerProfileProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)">
            <summary>
            Gets all of the profile property values
            </summary>
            <param name="context">The current context of the request</param>
            <param name="collection">The collection of requested properties</param>
            <returns>The requested profile properties</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.CommerceServerProfileProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)">
            <summary>
            Sets all of the specified profile properties
            </summary>
            <param name="context">The current context of the request</param>
            <param name="collection">The collection of the properties to set</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.CommerceServerProfileProvider.IsCommerceServerProfileField(System.Configuration.SettingsPropertyValue)">
            <summary>
            Checks to see if the property value contains CustomProviderData and if that data represents a Commerce Server Profile field
            </summary>
            <param name="prop">the settings property value</param>
            <returns>null if it is not a Commerce Server setting.  The name of the field if it is</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.CommerceServerProfileProvider.ValidateChangeProperty(System.Object,System.String,CommerceServer.Core.Runtime.Profiles.ProfileProperty,System.String)">
            <summary>
            Checks to ensure that the field provided is allowed to be modified
            </summary>
            <param name="propertyValueObj">property to check</param>
            <param name="csField">csFiled name</param>
            <param name="profileField">profile field</param>
            <param name="userName">user name asscoiated with this profile</param>
            <exception cref="T:Sitecore.Exceptions.AccessDeniedException">Throws an exception is this property cannot be modified</exception>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.CommerceServerProfileProvider.SetCSProperty(System.Configuration.SettingsPropertyValue,CommerceServer.Core.Runtime.Profiles.ProfileProperty)">
            <summary>
            Sets the value of the CS property
            </summary>
            <param name="propertyValue">profile property value</param>
            <param name="profileField">profile field to set the value against</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.CommerceServerProfileProvider.GetProfiles(System.Web.Profile.ProfileAuthenticationOption,System.String,System.Object,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Get a <see cref="T:System.Web.Profile.ProfileInfoCollection"/> of profiles based on the provided parameters
            </summary>
            <param name="authenticationOption">authentication options to use</param>
            <param name="usernameToMatch">The user name to match against or null if no username matching is to occur</param>
            <param name="userInactiveSinceDate">The DateTime to use for activity checks or null if not required</param>
            <param name="pageIndex">The page index to start with</param>
            <param name="pageSize">The size for pages, if 0, only the total record count will be returned with an empty collection</param>
            <param name="totalRecords">The number of profiles found matching the other parameters</param>
            <returns>The collection of profiles matching the provided parameters.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.CommerceServerProfileProvider.GetUserProfile(System.String)">
            <summary>
            Gets a user profile from a username, if not found it will create a profile
            </summary>
            <param name="userName">user name to search for</param>
            <returns>the profile that was found or created</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.CommerceServerProfileProvider.VerifyPagingInfo(System.Int32,System.Int32)">
            <summary>
            Verify that the paging parameters are valid values
            </summary>
            <param name="pageIndex">The page index value to check, must be zero or greater.</param>
            <param name="pageSize">The page size value to check, must be greater than zero.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.CommerceProfileRepository">
            <summary>
            Repository for CS profile functionality.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Profiles.CommerceProfileRepository.AllDefinitions">
            <summary>
            Gets all of the definitions for the current profile system
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.CommerceProfileRepository.GetProfile(System.String,System.String)">
            <summary>
            Gets the requested profile
            </summary>
            <param name="type">The type of profile to retrieve</param>
            <param name="value">The key for the requested profile</param>
            <returns>The found profile</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.CommerceProfileRepository.GetProfile(System.String,System.String,System.String)">
            <summary>
            Gets the requested profile
            </summary>
            <param name="type">The type of profile to retrieve</param>
            <param name="value">The key for the requested profile</param>
            <param name="field">The profile field to search for the value in</param>
            <returns>The found profile</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.CommerceProfileRepository.GetProfiles(System.String,System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Gets a list of profiles
            </summary>
            <param name="type">The profile type to retrieve</param>
            <param name="field">The field to search in</param>
            <param name="values">The collection of values to search for</param>
            <returns>The found profiles</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.CommerceProfileRepository.GetProfiles(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Gets a list of profiles
            </summary>
            <param name="type">The profile type to retrieve</param>
            <param name="ids">The collection of ids to search for</param>
            <returns>The found profiles</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.CommerceProfileRepository.GetProfilesFromField(CommerceServer.Core.Runtime.Profiles.Profile,System.String,System.String,Sitecore.Commerce.Connect.CommerceServer.Profiles.Models.ProfilePagingOptions,System.Int32@)">
            <summary>
            Gets a list of profiles from a profile field - Example, get a list of Addresses from a UserObject Profile
            </summary>
            <param name="profile">Profile to get the list from</param>
            <param name="field">Field to get the list from</param>
            <param name="typeToRetreive">Type of profiles stored in the list</param>
            <param name="pagingOptions">Paging options for the list retreival</param>
            <param name="totalRecords">Total records found</param>
            <returns>List of Profiles reflecting the paging options</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.CommerceProfileRepository.DeleteProfile(System.String,System.String)">
            <summary>
            Deletes a specified profile
            </summary>
            <param name="type">The type of profile to delete</param>
            <param name="value">The key of the profile to delete</param>
            <returns>Indicates whether or not the profile was deleted</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.CommerceProfileRepository.DeleteProfile(System.String,System.String,System.String)">
            <summary>
            Deletes a specified profile
            </summary>
            <param name="type">The type of profile to delete</param>
            <param name="value">The key of the profile to delete</param>
            <param name="field">The field to search for the key in</param>
            <returns>Indicates whether or not the profile was deleted</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.CommerceProfileRepository.CreateProfile(System.String,System.String)">
            <summary>
            Used to create a profile
            </summary>
            <param name="type">The type of profile to create</param>
            <param name="value">The key for the new profile</param>
            <returns>The newly created profile</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.CommerceProfileRepository.GetUserProfileByName(System.String)">
            <summary>
            Gets a user profile by name
            </summary>
            <param name="userName">The user name to search for</param>
            <returns>The found profile</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.CommerceProfileRepository.DeleteInactiveUserProfiles(System.DateTime)">
            <summary>
            Deletes inactive Commerce Server profiles
            </summary>
            <param name="userInactiveSinceDate">The date to delete since</param>
            <returns>The number of profiles deleted</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.CommerceProfileRepository.GetUserProfiles(System.Web.Profile.ProfileAuthenticationOption,System.String,System.Object,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Get a <see cref="T:System.Web.Profile.ProfileInfoCollection"/> of profiles based on the provided parameters
            </summary>
            <param name="authenticationOption">authentication options to use</param>
            <param name="userNameToMatch">The user name to match against or null if no username matching is to occur</param>
            <param name="userInactiveSinceDate">The DateTime to use for activity checks or null if not required</param>
            <param name="pageIndex">The page index to start with</param>
            <param name="pageSize">The size for pages, if 0, only the total record count will be returned with an empty collection</param>
            <param name="totalRecords">The number of profiles found matching the other parameters</param>
            <returns>The collection of profiles matching the provided parameters.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.CommerceProfileRepository.GetProfiles(System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Get a list of CommerceServer profiles based on the provided parameters
            </summary>
            <param name="profileName">Name of the profile.</param>
            <param name="key">The key.</param>
            <param name="pageIndex">The page index to start with</param>
            <param name="pageSize">The size for pages, if 0, only the total record count will be returned with an empty collection</param>
            <param name="totalRecords">The number of profiles found matching the other parameters</param>
            <returns>
            The collection of profiles matching the provided parameters.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.CommerceProfileRepository.GetQueryString(System.String,System.String)">
            <summary>
            Gets a query string for the GetProfiles method
            </summary>
            <param name="profileName">Name of the profile.</param>
            <param name="key">The key.</param>
            <returns>
            The constructed query string to use
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.CommerceProfileRepository.GetQueryString(System.String,System.Object)">
            <summary>
            Gets a query string for the GetProfiles method
            </summary>
            <param name="usernameToMatch">user name to use within the query</param>
            <param name="userInactiveSinceDate">user inactive date, or null if not used</param>
            <returns>The constructed query string to use</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.CommerceProfileRepository.GetProfileInfoFromFields(ADODB.Fields)">
            <summary>
            Used to get a ProfileInfo object based on the records returned by <see cref="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.CommerceProfileRepository.GetProfiles(System.String,System.Collections.Generic.List{System.String})"/>
            </summary>
            <param name="fields">fields to process. Expects 3 in order. userName, lastActivityDate, lastUpdatedDate</param>
            <returns>A ProfileInfo object based on the provided fields, or null if no profile</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.CommerceProfileRepository.GetProfileIdFromFields(ADODB.Fields,System.String,System.String)">
            <summary>
            Used to get a ProfileInfo object based on the records returned by <see cref="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.CommerceProfileRepository.GetProfiles(System.String,System.Collections.Generic.List{System.String})" />
            </summary>
            <param name="fields">fields to process. Expects 3 in order. userName, lastActivityDate, lastUpdatedDate</param>
            <param name="profileName">Name of the profile.</param>
            <param name="key">The key.</param>
            <returns>
            A ProfileInfo object based on the provided fields, or null if no profile
            </returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.ICommerceProfileRepository">
            <summary>
            The interface all profile repositories must implement
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.ICommerceProfileRepository.GetProfile(System.String,System.String)">
            <summary>
            Gets the requested profile
            </summary>
            <param name="type">The type of profile to retrieve</param>
            <param name="value">The key for the requested profile</param>
            <returns>The found profile</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.ICommerceProfileRepository.GetProfiles(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Gets a list of profiles
            </summary>
            <param name="type">The profile type to retrieve</param>
            <param name="ids">The collection of ids to search for</param>
            <returns>The found profiles</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.ICommerceProfileRepository.GetProfiles(System.String,System.String,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Gets the profiles.
            </summary>
            <param name="profileName">Name of the profile.</param>
            <param name="key">The key.</param>
            <param name="pageIndex">Index of the page.</param>
            <param name="pageSize">Size of the page.</param>
            <param name="totalRecords">The total records.</param>
            <returns>List of commerce server profiles.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.ICommerceProfileRepository.GetProfile(System.String,System.String,System.String)">
            <summary>
            Gets the requested profile
            </summary>
            <param name="type">The type of profile to retrieve</param>
            <param name="value">The key for the requested profile</param>
            <param name="field">The profile field to search for the value in</param>
            <returns>The found profile</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.ICommerceProfileRepository.GetProfiles(System.String,System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Gets a list of profiles
            </summary>
            <param name="type">The profile type to retrieve</param>
            <param name="field">The field to search in</param>
            <param name="values">The collection of values to search for</param>
            <returns>The found profiles</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.ICommerceProfileRepository.DeleteProfile(System.String,System.String)">
            <summary>
            Deletes a specified profile
            </summary>
            <param name="type">The type of profile to delete</param>
            <param name="value">The key of the profile to delete</param>
            <returns>Indicates whether or not the profile was deleted</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.ICommerceProfileRepository.DeleteProfile(System.String,System.String,System.String)">
            <summary>
            Deletes a specified profile
            </summary>
            <param name="type">The type of profile to delete</param>
            <param name="value">The key of the profile to delete</param>
            <param name="field">The field to search for the key in</param>
            <returns>Indicates whether or not the profile was deleted</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.ICommerceProfileRepository.DeleteInactiveUserProfiles(System.DateTime)">
            <summary>
            Deletes inactive Commerce Server profiles
            </summary>
            <param name="userInactiveSinceDate">The date to delete since</param>
            <returns>The number of profiles deleted</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.ICommerceProfileRepository.CreateProfile(System.String,System.String)">
            <summary>
            Used to create a profile
            </summary>
            <param name="type">The type of profile to create</param>
            <param name="value">The key for the new profile</param>
            <returns>The newly created profile</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.ICommerceProfileRepository.GetUserProfileByName(System.String)">
            <summary>
            Gets a user profile by name
            </summary>
            <param name="userName">The user name to search for</param>
            <returns>The found profile</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.ICommerceProfileRepository.GetUserProfiles(System.Web.Profile.ProfileAuthenticationOption,System.String,System.Object,System.Int32,System.Int32,System.Int32@)">
            <summary>
            Get a <see cref="T:System.Web.Profile.ProfileInfoCollection"/> of profiles based on the provided parameters
            </summary>
            <param name="authenticationOption">authentication options to use</param>
            <param name="userNameToMatch">The user name to match against or null if no username matching is to occur</param>
            <param name="userInactiveSinceDate">The DateTime to use for activity checks or null if not required</param>
            <param name="pageIndex">The page index to start with</param>
            <param name="pageSize">The size for pages, if 0, only the total record count will be returned with an empty collection</param>
            <param name="totalRecords">The number of profiles found matching the other parameters</param>
            <returns>The collection of profiles matching the provided parameters.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Profiles.ICommerceProfileRepository.GetProfilesFromField(CommerceServer.Core.Runtime.Profiles.Profile,System.String,System.String,Sitecore.Commerce.Connect.CommerceServer.Profiles.Models.ProfilePagingOptions,System.Int32@)">
            <summary>
            Gets a list of profiles from a profile field - Example, get a list of Addresses from a UserObject Profile
            </summary>
            <param name="profile">Profile to get the list from</param>
            <param name="field">Field to get the list from</param>
            <param name="type">Type of profiles stored in the list</param>
            <param name="pagingOptions">Paging options for the list retreival</param>
            <param name="totalRecords">Total records found</param>
            <returns>List of Profiles reflecting the paging options</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.CommerceConnectorContext">
            <summary>
            Default Commerce context class.
            </summary>
            <seealso cref="T:Sitecore.Commerce.Connect.CommerceServer.ICommerceConnectorContext" />
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.CommerceConnectorContext.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.CommerceConnectorContext"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.CommerceConnectorContext.Current">
            <summary>
            Gets the currently configured Commerce context.
            </summary>
            <value>
            The Commerce context.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.CommerceConnectorContext.CatalogsManagedByExternalCommerceSystem">
            <summary>
            Gets a value indicating whether catalogs are managed by Commerce.
            </summary>
            <value>
            <c>true</c> if catalogs are managed by Commerce; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.CommerceLog">
            <summary>
            Logging class.  Loads the currently configured logger and implements the default one as well.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.CommerceLog.Current">
            <summary>
            Gets the currently configured logger.
            </summary>
            <value>The currently configured logger.</value>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.CommerceLog.Info(System.String,System.Object)">
            <summary>
            Logs an informational message.
            </summary>
            <param name="message">The message.</param>
            <param name="owner">The owner.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.CommerceLog.Warning(System.String,System.Object)">
            <summary>
            Logs a warning message.
            </summary>
            <param name="message">The message.</param>
            <param name="owner">The owner.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.CommerceLog.Error(System.String,System.Object)">
            <summary>
            Logs an error message.
            </summary>
            <param name="message">The message.</param>
            <param name="owner">The owner.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.CommerceLog.Error(System.String,System.Object,System.Exception)">
            <summary>
            Logs an error message.
            </summary>
            <param name="message">The message.</param>
            <param name="owner">The owner.</param>
            <param name="exception">The exception.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.CommerceLog.Error(System.String,System.Type)">
            <summary>
            Logs an error message.
            </summary>
            <param name="message">The message.</param>
            <param name="ownerType">Type of the owner.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.CommerceLog.Error(System.String,System.Type,System.Exception)">
            <summary>
            Logs an error message.
            </summary>
            <param name="message">The message.</param>
            <param name="ownerType">Type of the owner.</param>
            <param name="exception">The exception.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.CommerceTrace">
            <summary>
            Tracing class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.CommerceTrace.Current">
            <summary>
            Gets the currently configured trace component.
            </summary>
            <value>The currently configured trace component.</value>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.CommerceTrace.Write(System.String)">
            <summary>
            Writes a message to the trace log.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Configuration.SitecoreUserRepositoryElement">
            <summary>
            Configuration class for the profile element.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Configuration.SitecoreUserRepositoryElement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Configuration.SitecoreUserRepositoryElement"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Configuration.SitecoreUserRepositoryElement.CommerceUsersDomain">
            <summary>
            Gets the domain that is used for Commerce Users
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Configuration.ProfilesElement">
            <summary>
            Configuration class for the profile element.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Configuration.ProfilesElement.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Configuration.ProfilesElement"/> class.
            </summary>
            <param name="parentNode">Parent XML node of the Profiles element.</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Configuration.ProfilesElement.SitecoreLinkProperty">
            <summary>
            Gets the Sitecore Link Property name.
            </summary>
            <value>
            The property name.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Configuration.ProfileImportSettingsElementCollection">
            <summary>
            Collection configuration class for the profile import settings element.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Configuration.ProfileImportSettingsElementCollection.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Configuration.ProfileImportSettingsElementCollection"/> class.
            </summary>
            <param name="parentNode">Xml node that contains list of settings elements.</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Configuration.ProfileImportSettingsElementCollection.SettingsList">
            <summary>
            Gets the settings list.
            </summary>
            <value>
            The settings list.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Configuration.ProfileImportElement">
            <summary>
            Configuration class for the profile import element.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Configuration.ProfileImportElement.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Configuration.ProfileImportElement"/> class.
            </summary>
            <param name="parentNode">Parent XML node of the ProfileImport element.</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Configuration.ProfileImportElement.SettingsElementCollection">
            <summary>
            Gets the settings element collection.
            </summary>
            <value>
            The settings element collection.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Configuration.ProfileImportSettingsElement">
            <summary>
            Configuration class for the profile import settings element.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Configuration.ProfileImportSettingsElement.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Configuration.ProfileImportSettingsElement"/> class.
            </summary>
            <param name="node">Xml node that represents an profile import setting.</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Configuration.ProfileImportSettingsElement.Name">
            <summary>
            Gets the name of the setting.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Configuration.ProfileImportSettingsElement.Value">
            <summary>
            Gets the value of the setting.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Configuration.DefaultLanguageCultureElement">
            <summary>
            Configuration class for the defaultLanguageCulture/language configuration element.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Configuration.DefaultLanguageCultureElement.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Configuration.DefaultLanguageCultureElement"/> class.
            </summary>
            <param name="node">XML node that represents DefaultLanguageCulture Element.</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Configuration.DefaultLanguageCultureElement.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Configuration.DefaultLanguageCultureElement.Culture">
            <summary>
            Gets or sets the Culture.
            </summary>
            <value>
            The Culture.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Configuration.DefaultLanguageCultureCollection">
            <summary>
            Collection configuration class for the templates configuration element.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Configuration.DefaultLanguageCultureCollection.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Configuration.DefaultLanguageCultureCollection"/> class.
            </summary>
            <param name="parentNode">XML node that holds a collection of DefaultLanguageCulture elements.</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Configuration.DefaultLanguageCultureCollection.Languages">
            <summary>
            Gets the template element list.
            </summary>
            <value>
            The template element list.
            </value>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Configuration.DefaultLanguageCultureCollection.ConvertLanguageToCulture(System.String)">
            <summary>
            Checks to see if a language code has a default culture e.g. en -> en-US, if there is no mapping then the original language is returned
            </summary>
            <param name="language">The language to perform a check on</param>
            <returns>A culture if one is found otherwise the original language</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Configuration.DefaultLanguageCultureCollection.ConvertCultureToLanguage(System.String)">
            <summary>
            Checks to see if a culture has a default language code e.g. en-US -> en, if there is no mapping then the original culture is returned
            </summary>
            <param name="culture">The culture to perform a check on</param>
            <returns>A language if one is found otherwise the original culture</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Configuration.CacheElement">
            <summary>
            Configuration class for the "cache" element.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Configuration.CacheElement.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Configuration.CacheElement"/> class.
            </summary>
            <param name="node">Xmlnode of Cache configuration.</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Configuration.CacheElement.CacheType">
            <summary>
            Gets the type of the cache.
            </summary>
            <value>
            The type of the cache.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Configuration.CacheElement.Enabled">
            <summary>
            Gets a value indicating whether this cache is enabled.
            </summary>
            <value>
              <c>true</c> if enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Configuration.CacheElement.Name">
            <summary>
            Gets the name of the cache.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Configuration.CacheElementCollection">
            <summary>
            Collection configuration class for the cache element.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Configuration.CacheElementCollection.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Configuration.CacheElementCollection"/> class.
            </summary>
            <param name="parentNode">The parent node which holds a collection of cache elements.</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Configuration.CacheElementCollection.DefaultCacheType">
            <summary>
            Gets the default type of the cache.
            </summary>
            <value>
            The default type of the cache.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Configuration.CacheElementCollection.CacheElements">
            <summary>
            Gets the cache elements.
            </summary>
            <value>
            The cache elements.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Configuration.CacheTypeElement">
            <summary>
            Configuration class for the cache type configuration element.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Configuration.CacheTypeElement.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Configuration.CacheTypeElement"/> class.
            </summary>
            <param name="node">Xml note that represents a cache type.</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Configuration.CacheTypeElement.Name">
            <summary>
            Gets the name of the cache type.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Configuration.CacheTypeElement.CacheType">
            <summary>
            Gets the type of the cache.
            </summary>
            <value>
            The type of the cache.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Configuration.CacheTypeElement.CacheTypeString">
            <summary>
            Gets the cache type string.
            </summary>
            <value>
            The cache type string.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Configuration.CacheTypeElementCollection">
            <summary>
            Collection configuration class for the cache types configuration element.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Configuration.CacheTypeElementCollection.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Configuration.CacheTypeElementCollection"/> class.
            </summary>
            <param name="parentNode">Xml node that contains list of Cache type elements.</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Configuration.CacheTypeElementCollection.CacheTypeList">
            <summary>
            Gets the cache type list.
            </summary>
            <value>
            The cache type list.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Configuration.CachingElement">
            <summary>
            Configuration class for the caching configuration element.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Configuration.CachingElement.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Configuration.CachingElement"/> class.
            </summary>
            <param name="parentNode">Parent XML node of the Caching element.</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Configuration.CachingElement.CacheRefreshEnabled">
            <summary>
            Gets a value indicating whether cache refresh is enabled.
            </summary>
            <value>
              <c>true</c> if cache refresh is enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Configuration.CachingElement.CacheRefreshPollingTime">
            <summary>
            Gets the cache refresh polling time.
            </summary>
            <value>
            The cache refresh polling time.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Configuration.CachingElement.Enabled">
            <summary>
            Gets a value indicating whether this cache is enabled.
            </summary>
            <value>
              <c>true</c> if enabled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Configuration.CachingElement.CacheTypeElementCollection">
            <summary>
            Gets the cache type element collection.
            </summary>
            <value>
            The cache type element collection.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Configuration.CachingElement.ExternalIdCachingEnabled">
            <summary>
            Gets a value indicating whether Commerce external ID caching is enabled.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Configuration.CachingElement.DefaultCacheExpirationTime">
            <summary>
            Gets the default cache expiration time.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Configuration.CachingElement.CacheElementCollection">
            <summary>
            Gets the cache element collection.
            </summary>
            <value>
            The cache element collection.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Configuration.CatalogFieldTypeMappingCollection">
            <summary>
            Collection configuration class for the catalog field type configuration element.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Configuration.CatalogFieldTypeMappingCollection.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the CatalogFieldTypeMappingCollection class.
            </summary>
            <param name="parentNode">The parent node.</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Configuration.CatalogFieldTypeMappingCollection.FieldTypeMapping">
            <summary>
            Gets the type list.
            </summary>
            <value>
            The type list.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Configuration.CatalogFieldTypeMappingElement">
            <summary>
            Configuration class for the catalog field type mapping configuration element.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Configuration.CatalogFieldTypeMappingElement.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Configuration.CatalogFieldTypeMappingElement"/> class.
            </summary>
            <param name="node">Xml node that represents Catalog Field Type mapping.</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Configuration.CatalogFieldTypeMappingElement.SitecoreName">
            <summary>
            Gets or sets the name of the sitecore.
            </summary>
            <value>
            The name of the sitecore.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Configuration.CatalogFieldTypeMappingElement.CommerceDataType">
            <summary>
            Gets or sets the type of the commerce data.
            </summary>
            <value>
            The type of the commerce data.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Configuration.CatalogFieldTypeMappingElement.CommercePropertyName">
            <summary>
            Gets or sets the name of the commerce property.
            </summary>
            <value>
            The name of the commerce property.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Configuration.CatalogFieldTypeMappingElement.Source">
            <summary>
            Gets or sets the source.
            </summary>
            <value>
            The source.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Configuration.ConfigurationTypeElement">
            <summary>
            ConigurationTypeElement class definition.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Configuration.ConfigurationTypeElement.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Configuration.ConfigurationTypeElement"/> class.
            </summary>
            <param name="node">The node.</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Configuration.ConfigurationTypeElement.Name">
            <summary>
            Gets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Configuration.ConfigurationTypeElement.TypeAttribute">
            <summary>
            Gets the type.
            </summary>
            <value>
            The type.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Configuration.ConfigurationTypeElement.TypeString">
            <summary>
            Gets the type in a string format as specified in the configuration..
            </summary>
            <value>
            The type string.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Configuration.ConfigurationTypeElement.Lifetime">
            <summary>
            Gets the lifetime of the object.
            </summary>
            <value>
            The lifetime.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Configuration.CommerceServerSitecoreConfig">
            <summary>
            Custom Commerce Server Sitecore configuration section reader.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Configuration.CommerceServerSitecoreConfig.DefaultLanguageValue">
            <summary>
            default language used in Sitecore for the current implementation
            Used only if none has been defined in configuration.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Configuration.CommerceServerSitecoreConfig.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Configuration.CommerceServerSitecoreConfig"/> class.
            </summary>
            <param name="node">The node.</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Configuration.CommerceServerSitecoreConfig.Current">
            <summary>
            Gets the current configuration information.
            </summary>
            <value>
            The current.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Configuration.CommerceServerSitecoreConfig.DefaultLanguage">
            <summary>
            Gets or sets the default language used in Sitecore for the current implementation.
            </summary>
            <value>
            The default language.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Configuration.CommerceServerSitecoreConfig.DefaultCurrency">
            <summary>
            Gets or sets the default currency used in Sitecore for the current implementation.
            </summary>
            <value>
            The default language.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Configuration.CommerceServerSitecoreConfig.ConfigurationProviderTypeString">
            <summary>
            Gets the configuration provider type string.
            </summary>
            <value>
            The configuration provider type string.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Configuration.CommerceServerSitecoreConfig.DefaultCommerceUsersDomain">
            <summary>
            Gets the default commerce users domain
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Configuration.CommerceServerSitecoreConfig.ConfigurationProviderType">
            <summary>
            Gets the type of the configuration provider.
            </summary>
            <value>
            The type of the configuration provider.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Configuration.CommerceServerSitecoreConfig.ConfigurationTypesElementCollection">
            <summary>
            Gets the configuration types element collection.
            </summary>
            <value>
            The configuration types element collection.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Configuration.CommerceServerSitecoreConfig.TemplateElementCollection">
            <summary>
            Gets the template element collection.
            </summary>
            <value>
            The template element collection.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Configuration.CommerceServerSitecoreConfig.DefaultLanguageCultureCollection">
            <summary>
            Gets the default language element collection.
            </summary>
            <value>
            The default language element collection.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Configuration.CommerceServerSitecoreConfig.CatalogFieldTypeMappingCollection">
            <summary>
            Gets the catalog field type mapping collection.
            </summary>
            <value>
            The catalog field type mapping collection.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Configuration.CommerceServerSitecoreConfig.Caching">
            <summary>
            Gets the caching.
            </summary>
            <value>
            The caching.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Configuration.CommerceServerSitecoreConfig.ProfileImport">
            <summary>
            Gets the ProfileImport.
            </summary>
            <value>
            The ProfileImport settings element.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Configuration.CommerceServerSitecoreConfig.Profiles">
            <summary>
            Gets the Profiles element.
            </summary>
            <value>
            The Profiles settings element.
            </value>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Configuration.CommerceServerSitecoreConfig.LoadConfiguration">
            <summary>
            Loads the configuration.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Configuration.ConfigurationTypeElementCollection">
            <summary>
            Collection of ConfigurationTypeElement objects.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Configuration.ConfigurationTypeElementCollection.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Configuration.ConfigurationTypeElementCollection"/> class.
            </summary>
            <param name="parentNode">The parent node.</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Configuration.ConfigurationTypeElementCollection.TypeList">
            <summary>
            Gets the type list.
            </summary>
            <value>
            The type list.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Configuration.TemplateElement">
            <summary>
            Configuration class for the templates/template configuration element.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Configuration.TemplateElement.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Configuration.TemplateElement"/> class.
            </summary>
            <param name="node">XML node that represents Template Element.</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Configuration.TemplateElement.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Configuration.TemplateElement.Id">
            <summary>
            Gets or sets the id.
            </summary>
            <value>
            The id.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Configuration.TemplateElement.DataProviderType">
            <summary>
            Gets or sets the type of the data provider.
            </summary>
            <value>
            The type of the data provider.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Configuration.TemplateElement.DataProviderTypeString">
            <summary>
            Gets or sets the data provider type string.
            </summary>
            <value>
            The data provider type string.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Configuration.TemplateElementCollection">
            <summary>
            Collection configuration class for the templates configuration element.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Configuration.TemplateElementCollection.#ctor(System.Xml.XmlNode)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Configuration.TemplateElementCollection"/> class.
            </summary>
            <param name="parentNode">XML node that holds a collection of Template elements.</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Configuration.TemplateElementCollection.TemplateElementList">
            <summary>
            Gets the template element list.
            </summary>
            <value>
            The template element list.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Configuration.IPropertyTypeMapper">
            <summary>
            Interface for classes mapping properties.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Configuration.IPropertyTypeMapper.MapToSitecoreType(CommerceServer.Core.Catalog.CatalogDataType,System.String,System.String@)">
            <summary>
            Maps the type of to sitecore.
            </summary>
            <param name="commerceDataType">Type of the commerce data.</param>
            <param name="commercePropertyName">Name of the commerce property.</param>
            <param name="source">The source.</param>
            <returns>
            String of Sitecore type.
            </returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Configuration.PropertyTypeMapper">
            <summary>
            Maps Commerce Server properties to Sitecore properties. 
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Configuration.PropertyTypeMapper.MapToSitecoreType(CommerceServer.Core.Catalog.CatalogDataType,System.String,System.String@)">
            <summary>
            Maps the type to a Sitecore type.
            </summary>
            <param name="commerceDataType">Type of the commerce data.</param>
            <param name="commercePropertyName">Name of the commerce property.</param>
            <param name="source">The source.</param>
            <returns>
            String of Sitecore type.
            </returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Configuration.DefaultConfigurationProvider">
            <summary>
            Default configuration provider class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Configuration.DefaultConfigurationProvider.CurrentConfiguration">
            <summary>
            Gets the current configuration information from the Sitecore configuration factory.
            </summary>
            <value>
            The current configuration.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Configuration.IConfigurationProvider">
            <summary>
            IConfigurationProvider interface definition.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Configuration.IConfigurationProvider.CurrentConfiguration">
            <summary>
            Gets the current configuration information from the Sitecore configuration factory.
            </summary>
            <value>
            The current configuration.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Configuration.SitecoreSettingsMapping">
            <summary>
            Sitecore Settings Mapping. 
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Configuration.SitecoreSettingsMapping.FieldId">
            <summary>
            Gets or sets the field id.
            </summary>
            <value>
            The field id.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Configuration.SitecoreSettingsMapping.FieldValue">
            <summary>
            Gets or sets the field value.
            </summary>
            <value>
            The field value.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Configuration.SitecoreSettingsMapping.Language">
            <summary>
            Gets or sets the language value
            </summary>
            <value>
            The language value.
            </value>
            <remarks>string.Empty translates to invariant</remarks>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Connect.CommerceContactFactory">
            <summary>
            The commerce Commerce Server extension of the Connect ContactFactory class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Connect.CommerceContactFactory.GetUserId(Sitecore.Analytics.Tracking.Contact)">
            <summary>
            Gets the UserId of the current contact.
            </summary>
            <param name="contact">The current contact context.</param>
            <returns>The UserId of the current contact.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Connect.CommerceContactFactory.GetUserId">
            <summary>
            Gets the UserId of the current contact.
            </summary>
            <returns>The UserId of the current contact.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Connect.Utility.OrderUtility">
            <summary>
            Provides methods to help instantiate OrderForms, LineItems, and other Order related objects.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Connect.Utility.OrderUtility.CreateOrderForm">
            <summary>
            Creates an OrderForm using the type definition from the configuration settings.
            </summary>
            <returns>An object which inherits from OrderForm.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Connect.Utility.OrderUtility.CreateOrderForm(System.String)">
            <summary>
            Creates an OrderForm using the type definition from the configuration settings.
            </summary>
            <param name="orderFormName">The name of the order form.</param>
            <returns>An object which inherits from OrderForm.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Connect.Utility.OrderUtility.CreateLineItem(System.String,System.String,System.String,System.Decimal)">
            <summary>
            Creates a LineItem using the type definition from the configuration settings.
            </summary>
            <param name="productCatalog">The product catalog name.</param>
            <param name="productId">The product id.</param>
            <param name="productVariantId">The product variant id.</param>
            <param name="quantity">The quantity.</param>
            <returns>An object which inherits from LineItem.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Connect.Utility.OrderUtility.CreateShipment">
            <summary>
            Creates a Shipment using the type definition from the configuration settings.
            </summary>
            <returns>An object which inherits from Shipment.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.UpdateCartLinePrice">
            <summary>
            Pipeline processor responsible for updating the price of cart lines of an <see cref="T:Sitecore.Commerce.Services.Carts.AddCartLinesRequest"/> after the cart has been updated.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.UpdateCartLinePrice.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.UpdateCartLinePrice.UpdatePrice(Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceCartLine,Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceCart)">
            <summary>
            Updates a cart line price based on the provided cart.
            </summary>
            <param name="commerceCartLine">The cart line to update.</param>
            <param name="cart">The current cart.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.CommerceTriggerProductStockStatusPageEvent">
            <summary>
            Used to raise a page event for all items that are out of stock
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.CommerceTriggerProductStockStatusPageEvent.#ctor(Sitecore.Commerce.Entities.IEntityFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.CommerceTriggerProductStockStatusPageEvent"/> class.
            </summary>
            <param name="entityFactory">The entity type factory.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.CommerceTriggerProductStockStatusPageEvent.CreateInventoryProduct(Sitecore.Commerce.Entities.Carts.CartProduct)">
            <summary>
            Creates an instance of an inventory product from a cart product
            </summary>
            <param name="cartProduct">The cart product to create the inventory product from</param>
            <returns>an inventory product</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.AddPromoCodeRequest">
            <summary>
            Defines the AddPromoCodeRequest class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.AddPromoCodeRequest.#ctor(Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceCart,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.AddPromoCodeRequest"/> class.
            </summary>
            <param name="cart">The cart.</param>
            <param name="promoCode">The promo code.</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.AddPromoCodeRequest.PromoCode">
            <summary>
            Gets or sets the promo code.
            </summary>
            <value>
            The promo code.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.AddPromoCodeResult">
            <summary>
            Defines the AddPromoCodeResult class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.AddPromoCodeResult.PromoCode">
            <summary>
            Gets or sets the promo code.
            </summary>
            <value>
            The promo code.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.CommerceGetPaymentMethodsRequest">
            <summary>
            Defines the CommerceGetPaymentMethodsRequest request.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.CommerceGetPaymentMethodsRequest.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.CommerceGetPaymentMethodsRequest"/> class.
            </summary>
            <param name="language">The language.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.CommerceGetPaymentMethodsRequest.#ctor(System.String,Sitecore.Commerce.Entities.Payments.PaymentOption)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.CommerceGetPaymentMethodsRequest"/> class.
            </summary>
            <param name="language">The language.</param>
            <param name="paymentOption">The payment option.</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.CommerceGetPaymentMethodsRequest.Language">
            <summary>
            Gets or sets the language.
            </summary>
            <value>
            The language.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.CommerceGetShippingMethodsRequest">
            <summary>
            Defines the CommerceGetShippingMethodsRequest class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.CommerceGetShippingMethodsRequest.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.CommerceGetShippingMethodsRequest"/> class.
            </summary>
            <param name="language">The language.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.CommerceGetShippingMethodsRequest.#ctor(System.String,Sitecore.Commerce.Entities.Shipping.ShippingOption,Sitecore.Commerce.Entities.Party)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.CommerceGetShippingMethodsRequest"/> class.
            </summary>
            <param name="language">The language.</param>
            <param name="shippingOption">The shipping option.</param>
            <param name="party">The party.</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.CommerceGetShippingMethodsRequest.Language">
            <summary>
            Gets or sets the language.
            </summary>
            <value>
            The language.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.RemovePromoCodeFromCart">
            <summary>
            Defines the RemovePromoCodeFromCart class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.RemovePromoCodeFromCart.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.RemovePromoCodeRequest">
            <summary>
            Defines the RemovePromoCodeRequest class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.RemovePromoCodeRequest.#ctor(Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceCart,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.RemovePromoCodeRequest"/> class.
            </summary>
            <param name="cart">The cart.</param>
            <param name="promoCode">The promo code.</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.RemovePromoCodeRequest.PromoCode">
            <summary>
            Gets or sets the promo code.
            </summary>
            <value>
            The promo code.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.RemovePromoCodeResult">
            <summary>
            Defines the RemovePromoCodeResult class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.RemovePromoCodeResult.PromoCode">
            <summary>
            Gets or sets the promo code.
            </summary>
            <value>
            The promo code.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.LoadCartByNameRequest">
            <summary>
            Defines the LoadCartByNameRequest class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.LoadCartByNameRequest.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.LoadCartByNameRequest"/> class.
            </summary>
            <param name="shopName">Name of the shop.</param>
            <param name="cartName">Name of the cart.</param>
            <param name="userId">The user identifier.</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.LoadCartByNameRequest.CartName">
            <summary>
            Gets or sets the name of the cart.
            </summary>
            <value>
            The name of the cart.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateEntityToCreditCardRequest">
            <summary>
            Defines the TranslateEntityToCreditCardRequest class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateEntityToCreditCardRequest.#ctor(Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceCreditCardPaymentInfo,CommerceServer.Core.Runtime.Orders.CreditCardPayment)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateEntityToCreditCardRequest"/> class.
            </summary>
            <param name="sourcePaymentInfo">The source payment information.</param>
            <param name="destinationCreditCard">The destination credit card.</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateEntityToCreditCardRequest.SourcePaymentInfo">
            <summary>
            Gets or sets the source payment information.
            </summary>
            <value>
            The source payment information.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateEntityToCreditCardRequest.DestinationCreditCard">
            <summary>
            Gets or sets the destination credit card.
            </summary>
            <value>
            The destination credit card.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateEntityToCreditCardResult">
            <summary>
            Defines the TranslateEntityToCreditCardResult class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateEntityToCreditCardResult.DestinationCreditCard">
            <summary>
            Gets or sets the destination credit card.
            </summary>
            <value>
            The destination credit card.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateEntityToOrderAddressRequest">
            <summary>
            Defines the TranslateEntityToOrderAddressRequest class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateEntityToOrderAddressRequest.#ctor(Sitecore.Commerce.Entities.Party,CommerceServer.Core.Runtime.Orders.OrderAddress)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateEntityToOrderAddressRequest"/> class.
            </summary>
            <param name="sourceParty">The source party.</param>
            <param name="destinationAddress">The destination address.</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateEntityToOrderAddressRequest.SourceParty">
            <summary>
            Gets or sets the source party.
            </summary>
            <value>
            The source party.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateEntityToOrderAddressRequest.DestinationAddress">
            <summary>
            Gets or sets the destination address.
            </summary>
            <value>
            The destination address.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateEntityToOrderAddressResult">
            <summary>
            Defines the TranslateEntityToOrderAddressResult class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateEntityToOrderAddressResult.Address">
            <summary>
            Gets or sets the address.
            </summary>
            <value>
            The address.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateOrderAddressToEntityRequest">
            <summary>
            Defines the TranslateOrderAddressToEntityRequest class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateOrderAddressToEntityRequest.#ctor(CommerceServer.Core.Runtime.Orders.OrderAddress,Sitecore.Commerce.Entities.Party)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateOrderAddressToEntityRequest"/> class.
            </summary>
            <param name="sourceAddress">The source address.</param>
            <param name="destinationParty">The destination party.</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateOrderAddressToEntityRequest.DestinationParty">
            <summary>
            Gets or sets the destination party.
            </summary>
            <value>
            The destination party.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateOrderAddressToEntityRequest.SourceAddress">
            <summary>
            Gets or sets the source address.
            </summary>
            <value>
            The source address.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateOrderGroupToOrderHeaderRequest">
            <summary>
            Defines the TranslateOrderGroupToOrderHeaderRequest class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateOrderGroupToOrderHeaderRequest.#ctor(System.String,System.String,CommerceServer.Core.Runtime.Orders.OrderGroup)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateOrderGroupToOrderHeaderRequest"/> class.
            </summary>
            <param name="userId">The user identifier.</param>
            <param name="shopName">Name of the shop.</param>
            <param name="orderGroup">The commerce order group.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateOrderGroupToOrderHeaderResult">
            <summary>
            Defines the TranslateOrderGroupToOrderHeaderResult class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateOrderGroupToOrderHeaderResult.OrderHeader">
            <summary>
            Gets or sets the order header.
            </summary>
            <value>
            The order header.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslatePaymentToEntityRequest">
            <summary>
            Defines the TranslatePaymentToEntityRequest class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslatePaymentToEntityRequest.#ctor(CommerceServer.Core.Runtime.Orders.Payment)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslatePaymentToEntityRequest" /> class.
            </summary>
            <param name="sourcePayment">The source payment.</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslatePaymentToEntityRequest.SourcePayment">
            <summary>
            Gets or sets the source payment.
            </summary>
            <value>
            The source payment.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslatePaymentToEntityResult">
            <summary>
            Defines the TranslatePaymentToEntityResult class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslatePaymentToEntityResult.DestinationPaymentInfo">
            <summary>
            Gets or sets the destination payment information.
            </summary>
            <value>
            The destination payment information.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateShipmentToEntityRequest">
            <summary>
            Defines the TranslateShipmentToEntityRequest class.
            Used to translate from a Commerce Server Shipment to an CommerceConnect ShippingInfo.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateShipmentToEntityRequest.#ctor(CommerceServer.Core.Runtime.Orders.Shipment,Sitecore.Commerce.Entities.Carts.ShippingInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateShipmentToEntityRequest"/> class.
            </summary>
            <param name="sourceShipment">The source shipment.</param>
            <param name="destinationShippingParty">The destination shipping party.</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateShipmentToEntityRequest.SourceShipment">
            <summary>
            Gets or sets the source shipment.
            </summary>
            <value>
            The source shipment.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateShipmentToEntityRequest.DestinationShippingInfo">
            <summary>
            Gets or sets the destination shipping information.
            </summary>
            <value>
            The destination shipping information.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.AddPartiesToCart">
            <summary>
            Defines the AddPartiesToCart class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.AddPartiesToCart.#ctor(Sitecore.Commerce.Entities.IEntityFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.AddPartiesToCart"/> class.
            </summary>
            <param name="entityFactory">The entity factory.</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.AddPartiesToCart.EntityFactory">
            <summary>
            Gets or sets the entity factory.
            </summary>
            <value>
            The entity factory.
            </value>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.AddPartiesToCart.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.AddPartiesToCart.ProcessParty(Sitecore.Commerce.Entities.Party,Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.CartPipelineContext)">
            <summary>
            Processes the party.
            </summary>
            <param name="party">The party.</param>
            <param name="cartContext">The cart context.</param>
            <returns>A party instance.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.AddPartiesToCart.AddUserProfileAddress(Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceParty,Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.CartPipelineContext)">
            <summary>
            Adds the user profile address.
            </summary>
            <param name="party">The party.</param>
            <param name="cartContext">The cart context.</param>
            <returns>The commerce party that was added.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.AddPartiesToCart.AddParty(Sitecore.Commerce.Entities.Party,System.String,Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.CartPipelineContext)">
            <summary>
            Adds the party.
            </summary>
            <param name="party">The party.</param>
            <param name="entityName">Name of the entity.</param>
            <param name="cartContext">The cart context.</param>
            <returns>
            The commerce party that was added.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.AddPartiesToCart.GetProfileRepository">
            <summary>
            Gets the profile repository.
            </summary>
            <returns>An instance of the profile respository.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.AddPartiesToCart.GetPartyName(Sitecore.Commerce.Entities.Party)">
            <summary>
            Gets the name of the party.
            </summary>
            <param name="party">The party.</param>
            <returns>The name of the party.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.AddPaymentInfoToCart">
            <summary>
            Defines AddPaymentInfoToCart class.
            Used to add payment information to a cart.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.AddPaymentInfoToCart.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.AddPaymentInfoToCart.ValidatePaymentInfo(Sitecore.Commerce.Entities.Carts.PaymentInfo)">
            <summary>
            Validates the payment information.
            </summary>
            <param name="paymentInfo">The payment information.</param>
            <returns>True of the given payment information is valid; Otherwise false.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.AddPaymentInfoToCart.AddPayment(Sitecore.Commerce.Entities.Carts.PaymentInfo,CommerceServer.Core.Runtime.Orders.OrderForm,Sitecore.Commerce.Services.Carts.AddPaymentInfoRequest,CommerceServer.Core.Runtime.Orders.Payment@)">
            <summary>
            Adds the payment.
            </summary>
            <param name="paymentInfo">The payment information.</param>
            <param name="orderForm">The order form.</param>
            <param name="request">The request.</param>
            <param name="createdPayment">The created payment.</param>
            <returns>
            True if the payment was added; Otherwise false.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.AddPaymentInfoToCart.AddCreditCardPayment(Sitecore.Commerce.Entities.Carts.PaymentInfo,CommerceServer.Core.Runtime.Orders.OrderForm,Sitecore.Commerce.Services.Carts.AddPaymentInfoRequest,CommerceServer.Core.Runtime.Orders.Payment@)">
            <summary>
            Adds the credit card payment.
            </summary>
            <param name="paymentInfo">The payment information.</param>
            <param name="orderForm">The order form.</param>
            <param name="request">The request.</param>
            <param name="createdPayment">The created payment.</param>
            <returns>
            True if the payment was added successfully; Otherwise false.
            </returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.AddPromoCodeToCart">
            <summary>
            Defines the AddPromoCodeToCart class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.AddPromoCodeToCart.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.AddShippingInfoToCart">
            <summary>
            Defines the AddShippingInfoToCart class.
            Used to add ShippingInfo to a cart.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.AddShippingInfoToCart.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.AddShippingInfoToCart.ValidateShippingMethod(Sitecore.Commerce.Entities.Carts.ShippingInfo)">
            <summary>
            Validates the shipping method.
            </summary>
            <param name="shippingInfo">The shipping information.</param>
            <returns>True of valid; Otherwise false.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.AddShippingInfoToCart.AddShipping(Sitecore.Commerce.Entities.Carts.ShippingInfo,CommerceServer.Core.Runtime.Orders.OrderForm,Sitecore.Commerce.Services.Carts.AddShippingInfoRequest)">
            <summary>
            Adds the shipping.
            </summary>
            <param name="shippingInfo">The shipping information.</param>
            <param name="orderForm">The order form.</param>
            <param name="request">The request.</param>
            <returns>True if a line item was modified with the shipping information; Otherwise false.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.AddShippingInfoToCart.AddAdditionalInformationToLineItem(CommerceServer.Core.Runtime.Orders.LineItem,Sitecore.Commerce.Entities.Carts.ShippingInfo,Sitecore.Commerce.Services.Carts.AddShippingInfoRequest)">
            <summary>
            Adds the additional information to line item.
            </summary>
            <param name="lineItem">The line item.</param>
            <param name="shippingInfo">The shipping information.</param>
            <param name="request">The request.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.RemovePartiesFromCart">
            <summary>
            Defines the RemovePartiesFromCart class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.RemovePartiesFromCart.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.RemovePaymentInfoFromCart">
            <summary>
            Defines RemovePaymentInfoFromCart class.
            Used to removed payment information from a cart.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.RemovePaymentInfoFromCart.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.RemovePaymentInfoFromCart.RemovePayment(Sitecore.Commerce.Entities.Carts.PaymentInfo,CommerceServer.Core.Runtime.Orders.OrderForm,Sitecore.Commerce.Services.Carts.RemovePaymentInfoRequest)">
            <summary>
            Removes the payment.
            </summary>
            <param name="paymentInfo">The payment information.</param>
            <param name="orderForm">The order form.</param>
            <param name="request">The request.</param>
            <returns>True if payment information was removed; Otherwise false.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.RemoveShippingInfoFromCart">
            <summary>
            Defines the RemoveShippingInfoFromCart class.
            Used to remove shipping information from the cart.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.RemoveShippingInfoFromCart.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.RemoveShippingInfoFromCart.RemoveShipping(Sitecore.Commerce.Entities.Carts.ShippingInfo,CommerceServer.Core.Runtime.Orders.OrderForm,Sitecore.Commerce.Services.Carts.RemoveShippingInfoRequest)">
            <summary>
            Removes the shipping.
            </summary>
            <param name="shippingInfo">The shipping information.</param>
            <param name="orderForm">The order form.</param>
            <param name="request">The request.</param>
            <returns>True if the shipping information was removed from a line item; Otherwise false.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.RunTotalPipeline">
            <summary>
            Defines the RunTotalPipeline pipeline processor.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.RunTotalPipeline.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.RunTotalPipeline"/> class.
            </summary>
            <param name="pipelineName">Name of the pipeline.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.RunTotalPipeline.CanRunPipeline(CommerceServer.Core.Runtime.Orders.Basket)">
            <summary>
            Determines whether this instance [can run pipeline] the specified basket.
            </summary>
            <param name="basket">The basket.</param>
            <returns>
            True if the pipeline can be executed; Otherwise false.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.RunTotalPipeline.IsValidShippingMethod(System.Guid)">
            <summary>
            Determines whether the given shipping method is valid and defined in Commerce Server.
            </summary>
            <param name="shippingMethodId">The shipping method identifier.</param>
            <returns>True if the given shipping method is valid; Otherwise false.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateEntityToCreditCard">
            <summary>
            Defines the TranslateEntityToCreditCard class.
            Translates a credit card payment to a Commerce Server credit card payment.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateEntityToCreditCard.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateEntityToCreditCard.Translate(Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceCreditCardPaymentInfo,CommerceServer.Core.Runtime.Orders.CreditCardPayment,Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateEntityToCreditCardRequest)">
            <summary>
            Translates the specified source payment information.
            </summary>
            <param name="sourcePaymentInfo">The source payment information.</param>
            <param name="destinationCreditCard">The destination credit card.</param>
            <param name="request">The request.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateEntityToCreditCard.TranslateCustomProperties(Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceCreditCardPaymentInfo,CommerceServer.Core.Runtime.Orders.CreditCardPayment,Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateEntityToCreditCardRequest)">
            <summary>
            Translates the custom properties.
            </summary>
            <param name="sourcePaymentInfo">The source payment information.</param>
            <param name="destinationCreditCard">The destination credit card.</param>
            <param name="request">The request.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateEntityToOrderAddress">
            <summary>
            Defines the TranslateEntityToOrderAddress class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateEntityToOrderAddress.#ctor(Sitecore.Commerce.Entities.IEntityFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateEntityToOrderAddress"/> class.
            </summary>
            <param name="entityFactory">The entity factory.</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateEntityToOrderAddress.EntityFactory">
            <summary>
            Gets or sets the entity factory.
            </summary>
            <value>
            The entity factory.
            </value>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateEntityToOrderAddress.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateEntityToOrderAddress.Translate(Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceParty,CommerceServer.Core.Runtime.Orders.OrderAddress)">
            <summary>
            Translates the specified source party.
            </summary>
            <param name="sourceParty">The source party.</param>
            <param name="destinationAddress">The destination address.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateEntityToOrderAddress.TranslateCustomProperties(Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceParty,CommerceServer.Core.Runtime.Orders.OrderAddress)">
            <summary>
            Translates the custom properties.
            </summary>
            <param name="sourceParty">The source party.</param>
            <param name="destinationAddress">The destination address.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateEntityToOrderAddress.TranslateEmailParty(Sitecore.Commerce.Entities.EmailParty,CommerceServer.Core.Runtime.Orders.OrderAddress)">
            <summary>
            Translates the email party.
            </summary>
            <param name="sourceParty">The source party.</param>
            <param name="destinationAddress">The destination address.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateEntityToOrderAddress.TranslateEmailPartyCustomProperties(Sitecore.Commerce.Entities.EmailParty,CommerceServer.Core.Runtime.Orders.OrderAddress)">
            <summary>
            Translates the custom properties.
            </summary>
            <param name="sourceParty">The source party.</param>
            <param name="destinationAddress">The destination address.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateEntityToOrderAddress.TranslateCustomParty(Sitecore.Commerce.Entities.Party,CommerceServer.Core.Runtime.Orders.OrderAddress)">
            <summary>
            Translates the custom party.
            </summary>
            <param name="sourceParty">The source party.</param>
            <param name="destinationAddress">The destination address.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateOrderAddressToEntity">
            <summary>
            Defines the TranslateOrderAddressToEntity class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateOrderAddressToEntity.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateOrderAddressToEntity.Translate(Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateOrderAddressToEntityRequest,CommerceServer.Core.Runtime.Orders.OrderAddress,Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceParty)">
            <summary>
            Translates the specified request.
            </summary>
            <param name="request">The request.</param>
            <param name="sourceAddress">The source address.</param>
            <param name="destinationParty">The destination party.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateOrderAddressToEntity.TranslateCustomAddressProperties(CommerceServer.Core.Runtime.Orders.OrderAddress,Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceParty)">
            <summary>
            Translates the custom address properties.
            </summary>
            <param name="sourceAddress">The source address.</param>
            <param name="destinationParty">The destination party.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateOrderAddressToEntity.TranslateToEmailParty(CommerceServer.Core.Runtime.Orders.OrderAddress,Sitecore.Commerce.Entities.EmailParty)">
            <summary>
            Translates to email party.
            </summary>
            <param name="sourceAddress">The source address.</param>
            <param name="destinationParty">The destination party.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateOrderAddressToEntity.TranslateToCustomAddressProperties(CommerceServer.Core.Runtime.Orders.OrderAddress,Sitecore.Commerce.Entities.EmailParty)">
            <summary>
            Translates to custom address properties.
            </summary>
            <param name="sourceAddress">The source address.</param>
            <param name="destinationParty">The destination party.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateOrderAddressToEntity.TranslateToCustomParty(CommerceServer.Core.Runtime.Orders.OrderAddress,Sitecore.Commerce.Entities.Party)">
            <summary>
            Translates to custom party.
            </summary>
            <param name="sourceAddress">The source address.</param>
            <param name="destinationParty">The destination party.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.GetVisitorOrderDetail">
            <summary>
            Defines the GetVisitorOrderDetail class.
            Returns visitor order detail information.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.GetVisitorOrderDetail.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateOrderGroupToOrderHeader">
            <summary>
            Defines the TranslateOrderGroupToOrderHeader class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateOrderGroupToOrderHeader.#ctor(Sitecore.Commerce.Entities.IEntityFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateOrderGroupToOrderHeader"/> class.
            </summary>
            <param name="entityFactory">The entity factory.</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateOrderGroupToOrderHeader.EntityFactory">
            <summary>
            Gets the entity factory.
            </summary>
            <value>
            The entity factory.
            </value>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateOrderGroupToOrderHeader.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateOrderGroupToOrderHeader.TranslateToOrderHeader(Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateOrderGroupToOrderHeaderRequest,CommerceServer.Core.Runtime.Orders.OrderGroup,Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceOrderHeader)">
            <summary>
            Translates to order header.
            </summary>
            <param name="request">The request.</param>
            <param name="origin">The origin.</param>
            <param name="destination">The destination.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateOrderGroupToOrderHeader.TranslateCommerceConnectProperties(Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateOrderGroupToOrderHeaderRequest,Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceOrderHeader)">
            <summary>
            Translates the CommerceConnect properties.
            </summary>
            <param name="request">The request.</param>
            <param name="orderHeader">The order header.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateOrderGroupToOrderHeader.TranslateKnownWeaklyTypedProperties(Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateOrderGroupToOrderHeaderRequest,CommerceServer.Core.Runtime.Orders.OrderGroup,Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceOrderHeader)">
            <summary>
            Translates the known weakly typed properties.
            </summary>
            <param name="request">The request.</param>
            <param name="origin">The origin.</param>
            <param name="destination">The destination.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateOrderGroupToOrderHeader.MapWeaklyTypedProperties(CommerceServer.Core.Runtime.Orders.OrderGroup,Sitecore.Commerce.Entities.Entity)">
            <summary>
            Maps the weakly typed properties.
            </summary>
            <param name="origin">The origin.</param>
            <param name="destination">The destination.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslatePaymentToEntity">
            <summary>
            Defines the TranslatePaymentToEntity class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslatePaymentToEntity.#ctor(Sitecore.Commerce.Entities.IEntityFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslatePaymentToEntity"/> class.
            </summary>
            <param name="entityFactory">The entity factory.</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslatePaymentToEntity.EntityFactory">
            <summary>
            Gets or sets the entity factory.
            </summary>
            <value>
            The entity factory.
            </value>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslatePaymentToEntity.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslatePaymentToEntity.Translate(Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslatePaymentToEntityRequest,CommerceServer.Core.Runtime.Orders.Payment)">
            <summary>
            Translates the specified request.
            </summary>
            <param name="request">The request.</param>
            <param name="sourcePayment">The source payment.</param>
            <returns>The translated PaymentInfo; Otherwise null if it could not be translated.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslatePaymentToEntity.TranslateCreditCardPaymentInfo(CommerceServer.Core.Runtime.Orders.CreditCardPayment)">
            <summary>
            Translates the credit card payment information.
            </summary>
            <param name="creditCardPayment">The credit card payment.</param>
            <returns>The translated CommerceCreditCardInfo</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslatePaymentToEntity.TranslateCustomCreditCardPaymentInfoProperties(CommerceServer.Core.Runtime.Orders.CreditCardPayment,Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceCreditCardPaymentInfo)">
            <summary>
            Translates the custom credit card payment information properties.
            </summary>
            <param name="creditCardPayment">The credit card payment.</param>
            <param name="destinationPaymentInfo">The destination payment information.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslatePaymentToEntity.MapWeaklyTypedProperties(CommerceServer.Core.Runtime.Orders.Payment,Sitecore.Commerce.Entities.Carts.PaymentInfo)">
            <summary>
            Maps the weakly typed properties.
            </summary>
            <param name="origin">The origin.</param>
            <param name="destination">The destination.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateShipmentToEntity">
            <summary>
            Defines the TranslateShipmentToEntity class.
            Translates a Commerce Server Shipment to an CommerceConnect ShippingInfo.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateShipmentToEntity.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateShipmentToEntity.Translate(Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateShipmentToEntityRequest,CommerceServer.Core.Runtime.Orders.Shipment,Sitecore.Commerce.Entities.Carts.ShippingInfo)">
            <summary>
            Translates the specified request.
            </summary>
            <param name="request">The request.</param>
            <param name="sourceShipment">The source shipment.</param>
            <param name="destinationShippingInfo">The destination shipping information.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateShipmentToEntity.MapWeaklyTypedProperties(CommerceServer.Core.Runtime.Orders.Shipment,Sitecore.Commerce.Entities.Carts.ShippingInfo)">
            <summary>
            Maps the weakly typed properties.
            </summary>
            <param name="origin">The origin.</param>
            <param name="destination">The destination.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.UpdatePartiesInCart">
            <summary>
            Defines the UpdatePartiesInCart class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.UpdatePartiesInCart.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateOrderGroupToEntityRequest">
            <summary>
            Request used to translate a commerce OrderGroup into a CommerceCart entity.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateOrderGroupToEntityRequest.#ctor(System.String,System.String,CommerceServer.Core.Runtime.Orders.OrderGroup)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateOrderGroupToEntityRequest"/> class.
            </summary>
            <param name="userId">The user identifier.</param>
            <param name="shopName">Name of the shop.</param>
            <param name="orderGroup">The commerce order group.</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateOrderGroupToEntityRequest.UserId">
            <summary>
            Gets or sets the user identifier.
            </summary>
            <value>
            The user identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateOrderGroupToEntityRequest.ShopName">
            <summary>
            Gets or sets the name of the shop.
            </summary>
            <value>
            The name of the shop.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateOrderGroupToEntityRequest.OrderGroup">
            <summary>
            Gets or sets the order group.
            </summary>
            <value>
            The order group.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateOrderGroupToEntityResult">
            <summary>
            Result returned by a TranslateOrderGroupToEntityResult.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateOrderGroupToEntityResult.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateOrderGroupToEntityResult"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateOrderGroupToEntityResult.#ctor(Sitecore.Commerce.Entities.Carts.Cart)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateOrderGroupToEntityResult"/> class.
            </summary>
            <param name="cart">The cart.</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateOrderGroupToEntityResult.Cart">
            <summary>
            Gets or sets the cart.
            </summary>
            <value>
            The cart.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.AddLinesToCart">
            <summary>
            Defines the AddLinesToCart pipeline processor.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.AddLinesToCart.#ctor(System.String,Sitecore.Commerce.Multishop.IEaPlanProvider,Sitecore.Commerce.Data.Carts.ICartRepository)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.AddLinesToCart" /> class.
            </summary>
            <param name="rollup">if set to <c>true</c> cart lines for the same product will be rolled up into the same cart line with an updated quantity.</param>
            <param name="engagementPlanProvider">The ea plan provider.</param>
            <param name="repository">The cart repository.</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.AddLinesToCart.Rollup">
            <summary>
            Gets or sets a value indicating whether to roll up the cartlines.
            </summary>
            <value>
            <c>true</c> if we need to roll up the cartlines; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.AddLinesToCart.EaPlanProvider">
            <summary>
            Gets or sets the ea plan provider.
            </summary>
            <value>
            The ea plan provider.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.AddLinesToCart.CartRepository">
            <summary>
            Gets or sets the cart repository.
            </summary>
            <value>
            The cart repository.
            </value>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.AddLinesToCart.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.AddLinesToCart.AppendedLineItemProperties(Sitecore.Commerce.Services.Carts.AddCartLinesRequest,Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceCartLine,CommerceServer.Core.Runtime.Orders.LineItem)">
            <summary>
            Add any appended custom properties to the <see cref="T:CommerceServer.Core.Runtime.Orders.LineItem" />
            </summary>
            <param name="request">The request.</param>
            <param name="cartLine">The cart line.</param>
            <param name="lineItem">The line item.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.MergeCart">
            <summary>
            MergeCart pipeline processor
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.MergeCart.#ctor(Sitecore.Commerce.Services.Carts.CartServiceProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.MergeCart"/> class
            </summary>
            <param name="cartServiceProvider">the cart service provider</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.MergeCart.OrderFormDefaultName">
            <summary>
            Gets or sets the order form default name 
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.MergeCart.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Process the pipeline
            </summary>
            <param name="args">the pipeline args</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.MergeCart.GetOrderFormId(Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceCart)">
            <summary>
            Get the orderform id for assigning to the fromCart cart lines
            </summary>
            <param name="toCart">the destination cart</param>
            <returns>the orderform id of the "default" orderform on the toCart</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.MergeCart.MergePromoCodes(Sitecore.Commerce.Services.Carts.MergeCartRequest,Sitecore.Commerce.Services.Carts.CartResult)">
            <summary>
            Merges promocodes of the carts.
            </summary>
            <param name="mergeCartRequest">The merge cart request.</param>
            <param name="cartResult">The cart result.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.MergeCart.MergeCartLines(Sitecore.Commerce.Services.Carts.MergeCartRequest,Sitecore.Commerce.Services.Carts.CartResult)">
            <summary>
            Merges cart lines of the carts.
            </summary>
            <param name="mergeCartRequest">The merge cart request.</param>
            <param name="cartResult">The cart result.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.MergeCart.AddToProvidedCartWithoutSaving(Sitecore.Commerce.Entities.Carts.Cart,Sitecore.Commerce.Entities.Carts.CartLine)">
            <summary>
            Add the cart lines to the cart without saving 
            </summary>
            <param name="cart">the ToCart</param>
            <param name="cartLine">the cart lines to add</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.CommerceOrderPipelineProcessor">
            <summary>
            Defines the CommerceOrderPipelineProcessor class.
            Base class used by all commerce server order pipeline processors.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.GetPaymentMethods">
            <summary>
            Defines the GetPaymentMethods class.
            Processor used to return Commerce Server payment methods.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.GetPaymentMethods.#ctor(Sitecore.Commerce.Entities.IEntityFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.GetPaymentMethods"/> class.
            </summary>
            <param name="entityFactory">The entity factory.</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.GetPaymentMethods.EntityFactory">
            <summary>
            Gets or sets the entity factory.
            </summary>
            <value>
            The entity factory.
            </value>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.GetPaymentMethods.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.GetPaymentMethods.TranslateRow(System.Data.DataRow,Sitecore.Commerce.Entities.Payments.PaymentMethod)">
            <summary>
            Translates the row.
            </summary>
            <param name="row">The row.</param>
            <param name="paymentMethod">The payment method.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.GetShippingMethods">
            <summary>
            Defines the GetShippingMethods class.
            Used to return the commerce server shipping methods.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.GetShippingMethods.#ctor(Sitecore.Commerce.Entities.IEntityFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.GetShippingMethods"/> class.
            </summary>
            <param name="entityFactory">The entity factory.</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.GetShippingMethods.EntityFactory">
            <summary>
            Gets or sets the entity factory.
            </summary>
            <value>
            The entity factory.
            </value>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.GetShippingMethods.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.GetShippingMethods.TranslateRow(System.Data.DataRow,Sitecore.Commerce.Entities.Shipping.ShippingMethod)">
            <summary>
            Translates the row.
            </summary>
            <param name="row">The row.</param>
            <param name="shippingMethod">The shipping method.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.GetVisitorOrders">
            <summary>
            Defines the GetVisitorOrders processor.
            Returns a list of orders for a given visitor.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.GetVisitorOrders.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.SubmitVisitorOrder">
            <summary>
            Define the SubmitVisitorOrder class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.SubmitVisitorOrder.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.CartPipelineContext">
            <summary>
            Cart pipeline context class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.CartPipelineContext.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.CartPipelineContext"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.CartPipelineContext.Basket">
            <summary>
            Gets or sets the basket.
            </summary>
            <value>
            The basket.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.CartPipelineContext.UserId">
            <summary>
            Gets or sets the user identifier.
            </summary>
            <value>
            The user identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.CartPipelineContext.ShopName">
            <summary>
            Gets or sets the name of the shop.
            </summary>
            <value>
            The name of the shop.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.CartPipelineContext.HasBasketErrors">
            <summary>
            Gets or sets a value indicating whether this instance has basket errors.
            </summary>
            <value>
            <c>true</c> if this instance has basket errors; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.CartPipelineContext.Refresh">
            <summary>
            Gets or sets a value indicating whether or not the basket should be recalulcated using the Commerce Server pipelines
            </summary>
            <value>
            <c>true</c> if pipelines should be run; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.CartPipelineContext.Get(Sitecore.Commerce.Services.ServiceProviderRequestContext)">
            <summary>
            Gets the specified cart pipeline context from the request.  If the request did not have one, a new CartPipelineContext is created, 
            added to the request and returned.
            </summary>
            <param name="requestContext">The request.</param>
            <returns>Always return a pipeline context.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.CommerceCartPipelineProcessor">
            <summary>
            Defines the base cart pipeline processor.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.DeleteCart">
            <summary>
            Defines the DeleteCart pipeline processor.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.DeleteCart.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.GetCarts">
            <summary>
            Defines the GetCarts pipeline processor.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.GetCarts.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.GetCarts.AddSearchClauses(CommerceServer.Core.SearchClauseFactory,Sitecore.Commerce.Services.Carts.GetCartsRequest,System.Collections.Generic.List{CommerceServer.Core.SearchClause})">
            <summary>
            Adds the search clauses to the given searchClauseList.
            </summary>
            <param name="searchClauseFactory">The search clause factory.</param>
            <param name="request">The request.</param>
            <param name="searchClauseList">The search clause list.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.GetCarts.PrepareUnionSearch``1(CommerceServer.Core.SearchClauseFactory,System.Collections.Generic.IEnumerable{System.String},System.String)">
            <summary>
            Prepares the union search.
            </summary>
            <typeparam name="TPropertyValueType">The type of the property value.</typeparam>
            <param name="searchClauseFactory">The search clause factory.</param>
            <param name="collection">The collection representing the items to be added to the search.</param>
            <param name="basketProperty">The property to search on.</param>
            <returns>
            A single search clause for all items found in the collection.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.GetCarts.GetPropertyValue``1(System.Object)">
            <summary>
            Gets the property value.
            </summary>
            <typeparam name="TPropertyValueType">The type of the property.</typeparam>
            <param name="propertyValue">The property value.</param>
            <returns>The value in the type specified by PropertyValueType.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.GetCarts.PrepareFinalSearchClause(CommerceServer.Core.SearchClauseFactory,System.Collections.Generic.List{CommerceServer.Core.SearchClause})">
            <summary>
            Prepares the final basket search clause to be executed.
            </summary>
            <param name="searchClauseFactory">The search clause factory.</param>
            <param name="searchClauseList">The search clause list.</param>
            <returns>The final search clause to be executed.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.LoadCart">
            <summary>
            Defines the LoadCart pipeline processor.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.LoadCart.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.LoadCart.ResolveUserId(System.String,System.Guid@)">
            <summary>
            Resolves the user identifier.
            </summary>
            <param name="givenUserID">The given user identifier.</param>
            <param name="csUserId">The cs user identifier.</param>
            <returns>true if the userId has been resolved; Otherwise false.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.LockCart">
            <summary>
            Defines the LockCart pipeline processor.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.LockCart.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.LockCart.LockBasket(Sitecore.Commerce.Services.Carts.LockCartRequest,CommerceServer.Core.Runtime.Orders.Basket)">
            <summary>
            Locks the basket.
            </summary>
            <param name="request">The request.</param>
            <param name="basket">The basket.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.RemoveLinesFromCart">
            <summary>
            Defines the RemoveLinesFromCart pipeline processor.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.RemoveLinesFromCart.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.RemoveLinesFromCart.RemoveCommerceLineItem(CommerceServer.Core.Runtime.Orders.Basket,Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceCartLine)">
            <summary>
            Removes the commerce line item.
            </summary>
            <param name="basket">The basket.</param>
            <param name="cartLine">The cart line to remove.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.ResolveBasket">
            <summary>
            Defines the ResolveBasket pipeline processor.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.ResolveBasket.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.ResolveBasket.GetRequestArguments(Sitecore.Commerce.Services.ServiceProviderRequest,System.String@,System.String@,System.String@)">
            <summary>
            Gets the request arguments.
            </summary>
            <param name="request">The request.</param>
            <param name="userId">The user identifier.</param>
            <param name="cartName">Name of the cart.</param>
            <param name="shopName">Name of the shop.</param>
            <exception cref="T:System.InvalidOperationException">The given request object type is not understood.</exception>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.RunPipeline">
            <summary>
            Defines the RunPipeline pipeline processor.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.RunPipeline.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.RunPipeline"/> class.
            </summary>
            <param name="pipelineName">Name of the pipeline.</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.RunPipeline.PipelineName">
            <summary>
            Gets or sets the name of the pipeline.
            </summary>
            <value>
            The name of the pipeline.
            </value>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.RunPipeline.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.RunPipeline.SetResultingCart(Sitecore.Commerce.Services.ServiceProviderResult,Sitecore.Commerce.Entities.Carts.Cart,Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.CartPipelineContext)">
            <summary>
            Sets the resulting cart.
            </summary>
            <param name="result">The result.</param>
            <param name="cart">The cart.</param>
            <param name="context">The context.</param>
            <exception cref="T:System.InvalidOperationException">The given result object type is not understood.</exception>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.RunPipeline.CanRunPipeline(CommerceServer.Core.Runtime.Orders.Basket)">
            <summary>
            Determines whether this instance [can run pipeline] the specified basket.
            </summary>
            <param name="basket">The basket.</param>
            <returns>
            True if the pipeline can be executed; Otherwise false.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.RunPipeline.RunCommercePipeline(CommerceServer.Core.Runtime.Orders.OrderGroup,System.String,Sitecore.Commerce.Services.ServiceProviderRequest)">
            <summary>
            Runs the commerce pipeline.
            </summary>
            <param name="orderGroup">The order group.</param>
            <param name="pipelineName">Name of the pipeline.</param>
            <param name="request">The cart request.</param>
            <returns>
            The result of the commerce pipeline execution.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.RunPipeline.AddAdditionalInformationToPipelineInfo(Sitecore.Commerce.Services.ServiceProviderRequest,CommerceServer.Core.Runtime.Orders.PipelineInfo)">
            <summary>
            Adds additional information to pipeline information if necessary.
            </summary>
            <param name="request">The cart request.</param>
            <param name="pipelineInfo">The pipeline information.</param>
            <remarks>
                This is an extensibility point to add extra data to the pipeline info
                For example: to allow for targeting other profile types - like Address
            </remarks>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.RunPipeline.CheckPipelineResults(CommerceServer.Core.Runtime.Orders.OrderGroup,CommerceServer.Core.Runtime.Orders.PipelineExecutionResult,Sitecore.Commerce.Entities.Carts.Cart,Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.CartPipelineContext)">
            <summary>
            Checks the pipeline execution results.
            </summary>
            <param name="orderGroup">The order group.</param>
            <param name="pipelineResult">The pipeline result.</param>
            <param name="cartResult">The cart result.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.SaveCart">
            <summary>
            Defines the SaveCart pipeline processor.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.SaveCart.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateOrderGroupToEntity">
            <summary>
            Pipeline processor to translate from a Commerve Server OrderGroup to the CommerceCart CommerceConnect entity.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateOrderGroupToEntity.#ctor(Sitecore.Commerce.Entities.IEntityFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateOrderGroupToEntity"/> class.
            </summary>
            <param name="entityFactory">The entity factory.</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateOrderGroupToEntity.EntityFactory">
            <summary>
            Gets the entity factory.
            </summary>
            <value>
            The entity factory.
            </value>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateOrderGroupToEntity.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateOrderGroupToEntity.TranslateToCommerceOrder(Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateOrderGroupToEntityRequest,CommerceServer.Core.Runtime.Orders.OrderGroup,Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceOrder)">
            <summary>
            Translates to commerce order.
            </summary>
            <param name="request">The request.</param>
            <param name="origin">The origin.</param>
            <param name="destination">The destination.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateOrderGroupToEntity.TranslateToCommerceCart(Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateOrderGroupToEntityRequest,CommerceServer.Core.Runtime.Orders.OrderGroup,Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceCart)">
            <summary>
            Translates a Commerce Server basket to a specific CommerceConnect cart
            </summary>
            <param name="request">The request.</param>
            <param name="origin">The Commerce Server basket</param>
            <param name="destination">The CommerceConnect cart to copy to</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateOrderGroupToEntity.TranslateKnownWeaklyTypedProperties(Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateOrderGroupToEntityRequest,CommerceServer.Core.Runtime.Orders.OrderGroup,Sitecore.Commerce.Entities.Carts.Cart)">
            <summary>
            Translates the known weakly typed properties.
            </summary>
            <param name="request">The request.</param>
            <param name="origin">The origin.</param>
            <param name="destination">The destination.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateOrderGroupToEntity.TranslateCommerceConnectProperties(Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateOrderGroupToEntityRequest,Sitecore.Commerce.Entities.Carts.Cart)">
            <summary>
            Translates the CommerceConnect properties.
            </summary>
            <param name="request">The request.</param>
            <param name="cart">The cart.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateOrderGroupToEntity.TranslateAddresses(CommerceServer.Core.Runtime.Orders.OrderAddressCollection,Sitecore.Commerce.Entities.Carts.Cart)">
            <summary>
            Translates the addresses.
            </summary>
            <param name="collection">The collection.</param>
            <param name="cart">The cart.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateOrderGroupToEntity.TranslateAddress(CommerceServer.Core.Runtime.Orders.OrderAddress,Sitecore.Commerce.Entities.Party)">
            <summary>
            Translates the address.
            </summary>
            <param name="sourceAddress">The source address.</param>
            <param name="destinationParty">The destination party.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateOrderGroupToEntity.GetTranslatedOrderForms(CommerceServer.Core.Runtime.Orders.OrderGroup,Sitecore.Commerce.Entities.Carts.Cart,System.Boolean)">
            <summary>
            Converts a collection of OrderForms in a basket into CommerceConnect order forms and adds them to an CommerceConnect cart
            </summary>
            <param name="orderGroup">The basket to copy the OrderForms from</param>
            <param name="cart">The cart to copy the order forms to</param>
            <param name="isCart">If the order group is a cart or not</param>
            <returns>A list of CommerceOrderForm objects.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateOrderGroupToEntity.TranslateOrderForm(CommerceServer.Core.Runtime.Orders.OrderForm,Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceOrderForm,CommerceServer.Core.Runtime.Orders.OrderGroup,Sitecore.Commerce.Entities.Carts.Cart,System.Boolean)">
            <summary>
            Converts an OrderForms to an CommerceConnect order form
            </summary>
            <param name="origin">The Commerce Server order form to copy</param>
            <param name="destination">The CommerceConnect order form to copy to</param>
            <param name="orderGroup">The parent Commerce Server basket</param>
            <param name="cart">The parent CommerceConnect cart</param>
            <param name="isCart">If the order group is a cart or not</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateOrderGroupToEntity.TranslatePayments(CommerceServer.Core.Runtime.Orders.OrderForm,Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceOrderForm,CommerceServer.Core.Runtime.Orders.OrderGroup,Sitecore.Commerce.Entities.Carts.Cart)">
            <summary>
            Translates the payments.
            </summary>
            <param name="origin">The origin.</param>
            <param name="destination">The destination.</param>
            <param name="orderGroup">The basket.</param>
            <param name="cart">The cart.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateOrderGroupToEntity.TranslatePayment(CommerceServer.Core.Runtime.Orders.OrderForm,CommerceServer.Core.Runtime.Orders.Payment)">
            <summary>
            Translates the payment.
            </summary>
            <param name="orderForm">The order form.</param>
            <param name="origin">The origin.</param>
            <returns>A PaymentInfo instance.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateOrderGroupToEntity.TranslateShipments(CommerceServer.Core.Runtime.Orders.OrderForm,Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceOrderForm,CommerceServer.Core.Runtime.Orders.OrderGroup,Sitecore.Commerce.Entities.Carts.Cart)">
            <summary>
            Translates the shipments.
            </summary>
            <param name="origin">The origin.</param>
            <param name="destination">The destination.</param>
            <param name="orderGroup">The basket.</param>
            <param name="cart">The cart.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateOrderGroupToEntity.TranslateShipment(CommerceServer.Core.Runtime.Orders.OrderForm,CommerceServer.Core.Runtime.Orders.Shipment,Sitecore.Commerce.Entities.Carts.ShippingInfo)">
            <summary>
            Translates the shipment.
            </summary>
            <param name="orderForm">The order form.</param>
            <param name="origin">The origin.</param>
            <param name="destination">The destination.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateOrderGroupToEntity.TranslatePromoCodes(CommerceServer.Core.Runtime.Orders.OrderForm,Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceOrderForm,CommerceServer.Core.Runtime.Orders.OrderGroup,Sitecore.Commerce.Entities.Carts.Cart)">
            <summary>
            Copies all of the promo codes on an order form to an CommerceConnect order form
            </summary>
            <param name="origin">The Commerce Server order form to copy the promo codes from</param>
            <param name="destination">The CommerceConnect order form to copy the promo codes to</param>
            <param name="orderGroup">The parent Commerce Server basket</param>
            <param name="cart">The parent CommerceConnect cart</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateOrderGroupToEntity.TranslatePromoCodeRecords(CommerceServer.Core.Runtime.Orders.OrderForm,Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceOrderForm,CommerceServer.Core.Runtime.Orders.OrderGroup,Sitecore.Commerce.Entities.Carts.Cart)">
            <summary>
            Copies all of the promo records on an order form to an CommerceConnect order form
            </summary>
            <param name="origin">The Commerce Server order form to copy the promo records from</param>
            <param name="destination">The CommerceConnect order form to copy the promo records to</param>
            <param name="orderGroup">The parent Commerce Server basket</param>
            <param name="cart">The parent CommerceConnect cart</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateOrderGroupToEntity.TranslatePromoCodeRecord(CommerceServer.Core.Runtime.Orders.PromoCodeRecord,Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommercePromoCodeRecord,CommerceServer.Core.Runtime.Orders.OrderGroup,Sitecore.Commerce.Entities.Carts.Cart)">
            <summary>
            Copies a Commerce Server promo code record into a CommerceConnect promo code record
            </summary>
            <param name="origin">The Commerce Server promo code record to copy</param>
            <param name="destination">The CommerceConnect promo code record to copy to</param>
            <param name="orderGroup">The parent Commerce Server basket</param>
            <param name="cart">The parent CommerceConnect cart</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateOrderGroupToEntity.TranslateLineItems(CommerceServer.Core.Runtime.Orders.OrderForm,Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceOrderForm,CommerceServer.Core.Runtime.Orders.OrderGroup,Sitecore.Commerce.Entities.Carts.Cart,System.Boolean)">
            <summary>
            Copies all of the line items on an order form to an CommerceConnect order form
            </summary>
            <param name="origin">The Commerce Server order form to copy the line items from</param>
            <param name="destination">The CommerceConnect order form to copy the line items to</param>
            <param name="orderGroup">The parent Commerce Server basket</param>
            <param name="cart">The parent CommerceConnect cart</param>
            <param name="isCart">If the order group is a cart or not</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateOrderGroupToEntity.TranslateLineItem(CommerceServer.Core.Runtime.Orders.LineItem,Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceCartLine,CommerceServer.Core.Runtime.Orders.OrderGroup,Sitecore.Commerce.Entities.Carts.Cart,System.Boolean)">
            <summary>
            Copies a Commerce Server line item to an CommerceConnect cart line
            </summary>
            <param name="origin">The Commerce Server line item to copy from</param>
            <param name="destination">The CommerceConnect cart line to copy to</param>
            <param name="orderGroup">The parent Commerce Server basket</param>
            <param name="cart">The parent CommerceConnect cart</param>
            <param name="isCart">If the order group is a cart or not</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateOrderGroupToEntity.TranslateDiscounts(CommerceServer.Core.Runtime.Orders.LineItem,Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceCartLine,CommerceServer.Core.Runtime.Orders.OrderGroup,Sitecore.Commerce.Entities.Carts.Cart,System.Boolean)">
            <summary>
            Copies all of the discounts on a line item to an CommerceConnect cart line
            </summary>
            <param name="origin">The Commerce Server line item to copy the discounts from</param>
            <param name="destination">The CommerceConnect cart line to copy the discounts to</param>
            <param name="orderGroup">The parent Commerce Server basket</param>
            <param name="cart">The parent CommerceConnect cart</param>
            <param name="isCart">If the order group is a cart or not</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateOrderGroupToEntity.TranslateDiscount(CommerceServer.Core.Runtime.Orders.DiscountApplicationRecord,Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceCartAdjustment,System.Boolean)">
            <summary>
            Copies a Commerce Server discount record to an CommerceConnect adjustment
            </summary>
            <param name="origin">The Commerce Server discount to copy from</param>
            <param name="destination">The CommerceConnect adjustment to copy to</param>
            <param name="isOrderLevel">Indicates whether or not the discount is applied at the order level or not</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateOrderGroupToEntity.AppendCartProduct(CommerceServer.Core.Runtime.Orders.OrderGroup,CommerceServer.Core.Runtime.Orders.LineItem,Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceCartLine,System.Boolean)">
            <summary>
            Appends the product information on a line item into a product on a cart line
            </summary>
            <param name="orderGroup">The order group.</param>
            <param name="origin">The line item to copy from</param>
            <param name="destination">The cart line to copy to</param>
            <param name="isCart">If the order group is a cart or not</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateOrderGroupToEntity.AppendBasketTotal(CommerceServer.Core.Runtime.Orders.OrderGroup,Sitecore.Commerce.Entities.Carts.Cart)">
            <summary>
            Appends the total details on a basket onto an CommerceConnect cart
            </summary>
            <param name="origin">The basket to copy from</param>
            <param name="destination">The cart to copy to</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateOrderGroupToEntity.AppendOrderFormTotal(CommerceServer.Core.Runtime.Orders.OrderGroup,CommerceServer.Core.Runtime.Orders.OrderForm,Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceOrderForm)">
            <summary>
            Appends the total details on an order form onto an CommerceConnect order form
            </summary>
            <param name="orderGroup">The order group.</param>
            <param name="origin">The order form to copy from</param>
            <param name="destination">The destination to copy to</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateOrderGroupToEntity.AppendCartLineTotal(CommerceServer.Core.Runtime.Orders.OrderGroup,CommerceServer.Core.Runtime.Orders.LineItem,Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceCartLine)">
            <summary>
            Appends the total on a line item to an CommerceConnect cart line
            </summary>
            <param name="orderGroup">The order group.</param>
            <param name="origin">The line item to copy from</param>
            <param name="destination">The cart line to copy to</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateOrderGroupToEntity.MapWeaklyTypedProperties(CommerceServer.Core.Runtime.Orders.OrderGroup,Sitecore.Commerce.Entities.Entity)">
            <summary>
            Maps the weakly types properties from a Commerce Server basket to an CommerceConnect entity
            </summary>
            <param name="origin">the basket to copy from</param>
            <param name="destination">the entity to copy to</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateOrderGroupToEntity.MapWeaklyTypedProperties(CommerceServer.Core.Runtime.Orders.OrderForm,Sitecore.Commerce.Entities.Entity)">
            <summary>
            Maps the weakly types properties from a Commerce Server OrderForm to an CommerceConnect entity
            </summary>
            <param name="origin">the order form to copy from</param>
            <param name="destination">the entity to copy to</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateOrderGroupToEntity.MapWeaklyTypedProperties(CommerceServer.Core.Runtime.Orders.PromoCodeRecord,Sitecore.Commerce.Entities.Entity)">
            <summary>
            Maps the weakly types properties from a Commerce Server PromoCodeRecord to an CommerceConnect entity
            </summary>
            <param name="origin">the promo code record to copy from</param>
            <param name="destination">the entity to copy to</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateOrderGroupToEntity.MapWeaklyTypedProperties(CommerceServer.Core.Runtime.Orders.LineItem,Sitecore.Commerce.Entities.Entity)">
            <summary>
            Maps the weakly types properties from a Commerce Server LineItem to an CommerceConnect entity
            </summary>
            <param name="origin">the line item to copy from</param>
            <param name="destination">the entity to copy to</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.TranslateOrderGroupToEntity.MapWeaklyTypedProperties(CommerceServer.Core.Runtime.Orders.DiscountApplicationRecord,Sitecore.Commerce.Entities.Entity)">
            <summary>
            Maps the weakly types properties from a Commerce Server DiscountApplicationRecord to an CommerceConnect entity
            </summary>
            <param name="origin">the discount application record to copy from</param>
            <param name="destination">the entity to copy to</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.UnlockCart">
            <summary>
            Defines the UnlockCart pipeline processor.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.UnlockCart.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.UpdateCart">
            <summary>
            Defines the UpdateCart pipeline processor.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.UpdateCart.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.UpdateCart.UpdateBaseProperties(Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceCart,CommerceServer.Core.Runtime.Orders.Basket)">
            <summary>
            Updates the base properties.
            </summary>
            <param name="changes">The changes.</param>
            <param name="basket">The basket.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.UpdateCart.UpdateCustomProperties(Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceCart,CommerceServer.Core.Runtime.Orders.Basket)">
            <summary>
            Updates the custom properties.
            </summary>
            <param name="changes">The changes.</param>
            <param name="basket">The basket.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.UpdateCart.UpdateWeaklyTypedProperties(Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceCart,CommerceServer.Core.Runtime.Orders.Basket)">
            <summary>
            Updates the weakly typed properties.
            </summary>
            <param name="changes">The changes.</param>
            <param name="basket">The basket.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.UpdateLinesOnCart">
            <summary>
            Defines the UpdateLinesOnCart pipeline processor.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.UpdateLinesOnCart.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.UpdateLinesOnCart" /> class.
            </summary>
            <param name="rollup">if set to <c>true</c> [roll up].</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.UpdateLinesOnCart.Rollup">
            <summary>
            Gets or sets a value indicating whether to roll up the cartlines.
            </summary>
            <value>
            <c>true</c> if we need to roll up the cartlines; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.UpdateLinesOnCart.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.UpdateLinesOnCart.UpdateCommerceLineItem(CommerceServer.Core.Runtime.Orders.Basket,Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceCartLine,Sitecore.Commerce.Services.Carts.UpdateCartLinesRequest)">
            <summary>
            Updates the commerce line item.
            </summary>
            <param name="basket">The basket.</param>
            <param name="cartLine">The cart line.</param>
            <param name="request">The request</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.UpdateLinesOnCart.GetOrderForm(CommerceServer.Core.Runtime.Orders.Basket,Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceCartLine)">
            <summary>
            Gets the order form
            </summary>
            <param name="basket">the basket</param>
            <param name="cartLine">the cart line</param>
            <returns>the order form</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.UpdateLinesOnCart.AddNewLineItem(Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceCartLine,CommerceServer.Core.Runtime.Orders.OrderForm,Sitecore.Commerce.Services.Carts.UpdateCartLinesRequest)">
            <summary>
            Adds a new line item
            </summary>
            <param name="cartLine">the cart line</param>
            <param name="orderForm">the order form</param>
            <param name="request">the Update cart lines request</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.UpdateLinesOnCart.AppendedLineItemProperties(Sitecore.Commerce.Services.Carts.UpdateCartLinesRequest,Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceCartLine,CommerceServer.Core.Runtime.Orders.LineItem)">
            <summary>
            Add any appended custom properties to the <see cref="T:CommerceServer.Core.Runtime.Orders.LineItem" />
            </summary>
            <param name="request">The request.</param>
            <param name="cartLine">The cart line.</param>
            <param name="lineItem">The line item.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.UpdateLinesOnCart.UpdateCommerceLineItemProperties(CommerceServer.Core.Runtime.Orders.LineItem,Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceCartLine)">
            <summary>
            Updates the commerce line item properties.
            </summary>
            <param name="lineItem">The line item.</param>
            <param name="cartLine">The cart line.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.GetPricesForCart">
            <summary>
            Defines the GetPricesForCart pipeline processor.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.GetPricesForCart.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.CartRequestInformation">
            <summary>
            Defines the AddShippingInfoRequestInformation class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.CartRequestInformation.#ctor(Sitecore.Commerce.Services.ServiceProviderRequest,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.CartRequestInformation"/> class.
            </summary>
            <param name="request">The request.</param>
            <param name="refresh">Sets a value whether or not the basket should be recalulcated using the Commerce Server pipelines</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.CartRequestInformation.#ctor(Sitecore.Commerce.Services.ServiceProviderRequest,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.CartRequestInformation"/> class.
            </summary>
            <param name="request">The request.</param>
            <param name="orderFormName">Name of the order form.</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.CartRequestInformation.OrderFormName">
            <summary>
            Gets or sets the name of the order form.
            </summary>
            <value>
            The name of the order form.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.CartRequestInformation.Refresh">
            <summary>
            Gets or sets a value indicating whether or not the basket should be recalulcated using the Commerce Server pipelines
            </summary>
            <value>
            <c>true</c> if pipelines should be run; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.CartRequestInformation.Get(Sitecore.Commerce.Services.ServiceProviderRequest)">
            <summary>
            Gets the specified request.
            </summary>
            <param name="request">The request.</param>
            <returns>Returns the CartRequestInformation instance; Otherwise null if it was not set by the caller.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.GetCartsRequestInformation">
            <summary>
            Defines the GetCartsRequestInformation class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.GetCartsRequestInformation.#ctor(Sitecore.Commerce.Services.ServiceProviderRequest,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.GetCartsRequestInformation" /> class.
            </summary>
            <param name="request">The request.</param>
            <param name="searchLanguage">The search language.</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.GetCartsRequestInformation.SearchLanguage">
            <summary>
            Gets or sets the search language.
            </summary>
            <value>
            The search language.
            </value>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.GetCartsRequestInformation.Get(Sitecore.Commerce.Services.ServiceProviderRequest)">
            <summary>
            Gets the additional information from the GetCartsRequest.
            </summary>
            <param name="request">The request.</param>
            <returns>Returns the GetCartsRequest instance; Otherwise null if it was not set by the caller.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.BasketTranslatorArgs">
            <summary>
            Arguments required by the CS basket translator.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.BasketTranslatorArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.BasketTranslatorArgs"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.BasketTranslatorArgs.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.BasketTranslatorArgs"/> class.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.BasketTranslatorArgs.InputParameters">
            <summary>
            Gets the input parameters.
            </summary>
            <value>
            The input parameters.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.BasketTranslatorArgs.OutputParameters">
            <summary>
            Gets the output parameters.
            </summary>
            <value>
            The output parameters.
            </value>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.BasketTranslatorArgs.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Gets the object data.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.BasketTranslatorArgs.AllocateInputAndOutputParameters">
            <summary>
            Allocates the input and output parameters.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.BasketTranslatorArgs.KnownBasketRelationships">
            <summary>
            Know types of Basket relationships. 
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.BasketTranslatorArgs.KnownBasketRelationships.OrderForms">
            <summary>
            The name of the OrderForms relationship
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.BasketTranslatorArgs.KnownBasketRelationships.LineItems">
            <summary>
            The name of the LineItems relationship
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.BasketTranslatorArgs.Input">
            <summary>
            Defines the input parameter arguments.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.BasketTranslatorArgs.Input.IncludeOrderForms(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Boolean,Sitecore.Commerce.Connect.CommerceServer.Models.SortOrder,System.String)">
            <summary>
            Sets Input Order Form options.
            </summary>
            <param name="firstItemIndex">First index of the item.</param>
            <param name="numberOfItemsToReturn">The number of items to return.</param>
            <param name="returnTotalItemCount">if set to <c>true</c> [return total item count].</param>
            <param name="sortOrder">The sort order.</param>
            <param name="sortProperty">The sort property.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.BasketTranslatorArgs.Input.IncludeLineItems(System.Nullable{System.Int32},System.Nullable{System.Int32},System.Boolean,Sitecore.Commerce.Connect.CommerceServer.Models.SortOrder,System.String)">
            <summary>
            Sets include LineItems options.
            </summary>
            <param name="firstItemIndex">First index of the item.</param>
            <param name="numberOfItemsToReturn">The number of items to return.</param>
            <param name="returnTotalItemCount">if set to <c>true</c> [return total item count].</param>
            <param name="sortOrder">The sort order.</param>
            <param name="sortProperty">The sort property.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.BasketTranslatorArgs.Output">
            <summary>
            Defines the output parameter arguments.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Orders.IPipelineInfoContextManager">
            <summary>
            Defines the IPipelineInfoContextManager interface.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.IPipelineInfoContextManager.CreatePipelineInfo(System.String)">
            <summary>
            Creates the pipeline information.
            </summary>
            <param name="pipelineName">Name of the pipeline.</param>
            <returns>An instance of the PipelineInfo class for the given pipeline name.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Orders.KnownBasketProperties">
            <summary>
            Defines the know basket properties.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Orders.KnownBasketProperties.Name">
            <summary>
            The name
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Orders.KnownBasketProperties.OrderGroupId">
            <summary>
            The order group identifier
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Orders.KnownBasketProperties.SoldToId">
            <summary>
            The sold to identifier
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Orders.KnownBasketProperties.Status">
            <summary>
            The status
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Orders.KnownBasketWeaklyTypeProperties">
            <summary>
            Defines the know weakly typed basket properties.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Orders.KnownBasketWeaklyTypeProperties.BasketErrors">
            <summary>
            The basket errors.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Orders.KnownBasketWeaklyTypeProperties.IsLocked">
            <summary>
            Lock status on the cart.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Orders.KnownBasketWeaklyTypeProperties.PurchaseErrors">
            <summary>
            The purchase errors.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Orders.KnownBasketWeaklyTypeProperties.LineItemSitecoreProductItemId">
            <summary>
            The line item sitecore item identifier.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceCart">
            <summary>
            Used to represent a Commerce Server Basket in CommerceConnect
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceCart.Created">
            <summary>
            Gets or sets the date the basket was created
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceCart.IsDirty">
            <summary>
            Gets or sets a value indicating whether or not the basket is dirty
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceCart.IsEmpty">
            <summary>
            Gets or sets a value indicating whether or not the basket is emoty
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceCart.LastModified">
            <summary>
            Gets or sets a value indicating when the basket was last modified
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceCart.LineItemCount">
            <summary>
            Gets or sets a value indicating the number of line items in the basket
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceCart.ModifiedBy">
            <summary>
            Gets or sets the identity of the person who modified the basket last
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceCart.OrderForms">
            <summary>
            Gets or sets the list of order forms in the basket
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceCart.SoldToAddressId">
            <summary>
            Gets or sets the address id the basket was sold to 
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceCart.SoldToName">
            <summary>
            Gets or sets the nanme of the entity the basket was sold to
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceCart.StatusCode">
            <summary>
            Gets or sets a value indicating the status code of the basket
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceCart.TrackingNumber">
            <summary>
            Gets or sets the tracking number associated to the basket
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceCartAdjustment">
            <summary>
            Used to represent any price adjustments on a Basket, OrderForm, or LineItem
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceCartAdjustment.DiscountId">
            <summary>
            Gets or sets the id of the associated discount
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceCartAdjustment.DiscountName">
            <summary>
            Gets or sets the name of the applied discount
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceCartAdjustment.DiscountValue">
            <summary>
            Gets or sets the value of the discount e.g. 25 if it is 25%
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceCartAdjustment.LastModified">
            <summary>
            Gets or sets the date on which the discount was last modified
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceCartAdjustment.Priority">
            <summary>
            Gets or sets the priority of the discount
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceCartAdjustment.PromoCode">
            <summary>
            Gets or sets any promo code associated with the discount
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceCartAdjustment.PromoCodeDefinitionId">
            <summary>
            Gets or sets the id of any associated promo code definition
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceCartAdjustment.TypeOfDiscount">
            <summary>
            Gets or sets a value indicating the type of discount
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceCartAdjustment.IsOrderLevel">
            <summary>
            Gets or sets a value indicating whether or not the discount was applied at the order or line item level
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceCartLine">
            <summary>
            Used to represent a Commerce Server line item
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceCartLine.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceCartLine"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceCartLine.#ctor(System.String,System.String,System.String,System.UInt32)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceCartLine"/> class.
            </summary>
            <param name="productCatalog">The product catalog.</param>
            <param name="productId">The product identifier.</param>
            <param name="variantId">The variant identifier.</param>
            <param name="quantity">The quantity.</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceCartLine.AllowBackordersAndPreorders">
            <summary>
            Gets or sets a value indicating whether or not back-orders and pre-orders should be allowed
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceCartLine.BackorderQuantity">
            <summary>
            Gets or sets a value indicating the backorder quantity
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceCartLine.Created">
            <summary>
            Gets or sets a value indicating the date the line item was created
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceCartLine.InStockQuantity">
            <summary>
            Gets or sets the in stock quantity of the item
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceCartLine.InventoryCondition">
            <summary>
            Gets or sets the current inventory state of the item
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceCartLine.LastModified">
            <summary>
            Gets or sets the date the line item was last modified
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceCartLine.ModifiedBy">
            <summary>
            Gets or sets the identity of the individual who modified the line item last
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceCartLine.OrderFormId">
            <summary>
            Gets or sets the id of the associated order form
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceCartLine.PreorderQuantity">
            <summary>
            Gets or sets the pre-orderable quantity of the item
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceCartLine.Index">
            <summary>
            Gets or sets the index of the item in an order form
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceCartLine.ShippingAddressId">
            <summary>
            Gets or sets the id of any associated shipping address
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceCartLine.ShippingMethodId">
            <summary>
            Gets or sets the id of any shipping method associated to the line item
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceCartLine.ShippingMethodName">
            <summary>
            Gets or sets the shipping method of any associated shipment
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceCartLine.Status">
            <summary>
            Gets or sets the status or the item
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceCartProduct">
            <summary>
            Used to represent information about the product in a Cart line
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceCartProduct.ProductCatalog">
            <summary>
            Gets or sets the catalog associated to the product
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceCartProduct.ProductCategory">
            <summary>
            Gets or sets the category associated to the product
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceCartProduct.ProductVariantId">
            <summary>
            Gets or sets the id of the variant if there is on
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceCartProduct.DisplayName">
            <summary>
            Gets or sets the display name of the product/variant
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceCartProduct.Description">
            <summary>
            Gets or sets the discription of the product/variant
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceCreditCardPaymentInfo">
            <summary>
            Defines the CommerceCreditCardPaymentInfo class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceCreditCardPaymentInfo.AuthorizationCode">
            <summary>
            Gets or sets the authorization code.
            </summary>
            <value>
            The authorization code.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceCreditCardPaymentInfo.CardType">
            <summary>
            Gets or sets the type of the card.
            </summary>
            <value>
            The type of the card.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceCreditCardPaymentInfo.CreditCardIdentifier">
            <summary>
            Gets or sets the credit card identifier.
            </summary>
            <value>
            The credit card identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceCreditCardPaymentInfo.CreditCardNumber">
            <summary>
            Gets or sets the credit card number.
            </summary>
            <value>
            The credit card number.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceCreditCardPaymentInfo.ExpirationMonth">
            <summary>
            Gets or sets the expiration month.
            </summary>
            <value>
            The expiration month.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceCreditCardPaymentInfo.ExpirationYear">
            <summary>
            Gets or sets the expiration year.
            </summary>
            <value>
            The expiration year.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceCreditCardPaymentInfo.ValidationCode">
            <summary>
            Gets or sets the validation code.
            </summary>
            <value>
            The validation code.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceCreditCardPaymentInfo.Amount">
            <summary>
            Gets or sets the amount.
            </summary>
            <value>
            The amount.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceCreditCardPaymentInfo.CustomerNameOnPayment">
            <summary>
            Gets or sets the customer name on payment.
            </summary>
            <value>
            The customer name on payment.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceOrder">
            <summary>
            Defines the CommerceOrder class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceOrder.Created">
            <summary>
            Gets or sets the date the basket was created
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceOrder.IsDirty">
            <summary>
            Gets or sets a value indicating whether or not the basket is dirty
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceOrder.IsEmpty">
            <summary>
            Gets or sets a value indicating whether or not the basket is emoty
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceOrder.LastModified">
            <summary>
            Gets or sets a value indicating when the basket was last modified
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceOrder.LineItemCount">
            <summary>
            Gets or sets a value indicating the number of line items in the basket
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceOrder.ModifiedBy">
            <summary>
            Gets or sets the identity of the person who modified the basket last
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceOrder.OrderForms">
            <summary>
            Gets or sets the list of order forms in the basket
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceOrder.SoldToAddressId">
            <summary>
            Gets or sets the address id the basket was sold to 
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceOrder.SoldToName">
            <summary>
            Gets or sets the nanme of the entity the basket was sold to
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceOrder.StatusCode">
            <summary>
            Gets or sets a value indicating the status code of the basket
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceOrderForm">
            <summary>
            Used to represent an order form in Commerce Server
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceOrderForm.BillingAddressId">
            <summary>
            Gets or sets the id associated with any billing information
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceOrderForm.Created">
            <summary>
            Gets or sets the date the basket was created
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceOrderForm.LastModified">
            <summary>
            Gets or sets the date the order form was last modified
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceOrderForm.CartLines">
            <summary>
            Gets or sets any associated child cart lines
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceOrderForm.ModifiedBy">
            <summary>
            Gets or sets the identity of the individual who modified in the order form last
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceOrderForm.Name">
            <summary>
            Gets or sets the name of the order form
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceOrderForm.OrderFormId">
            <summary>
            Gets or sets the id of the order form
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceOrderForm.PromoCodeRecords">
            <summary>
            Gets or sets information about any associated promo codes
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceOrderForm.PromoCodes">
            <summary>
            Gets or sets the list of promo codes associated to the order form
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceOrderForm.PromoUserIdentity">
            <summary>
            Gets or sets the identity associated with the promo code
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceOrderForm.Status">
            <summary>
            Gets or sets the order form status
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceOrderForm.Total">
            <summary>
            Gets or sets the total of the order form
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceOrderForm.Shipping">
            <summary>
            Gets or sets the shippings.
            </summary>
            <value>
            The shippings.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceOrderForm.Payment">
            <summary>
            Gets or sets the payments.
            </summary>
            <value>
            The payments.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceOrderHeader">
            <summary>
            Defines the CommerceOrderHeader class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceOrderHeader.Created">
            <summary>
            Gets or sets the date the basket was created
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceOrderHeader.IsDirty">
            <summary>
            Gets or sets a value indicating whether or not the basket is dirty
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceOrderHeader.IsEmpty">
            <summary>
            Gets or sets a value indicating whether or not the basket is emoty
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceOrderHeader.LastModified">
            <summary>
            Gets or sets a value indicating when the basket was last modified
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceOrderHeader.ModifiedBy">
            <summary>
            Gets or sets the identity of the person who modified the basket last
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceOrderHeader.SoldToAddressId">
            <summary>
            Gets or sets the address id the basket was sold to 
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceOrderHeader.SoldToName">
            <summary>
            Gets or sets the nanme of the entity the basket was sold to
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceOrderHeader.StatusCode">
            <summary>
            Gets or sets a value indicating the status code of the basket
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceOrderHeader.TrackingNumber">
            <summary>
            Gets or sets the tracking number associated to the basket
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceParty">
            <summary>
            Defines the CommerceParty class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceParty.UserProfileAddressId">
            <summary>
            Gets or sets the user profile address identifier.
            This parameters should only be used when adding an address originating from a user profile.  Otherwise, this
            property is never used, or never set.
            When using this property, you must also set the Name property.
            </summary>
            <value>
            The user profile address identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceParty.CountryCode">
            <summary>
            Gets or sets the country code.
            </summary>
            <value>
            The country code.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceParty.EveningPhoneNumber">
            <summary>
            Gets or sets the evening phone number.
            </summary>
            <value>
            The evening phone number.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceParty.FaxNumber">
            <summary>
            Gets or sets the fax number.
            </summary>
            <value>
            The fax number.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceParty.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceParty.RegionCode">
            <summary>
            Gets or sets the region code.
            </summary>
            <value>
            The region code.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceParty.RegionName">
            <summary>
            Gets or sets the name of the region.
            </summary>
            <value>
            The name of the region.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommercePromoCodeRecord">
            <summary>
            Used to contain any details about an applied promo code
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommercePromoCodeRecord.PromoApplied">
            <summary>
            Gets or sets a value indicating whether or not the promo code has been applied
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommercePromoCodeRecord.PromoCode">
            <summary>
            Gets or sets the actual promo code value
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommercePromoCodeRecord.PromoCodeDefinitionId">
            <summary>
            Gets or sets the if of the promo code definition
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommercePromoCodeRecord.PromoCodeLookupDate">
            <summary>
            Gets or sets the look up date of the promo code
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommercePromoCodeRecord.PromoCodeReserved">
            <summary>
            Gets or sets a value indicating whether or not the promo code is a reserved one
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommercePromoCodeRecord.PromoCodeStatus">
            <summary>
            Gets or sets the status of the promo code
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceTotal">
            <summary>
            Used to represent the total on a Cart and OrderForm
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceTotal.Subtotal">
            <summary>
            Gets or sets the subtotal
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceTotal.HandlingTotal">
            <summary>
            Gets or sets the handling total
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceTotal.ShippingTotal">
            <summary>
            Gets or sets the shipping total
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceTotal.LineItemDiscountAmount">
            <summary>
            Gets or sets the total for the amount of line item discounts applied
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommerceTotal.OrderLevelDiscountAmount">
            <summary>
            Gets or sets the total for the amount of order level discounts applied
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommercePrice">
            <summary>
            Used to represent the total on a Cart and OrderForm
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Orders.Models.CommercePrice.ListPrice">
            <summary>
            Gets or sets the shipping total
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Orders.CommerceCartServiceProvider">
            <summary>
            Defines the CommerceCartServiceProvider class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.CommerceCartServiceProvider.AddPromoCode(Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.AddPromoCodeRequest)">
            <summary>
            Adds a promo code.
            </summary>
            <param name="request">The request.</param>
            <returns>The AddPrompCodeResult object.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.CommerceCartServiceProvider.RemovePromoCode(Sitecore.Commerce.Connect.CommerceServer.Orders.Pipelines.RemovePromoCodeRequest)">
            <summary>
            Removes a promo code.
            </summary>
            <param name="request">The request.</param>
            <returns>The RemovePromoCodeResult object.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Orders.GenericCommerceCartServiceProviderExtensions">
            <summary>
            Defines the GenericCommerceCartServiceProviderExtensions static class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.GenericCommerceCartServiceProviderExtensions.AddPromoCode``2(Sitecore.Commerce.Connect.CommerceServer.Orders.CommerceOrderServiceProvider,``0)">
            <summary>
            Adds a promo code.
            </summary>
            <typeparam name="TAddPromoCodeRequest">The type of the add promo code request.</typeparam>
            <typeparam name="TAddPromoCodeResult">The type of the add promo code result.</typeparam>
            <param name="commerceOrderProvider">The commerce order provider.</param>
            <param name="request">The request.</param>
            <returns>The TAddPromoCodeResult object.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.GenericCommerceCartServiceProviderExtensions.RemovePromoCode``2(Sitecore.Commerce.Connect.CommerceServer.Orders.CommerceOrderServiceProvider,``0)">
            <summary>
            Removes a promo code.
            </summary>
            <typeparam name="TRemovePromoCodeRequest">The type of the remove promo code request.</typeparam>
            <typeparam name="TRemovePromoCodeResult">The type of the remove promo code result.</typeparam>
            <param name="commerceOrderProvider">The commerce order provider.</param>
            <param name="request">The request.</param>
            <returns>The TRemovePromoCodeResult object.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Orders.CommerceOrderServiceProvider">
            <summary>
            Defines the CommerceOrderServiceProvider class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.CommerceOrderServiceProvider.GetShippingMethods(Sitecore.Commerce.Services.Shipping.GetShippingMethodsRequest)">
            <summary>
            Gets the shipping methods.
            </summary>
            <param name="request">The request.</param>
            <returns>The GetShippingMethodsResult.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.CommerceOrderServiceProvider.GetPaymentMethods(Sitecore.Commerce.Services.Payments.GetPaymentMethodsRequest)">
            <summary>
            Gets the payment methods.
            </summary>
            <param name="request">The request.</param>
            <returns>An object of type GetPaymentMethodsResult.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Orders.GenericCommerceOrderServiceProviderExtensions">
            <summary>
            Defines the GenericCommerceOrderServiceProviderExtensions class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.GenericCommerceOrderServiceProviderExtensions.GetShippingMethods``2(Sitecore.Commerce.Connect.CommerceServer.Orders.CommerceOrderServiceProvider,``0)">
            <summary>
            Gets the shipping methods.
            </summary>
            <typeparam name="TGetShippingMethodsRequest">The type of the get shipping methods request.</typeparam>
            <typeparam name="TGetShippingMethodsResult">The type of the get shipping methods result.</typeparam>
            <param name="commerceOrderProvider">The commerce order provider.</param>
            <param name="request">The request.</param>
            <returns>A TGetShippingMethodsResult.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Orders.BasketUtility">
            <summary>
            Defines the BasketUtility class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.BasketUtility.GetOrderForm(CommerceServer.Core.Runtime.Orders.Basket,System.String)">
            <summary>
            Gets the order form.
            </summary>
            <param name="basket">The basket.</param>
            <param name="orderFormName">Name of the order form.</param>
            <returns>A Commerce Server OrderForm</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Orders.PaymentMethodUtility">
            <summary>
            Defines the ShippingMethodUtility class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.PaymentMethodUtility.IsValidPaymentMethod(System.Guid)">
            <summary>
            Determines whether the given payment method is valid and defined in Commerce Server.
            </summary>
            <param name="paymentMethodId">The payment method identifier.</param>
            <returns>
            True if the given payment method is valid; Otherwise false.
            </returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Orders.ShippingMethodUtility">
            <summary>
            Defines the ShippingMethodUtility class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.ShippingMethodUtility.IsValidShippingMethod(System.Guid)">
            <summary>
            Determines whether the given shipping method is valid and defined in Commerce Server.
            </summary>
            <param name="shippingMethodId">The shipping method identifier.</param>
            <returns>True if the given shipping method is valid; Otherwise false.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Orders.PipelineInfoContextManager">
            <summary>
            Defines the PipelineInfoContextManager class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.PipelineInfoContextManager.CreatePipelineInfo(System.String)">
            <summary>
            Creates the pipeline information.
            </summary>
            <param name="pipelineName">Name of the pipeline.</param>
            <returns>An instance of the PipelineInfo class for the given pipeline name.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Orders.CartSubtotalCondition`1">
            <summary>
            Defines a condition for the cart subtotal with a predefined value: 
            The condition follows the following format:
            “where the user's cart subtotal [compares to] [CartSubotal]”
            In this format, the [Compares to] clause can be any two-operand comparison operator: <![CDATA[<]]>,<![CDATA[>]]>,<![CDATA[<=]]>,<![CDATA[=]]>,<![CDATA[=>]]>
            </summary>
            <typeparam name="T">Type of rule context.</typeparam>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.CartSubtotalCondition`1.GetCartMetrics(System.Collections.Generic.IEnumerable{Sitecore.Commerce.Entities.Carts.Cart})">
            <summary>
            Gets the cart metrics.
            </summary>
            <param name="carts">The carts.</param>
            <returns>The cart subtotal.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Orders.OrderRepository">
            <summary>
            Used to access data from the Commerce Server order system
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.OrderRepository.GetBasket(System.Guid)">
            <summary>
            Gets the commerce server basket.
            </summary>
            <param name="userId">The user identifier.</param>
            <returns>
            The commerce server basket.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.OrderRepository.GetBasket(System.Guid,System.Guid)">
            <summary>
            Gets the commerce server basket.
            </summary>
            <param name="userId">The user identifier.</param>
            <param name="orderGroupId">The order group identifier.</param>
            <returns>
            The commerce server basket.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.OrderRepository.GetBasket(System.Guid,System.String)">
            <summary>
            Gets the commerce server basket.
            </summary>
            <param name="userId">The user identifier.</param>
            <param name="basketName">Name of the basket.</param>
            <returns>
            The commerce server basket.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.OrderRepository.GetOrderTemplate(System.Guid,System.String)">
            <summary>
            Gets the commerce server order template.
            </summary>
            <param name="userId">The user identifier.</param>
            <param name="name">Name of the basket.</param>
            <returns>
            The commerce server order template.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.OrderRepository.CreateOrderTemplate(System.Guid)">
            <summary>
            Creates the commerce server order template.
            </summary>
            <param name="userId">The user identifier.</param>
            <returns>
            A new order template instance.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.OrderRepository.GetShippingMethods(System.String)">
            <summary>
            Gets the shipping metdhods.
            </summary>
            <param name="language">The language.</param>
            <returns>
            The data table with all the defined shipping methods.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.OrderRepository.GetPaymentMethods(System.String)">
            <summary>
            Gets the payment methods.
            </summary>
            <param name="language">The language.</param>
            <returns>
            The data table with all the defined payment methods.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.OrderRepository.GetVisitorOrders(System.Guid)">
            <summary>
            Gets the visitor orders.
            </summary>
            <param name="userId">The user identifier.</param>
            <returns>
            The user's order group collection.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.OrderRepository.GetPurchaseOrder(System.Guid,System.String)">
            <summary>
            Gets the purchase order.
            </summary>
            <param name="userId">The user identifier.</param>
            <param name="trackingNumber">The tracking number.</param>
            <returns>The purchase order.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.OrderRepository.GetPurchaseOrder(System.Guid,System.Guid)">
            <summary>
            Gets the purchase order.
            </summary>
            <param name="userId">The user identifier.</param>
            <param name="orderGroupId">The order group identifier.</param>
            <returns>
            The purchase order.
            </returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Orders.IOrderRepository">
            <summary>
            Interface for reposities accessing Order data in Commerce Server.  
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.IOrderRepository.GetBasket(System.Guid)">
            <summary>
            Gets the commerce server basket.
            </summary>
            <param name="userId">The user identifier.</param>
            <returns>
            The commerce server basket.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.IOrderRepository.GetBasket(System.Guid,System.Guid)">
            <summary>
            Gets the commerce server basket.
            </summary>
            <param name="userId">The user identifier.</param>
            <param name="orderGroupId">The order group identifier.</param>
            <returns>
            The commerce server basket.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.IOrderRepository.GetBasket(System.Guid,System.String)">
            <summary>
            Gets the commerce server basket.
            </summary>
            <param name="userId">The user identifier.</param>
            <param name="basketName">Name of the basket.</param>
            <returns>The commerce server basket.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.IOrderRepository.GetOrderTemplate(System.Guid,System.String)">
            <summary>
            Gets the commerce server order template.
            </summary>
            <param name="userId">The user identifier.</param>
            <param name="name">Name of the basket.</param>
            <returns>The commerce server order template.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.IOrderRepository.CreateOrderTemplate(System.Guid)">
            <summary>
            Creates the commerce server order template.
            </summary>
            <param name="userId">The user identifier.</param>
            <returns>A new order template instance.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.IOrderRepository.GetShippingMethods(System.String)">
            <summary>
            Gets the shipping metdhods.
            </summary>
            <param name="language">The language.</param>
            <returns>The data table with all the defined shipping methods.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.IOrderRepository.GetPaymentMethods(System.String)">
            <summary>
            Gets the payment methods.
            </summary>
            <param name="language">The language.</param>
            <returns>The data table with all the defined payment methods.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.IOrderRepository.GetVisitorOrders(System.Guid)">
            <summary>
            Gets the visitor orders.
            </summary>
            <param name="userId">The user identifier.</param>
            <returns>The user's order group collection.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.IOrderRepository.GetPurchaseOrder(System.Guid,System.String)">
            <summary>
            Gets the purchase order.
            </summary>
            <param name="userId">The user identifier.</param>
            <param name="trackingNumber">The tracking number.</param>
            <returns>The purchase order.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Orders.IOrderRepository.GetPurchaseOrder(System.Guid,System.Guid)">
            <summary>
            Gets the purchase order.
            </summary>
            <param name="userId">The user identifier.</param>
            <param name="orderGroupId">The order group identifier.</param>
            <returns>The purchase order.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Controls.CatalogItemHierarchySearchListControl">
            <summary>
            Control that allows editing of a Commerce Catalog item's hierarchy.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Controls.CatalogItemHierarchySearchListControl.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Controls.CatalogItemHierarchySearchListControl"/> class.
            </summary>
            <param name="defaultCommerceSearchItemTypeFilter">The default commerce search item type filter.</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Controls.CatalogItemHierarchySearchListControl.DefaultCommerceSearchItemTypeFilter">
            <summary>
            Gets or sets the default commerce search item type filter.
            </summary>
            <value>
            The default commerce search item type filter.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Controls.CatalogItemHierarchySearchListControl.CatalogItemForEditing">
            <summary>
            Gets the Commerce <see cref="T:CommerceServer.Core.Catalog.CatalogItem"/> that is being edited.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Controls.CatalogItemHierarchySearchListControl.ParentCatalog">
            <summary>
            Gets the Commerce <see cref="T:CommerceServer.Core.Catalog.ProductCatalog"/> that contains the <see cref="T:CommerceServer.Core.Catalog.Category"/> that is being edited.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Controls.CatalogItemHierarchySearchListControl.OnLoad(System.EventArgs)">
            <summary>
            Handles the Load event of the control.
            </summary>
            <param name="args">The event arguments.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Controls.CatalogItemHierarchySearchListControl.GetSelectedItems(System.Collections.ArrayList@)">
            <summary>
            Gets the selected items.
            </summary>
            <param name="selected">The Commerce Server items already selected.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Controls.CatalogItemHierarchySearchListControl.DoRender(System.Web.UI.HtmlTextWriter)">
            <summary>
            Does the rendering of the control.
            </summary>
            <param name="output">The output Html text writer.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Controls.CatalogItemHierarchySearchListControl.OutputString(CommerceServer.Core.Catalog.CatalogItem)">
            <summary>
            Returns the output string of given catalog item.
            </summary>
            <param name="catalogItem">The catalog item.</param>
            <returns>The output string of the catalog item.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Controls.CatalogItemHierarchySearchListControl.GetItemValue(CommerceServer.Core.Catalog.CatalogItem)">
            <summary>
            Gets the item value.
            </summary>
            <param name="catalogItem">The catalog item.</param>
            <returns>Returns the catalog item external id.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Controls.CatalogItemHierarchySearchListControl.GetItems(Sitecore.Data.Items.Item)">
            <summary>
            Gets the items.
            </summary>
            <param name="current">The current.</param>
            <returns>Array of the selected items.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Controls.CatalogItemHierarchyListControl">
            <summary>
            Control that allows editing of a Commerce Catalog item's hierarchy.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Controls.CatalogItemHierarchyListControl.CatalogItemForEditing">
            <summary>
            Gets the Commerce <see cref="T:CommerceServer.Core.Catalog.CatalogItem"/> that is being edited.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Controls.CatalogItemHierarchyListControl.ParentCatalog">
            <summary>
            Gets the Commerce <see cref="T:CommerceServer.Core.Catalog.ProductCatalog"/> that contains the <see cref="T:CommerceServer.Core.Catalog.Category"/> that is being edited.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Controls.CatalogItemHierarchyListControl.GetDisplayableTemplateNames">
            <summary>
            Gets the names of the Sitecore templates that should be displayed in the tree list control.
            </summary>
            <returns>The names of the Sitecore templates that should be displayed in the tree list control.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Controls.CatalogItemHierarchyListControl.GetSelectedItemExternalIds">
            <summary>
            Gets the external IDs of the catalog items that are currently selected.
            </summary>
            <returns>The external IDs of the catalog items that are currently selected.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Controls.CatalogItemHierarchyListControl.GetTemplatesExcludedForSelection">
            <summary>
            Gets the names of the Sitecore templates that cannot be selected in the tree list control.
            </summary>
            <returns>The names of the Sitecore templates that cannot be selected in the tree list control.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Controls.CatalogItemHierarchyListControl.OnLoad(System.EventArgs)">
            <summary>
            Handles the Load event of the control.
            </summary>
            <param name="args">The event arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Controls.ChildCategoriesSearchListControl">
            <summary>
            Control that allows editing of a Commerce Category's child category collection.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Controls.ChildCategoriesSearchListControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Controls.ChildCategoriesSearchListControl"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Controls.ChildCategoriesSearchListControl.GetSelectedItems(System.Collections.ArrayList@)">
            <summary>
            Gets the selected items.
            </summary>
            <param name="selected">The Commerce Server items already selected.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Controls.ChildCategoriesListControl">
            <summary>
            Control that allows editing of a Commerce Category's child category collection.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Controls.ChildCategoriesListControl.GetDisplayableTemplateNames">
            <summary>
            Gets the names of the Sitecore templates that should be displayed in the tree list control.
            </summary>
            <returns>The names of the Sitecore templates that represent Commerce categories.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Controls.ChildCategoriesListControl.GetSelectedItemExternalIds">
            <summary>
            Gets the external IDs of the catalog items that are current children of the <see cref="T:CommerceServer.Core.Catalog.Category"/> being edited.
            </summary>
            <returns>The external IDs of the Commerce categories that are children of the <see cref="T:CommerceServer.Core.Catalog.Category"/> being edited.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Controls.ChildCategoriesListControl.GetTemplatesExcludedForSelection">
            <summary>
            Gets the names of the Sitecore templates that cannot be selected in the tree list control.
            </summary>
            <returns>The names of the Sitecore templates that cannot be selected in the tree list control.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Controls.CatalogSelectionControl">
            <summary>
            Class that handles the selection of Commerce Server catalogs via a series of check box items.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Controls.CatalogSelectionControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Controls.CatalogSelectionControl"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Controls.CatalogSelectionControl.ItemID">
            <summary>
            Gets or sets the item ID.
            </summary>
            <value>
            The item ID.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Controls.CatalogSelectionControl.ReadOnly">
            <summary>
            Gets or sets a value indicating whether the control is read-only.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Controls.CatalogSelectionControl.TrackModified">
            <summary>
            Gets or sets a value indicating whether modifications are tracked.
            </summary>
            <value><c>true</c> if  modifications are tracked; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Controls.CatalogSelectionControl.OnLoad(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Web.UI.Control.Load"></see> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"></see> object that contains the event data.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Controls.CatalogSelectionControl.DoRender(System.Web.UI.HtmlTextWriter)">
            <summary>
            Sends server control content to a provided <see cref="T:System.Web.UI.HtmlTextWriter"></see> object, which writes the content to be rendered on the client.
            </summary>
            <param name="output">The <see cref="T:System.Web.UI.HtmlTextWriter"></see> object that receives the server control content.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Controls.CatalogSelectionControl.SetModified">
            <summary>
            Sets the modified flag on the page indicating content has been modified.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Controls.CatalogSelectionControl.GetCatalogRepossitory">
            <summary>
            Gets the catalog repossitory.
            </summary>
            <returns><see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.ICatalogRepository"/> instance.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Controls.CatalogSelectionControl.RenderOptions">
            <summary>
            Renders the options.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Controls.CatalogSelectionControl.UpdateValue">
            <summary>
            Updates the value.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Controls.ChildProductsSearchListControl">
            <summary>
            Control that allows editing of a Commerce Category's child product collection.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Controls.ChildProductsSearchListControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Controls.ChildProductsSearchListControl"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Controls.ChildProductsSearchListControl.GetSelectedItems(System.Collections.ArrayList@)">
            <summary>
            Gets the selected items.
            </summary>
            <param name="selected">The Commerce Server items already selected.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Controls.ChildProductsListControl">
            <summary>
            Control that allows editing of a Commerce Category's child product collection.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Controls.ChildProductsListControl.GetDisplayableTemplateNames">
            <summary>
            Gets the names of the Sitecore templates that should be displayed in the tree list control.
            </summary>
            <returns>The names of the Sitecore templates that represent Commerce categories or products.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Controls.ChildProductsListControl.GetSelectedItemExternalIds">
            <summary>
            Gets the external IDs of the catalog items that are current children of the <see cref="T:CommerceServer.Core.Catalog.Category"/> being edited.
            </summary>
            <returns>The external IDs of the Commerce products that are children of the <see cref="T:CommerceServer.Core.Catalog.Category"/> being edited.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Controls.ChildProductsListControl.GetTemplatesExcludedForSelection">
            <summary>
            Gets the names of the Sitecore templates that cannot be selected in the tree list control.
            </summary>
            <returns>The names of the Sitecore templates that cannot be selected in the tree list control.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Controls.CommerceCatalogEnumerationControl">
            <summary>
            Content Editor field control that allows editing of Commerce catalog enumeration numeric values.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Controls.CommerceCatalogEnumerationControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Controls.CommerceCatalogEnumerationControl"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Controls.CommerceCatalogEnumerationControl.ItemLanguage">
            <summary>
            Gets or sets the language of the item being edited.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Controls.CommerceCatalogEnumerationControl.FieldId">
            <summary>
            Gets or sets the ID of the field being edited.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Controls.CommerceCatalogEnumerationControl.FieldName">
            <summary>
            Gets the name of the field being edited.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Controls.CommerceCatalogEnumerationControl.LocalizedEnumerationValues">
            <summary>
            Gets or sets the enumeration values that can be selected for this field and language.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Controls.CommerceCatalogEnumerationControl.PropertyDefinitionName">
            <summary>
            Gets the name of the Commerce catalog property definition for this field.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Controls.CommerceCatalogEnumerationControl.ItemCultureInfo">
            <summary>
            Gets the culture information for the language of the field being edited.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Controls.CommerceCatalogEnumerationControl.GetValue">
            <summary>
            Gets the value of this content field.
            </summary>
            <returns>The value of this content field.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Controls.CommerceCatalogEnumerationControl.SetValue(System.String)">
            <summary>
            Sets the value of this content field.
            </summary>
            <param name="value">The new content field value.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Controls.CommerceCatalogEnumerationControl.OnPreRender(System.EventArgs)">
            <summary>
            Raises the PreRender event.
            </summary>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Controls.CommerceCatalogEnumerationControl.OnLoad(System.EventArgs)">
            <summary>
            Raises the Load event.
            </summary>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Controls.CommerceCatalogEnumerationControl.IsSelected(System.String)">
            <summary>
            Determines whether the specified item is selected.
            </summary>
            <param name="enumValue">The value to examine.</param>
            <returns>True if the value is selected, otherwise false.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Controls.CommerceCatalogEnumerationControl.GetItems">
            <summary>
            Gets the possible values that can be selected for this field.
            </summary>
            <returns>The list of values that can be selected for this list.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Controls.CommerceDecimalControl">
            <summary>
            Content Editor field control that allows editing of <see cref="T:System.Decimal"/> numeric values. Since Sitecore search does not recognise
            System.Decimal all types will be returned as double
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Controls.CommerceDecimalControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Controls.CommerceDecimalControl"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Controls.CommerceDecimalControl.TryParseNumber(System.String,System.IFormatProvider,System.Double@)">
            <summary>
            Converts the string representation of a number in a specified culture-specific
            format to its .NET <see cref="T:System.Decimal"/> equivalent. A return value
            indicates whether the conversion succeeded or failed.
            </summary>
            <param name="value">The string value to parse.</param>
            <param name="formatProvider">An object that supplies culture-specific formatting information about the value.</param>
            <param name="result">The parsed .NET type.</param>
            <returns>True if the <paramref name="value"/> was successfully parsed, otherwise false.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Controls.CommerceDecimalControl.FormatNumber(System.Double,System.IFormatProvider)">
            <summary>
            Converts a <see cref="T:System.Decimal"/> value its equivalent string representation
            using the specified culture-specific format information.
            </summary>
            <param name="value">The value to format.</param>
            <param name="formatProvider">An object that supplies culture-specific formatting information about the value.</param>
            <returns>The string representation of the <paramref name="value"/> as specified by <paramref name="formatProvider"/>.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Controls.CommerceDoubleControl">
            <summary>
            Content Editor field control that allows editing of <see cref="T:System.Double"/> numeric values.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Controls.CommerceDoubleControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Controls.CommerceDoubleControl"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Controls.CommerceDoubleControl.TryParseNumber(System.String,System.IFormatProvider,System.Double@)">
            <summary>
            Converts the string representation of a number in a specified culture-specific
            format to its .NET <see cref="T:System.Double"/> equivalent. A return value
            indicates whether the conversion succeeded or failed.
            </summary>
            <param name="value">The string value to parse.</param>
            <param name="formatProvider">An object that supplies culture-specific formatting information about the value.</param>
            <param name="result">The parsed .NET type.</param>
            <returns>True if the <paramref name="value"/> was successfully parsed, otherwise false.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Controls.CommerceDoubleControl.FormatNumber(System.Double,System.IFormatProvider)">
            <summary>
            Converts a <see cref="T:System.Double"/> value its equivalent string representation
            using the specified culture-specific format information.
            </summary>
            <param name="value">The value to format.</param>
            <param name="formatProvider">An object that supplies culture-specific formatting information about the value.</param>
            <returns>The string representation of the <paramref name="value"/> as specified by <paramref name="formatProvider"/>.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Controls.CommerceInt64Control">
            <summary>
            Content Editor field control that allows editing of <see cref="T:System.Int64"/> numeric values.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Controls.CommerceInt64Control.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Controls.CommerceInt64Control"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Controls.CommerceInt64Control.TryParseNumber(System.String,System.IFormatProvider,System.Int64@)">
            <summary>
            Converts the string representation of a number in a specified culture-specific
            format to its .NET <see cref="T:System.Int64"/> equivalent. A return value
            indicates whether the conversion succeeded or failed.
            </summary>
            <param name="value">The string value to parse.</param>
            <param name="formatProvider">An object that supplies culture-specific formatting information about the value.</param>
            <param name="result">The parsed .NET type.</param>
            <returns>True if the <paramref name="value"/> was successfully parsed, otherwise false.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Controls.CommerceInt64Control.FormatNumber(System.Int64,System.IFormatProvider)">
            <summary>
            Converts a <see cref="T:System.Int64"/> value its equivalent string representation
            using the specified culture-specific format information.
            </summary>
            <param name="value">The value to format.</param>
            <param name="formatProvider">An object that supplies culture-specific formatting information about the value.</param>
            <returns>The string representation of the <paramref name="value"/> as specified by <paramref name="formatProvider"/>.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Controls.CommerceInt32Control">
            <summary>
            Content Editor field control that allows editing of <see cref="T:System.Int32"/> numeric values.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Controls.CommerceInt32Control.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Controls.CommerceInt32Control"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Controls.CommerceInt32Control.TryParseNumber(System.String,System.IFormatProvider,System.Int32@)">
            <summary>
            Converts the string representation of a number in a specified culture-specific
            format to its .NET <see cref="T:System.Int32"/> equivalent. A return value
            indicates whether the conversion succeeded or failed.
            </summary>
            <param name="value">The string value to parse.</param>
            <param name="formatProvider">An object that supplies culture-specific formatting information about the value.</param>
            <param name="result">The parsed .NET type.</param>
            <returns>True if the <paramref name="value"/> was successfully parsed, otherwise false.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Controls.CommerceInt32Control.FormatNumber(System.Int32,System.IFormatProvider)">
            <summary>
            Converts a <see cref="T:System.Int32"/> value its equivalent string representation
            using the specified culture-specific format information.
            </summary>
            <param name="value">The value to format.</param>
            <param name="formatProvider">An object that supplies culture-specific formatting information about the value.</param>
            <returns>The string representation of the <paramref name="value"/> as specified by <paramref name="formatProvider"/>.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Controls.CommerceListControl">
            <summary>
            A base control for listing Commerce items in the Sitecore Content Editor.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Controls.CommerceListControl.ItemId">
            <summary>
            Gets or sets the item id.
            </summary>
            <value>
            The item id.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Controls.CommerceListControl.ItemLanguage">
            <summary>
            Gets or sets the item language.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Controls.CommerceListControl.Source">
            <summary>
            Gets or sets the source.
            </summary>
            <value>
            The source.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Controls.CommerceListControl.HasPostData">
            <summary>
            Gets or sets a value indicating whether this instance has post data.
            </summary>
            <value>
            <c>true</c> if this instance has post data; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Controls.CommerceListControl.ShouldRender">
            <summary>
            Gets a value indicating whether the control should render.
            </summary>
            <value>
              <c>true</c> if the control should render; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Controls.CommerceListControl.SitecoreItem">
            <summary>
            Gets the sitecore item.
            </summary>
            <value>
            The sitecore item.
            </value>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Controls.CommerceListControl.IsDisplayable(System.String)">
            <summary>
            Determines whether the specified key is displayable.
            </summary>
            <param name="key">The key.</param>
            <returns>
              <c>true</c> if the specified key is displayable; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Controls.CommerceListControl.DoRender(System.Web.UI.HtmlTextWriter)">
            <summary>
            Sends server control content to a provided <see cref="T:System.Web.UI.HtmlTextWriter"></see> object, which writes the content to be rendered on the client.
            </summary>
            <param name="output">The <see cref="T:System.Web.UI.HtmlTextWriter"></see> object that receives the server control content.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Controls.CommerceListControl.BuildCollectionToIterate(Sitecore.Data.Items.Item)">
            <summary>
            Builds the collection to iterate based on the Sitecore Item.
            </summary>
            <param name="item">The Sitecore item.</param>
            <returns>Collection of FieldInfo objects.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Controls.CommerceListControl.BuilderHeaderFieldInfo(Sitecore.Data.Items.Item)">
            <summary>
            Builders the header field info from the passed in Sitecore Item.
            </summary>
            <param name="item">The Sitecore item.</param>
            <returns>A Field</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Controls.CommerceListControl.GetCommerceSectionFieldsFromTemplate(Sitecore.Data.Items.Item)">
            <summary>
            Gets the commerce section fields from template.
            </summary>
            <param name="firstItem">The item to retrieve from section from.</param>
            <returns>FieldInfo containing section info.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Controls.CommerceListControl.WriteTableHeader(System.Web.UI.HtmlTextWriter,Sitecore.Commerce.Connect.CommerceServer.Controls.CommerceListControl.FieldInfo)">
            <summary>
            Writes the table header based on the headers in the FieldInfo.
            </summary>
            <param name="output">The HtmlTextWriter outputting the content.</param>
            <param name="fieldInfoHeaders">The field info headers.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Controls.CommerceListControl.WriteRowToTable(System.Web.UI.HtmlTextWriter,Sitecore.Commerce.Connect.CommerceServer.Controls.CommerceListControl.FieldInfo,Sitecore.Commerce.Connect.CommerceServer.Controls.CommerceListControl.FieldInfo,System.Collections.Generic.List{Sitecore.Commerce.Connect.CommerceServer.Controls.CommerceListControl.FieldInfo})">
            <summary>
            Writes the row to the table.
            </summary>
            <param name="output">The HtmlTextWriter outputting the content.</param>
            <param name="field">The information to be added to this row.</param>
            <param name="headers">The headers being added to the table.</param>
            <param name="idList">The id list used later to create the javascript to open item.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Controls.CommerceListControl.FormatFieldValue(Sitecore.Commerce.Connect.CommerceServer.Controls.CommerceListControl.FieldInfo,System.String,System.String)">
            <summary>
            Provides an opportunity to format the value before rendering
            </summary>
            <param name="field">The field info class for the item</param>
            <param name="key">The field being rendered</param>
            <param name="value">The value of the field being rendered</param>
            <returns>An updated value to render</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Controls.CommerceListControl.RenderScript(System.Web.UI.HtmlTextWriter,System.Collections.Generic.List{Sitecore.Commerce.Connect.CommerceServer.Controls.CommerceListControl.FieldInfo})">
            <summary>
            Renders the script used to open individual items from the table.
            </summary>
            <param name="output">The HtmlTextWriter writing the output.</param>
            <param name="idList">The id list.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Controls.CommerceListControl.FieldInfo">
            <summary>
            A helper class converting Sitecore Fields or other data to something more general
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Controls.CommerceListControl.FieldInfo.FieldID">
            <summary>
            Gets or sets the field ID.
            </summary>
            <value>
            The field ID.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Controls.CommerceListControl.FieldInfo.ItemID">
            <summary>
            Gets or sets the item ID.
            </summary>
            <value>
            The item ID.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Controls.CommerceListControl.FieldInfo.KeysAndValues">
            <summary>
            Gets the keys and values.
            </summary>
            <value>
            The keys and values.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Controls.CommerceListControl.FieldInfo.Item(System.String)">
            <summary>
            Gets or sets the <see cref="T:System.String"/> with the specified key.
            </summary>
            <value>
            The <see cref="T:System.String"/>.
            </value>
            <param name="key">The key.</param>
            <returns>String value for that particular key.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Controls.CommerceListControl.FieldInfo.FromItem(Sitecore.Data.Items.Item)">
            <summary>
            Converts a Sitecore item to a FieldInfo item.
            </summary>
            <param name="item">The Sitecore item.</param>
            <returns>A FieldInfo item.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Controls.CommerceListControl.FieldInfo.op_Implicit(Sitecore.Data.Items.Item)~Sitecore.Commerce.Connect.CommerceServer.Controls.CommerceListControl.FieldInfo">
            <summary>
            Converts the Sitecore Item to a FieldInfo 
            </summary>
            <param name="item">The Sitecore Item.</param>
            <returns>FieldInfo object based on the Sitecore Item.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Controls.CommerceNumberControl`1">
            <summary>
            Base Content Editor control that allows users to edit numeric
            values using the format appropriate for the language of the item being edited.
            </summary>
            <typeparam name="T">The .NET type of the item field being edited.</typeparam>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Controls.CommerceNumberControl`1.#ctor">
            <summary>
            Initializes a new instance of the CommerceNumberControl class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Controls.CommerceNumberControl`1.ItemLanguage">
            <summary>
            Gets or sets the language of the item being edited.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Controls.CommerceNumberControl`1.ContentLanguage">
            <summary>
            Gets the selected content language of the logged in user
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Controls.CommerceNumberControl`1.ItemFormatProvider">
            <summary>
            Gets the format provider appropriate for the item being edited.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Controls.CommerceNumberControl`1.DoChange(Sitecore.Web.UI.Sheer.Message)">
            <summary>
            Raises the Change event. 
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Controls.CommerceNumberControl`1.FormatNumber(System.String)">
            <summary>
            Formats the number value for display..
            </summary>
            <param name="value">The raw value to format.</param>
            <returns>The formatted number value.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Controls.CommerceNumberControl`1.SetNumber(System.String)">
            <summary>
            Sets the number value for the control.
            </summary>
            <param name="value">The value.</param>
            <returns>True if the value was successfully set, otherwise false.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Controls.CommerceNumberControl`1.TryParseNumber(System.String,System.IFormatProvider,`0@)">
            <summary>
            Converts the string representation of a number in a specified culture-specific format to its .NET type equivalent. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="value">The string value to parse.</param>
            <param name="formatProvider">An object that supplies culture-specific formatting information about the value.</param>
            <param name="result">The parsed .NET type.</param>
            <returns>True if the <paramref name="value"/> was successfully parsed, otherwise false.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Controls.CommerceNumberControl`1.FormatNumber(`0,System.IFormatProvider)">
            <summary>
            Converts a numeric value its equivalent string representation using the specified culture-specific format information.
            </summary>
            <param name="value">The value to format.</param>
            <param name="formatProvider">An object that supplies culture-specific formatting information about the value.</param>
            <returns>The string representation of the <paramref name="value"/> as specified by <paramref name="formatProvider"/>.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Controls.CommerceSingleControl">
            <summary>
            Content Editor field control that allows editing of <see cref="T:System.Single"/> numeric values.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Controls.CommerceSingleControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Controls.CommerceSingleControl"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Controls.CommerceSingleControl.TryParseNumber(System.String,System.IFormatProvider,System.Single@)">
            <summary>
            Converts the string representation of a number in a specified culture-specific
            format to its .NET <see cref="T:System.Single"/> equivalent. A return value
            indicates whether the conversion succeeded or failed.
            </summary>
            <param name="value">The string value to parse.</param>
            <param name="formatProvider">An object that supplies culture-specific formatting information about the value.</param>
            <param name="result">The parsed .NET type.</param>
            <returns>True if the <paramref name="value"/> was successfully parsed, otherwise false.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Controls.CommerceSingleControl.FormatNumber(System.Single,System.IFormatProvider)">
            <summary>
            Converts a <see cref="T:System.Single"/> value its equivalent string representation
            using the specified culture-specific format information.
            </summary>
            <param name="value">The value to format.</param>
            <param name="formatProvider">An object that supplies culture-specific formatting information about the value.</param>
            <returns>The string representation of the <paramref name="value"/> as specified by <paramref name="formatProvider"/>.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Controls.CommerceReadOnlyControl">
            <summary>
            Base Content Editor control that allows users to edit numeric
            values using the format appropriate for the language of the item being edited.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Controls.CommerceReadOnlyControl.DoRender(System.Web.UI.HtmlTextWriter)">
            <summary>
            Called when the control needs to render
            </summary>
            <param name="output">The stream to write out to</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Controls.ParentCategoriesSearchListControl">
            <summary>
            Control that allows editing of a Commerce Catalog item's parent categories collection.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Controls.ParentCategoriesSearchListControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Controls.ParentCategoriesSearchListControl"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Controls.ParentCategoriesSearchListControl.GetSelectedItems(System.Collections.ArrayList@)">
            <summary>
            Gets the selected items.
            </summary>
            <param name="selected">The Commerce Server items already selected.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Controls.ParentCategoriesListControl">
            <summary>
            Control that allows editing of a Commerce Catalog item's parent categories collection.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Controls.ParentCategoriesListControl.GetDisplayableTemplateNames">
            <summary>
            Gets the names of the Sitecore templates that should be displayed in the tree list control.
            </summary>
            <returns>The names of the Sitecore templates that represent Commerce categories.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Controls.ParentCategoriesListControl.GetSelectedItemExternalIds">
            <summary>
            Gets the external IDs of the Commerce categories that are parents of the <see cref="T:CommerceServer.Core.Catalog.CatalogItem"/> being edited.
            </summary>
            <returns>The external IDs of the Commerce categories that are parents of the <see cref="T:CommerceServer.Core.Catalog.CatalogItem"/> being edited.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Controls.ParentCategoriesListControl.GetTemplatesExcludedForSelection">
            <summary>
            Gets the names of the Sitecore templates that cannot be selected in the tree list control.
            </summary>
            <returns>The names of the Sitecore templates that cannot be selected in the tree list control.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Controls.PrimaryParentCategoryControl">
            <summary>
            Control that allows editing of a Commerce CatalogItem's primary parent category.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Controls.PrimaryParentCategoryControl.CatalogItemForEditing">
            <summary>
            Gets the Commerce <see cref="T:CommerceServer.Core.Catalog.CatalogItem"/> that is being edited.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Controls.PrimaryParentCategoryControl.GetItems(Sitecore.Data.Items.Item)">
            <summary>
            Gets the list of items that can be selected in the dropdown list of this control.
            </summary>
            <param name="current">The Sitecore item that is being edited.</param>
            <returns>The list of items that can be selected in the dropdown list of this control.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Controls.RelationshipListControl">
            <summary>
            A control for displaying related items in the Sitecore Content editor.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Controls.RelationshipListControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Controls.RelationshipListControl"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Controls.RelationshipListControl.ShouldRender">
            <summary>
            Gets a value indicating whether the control should render.
            </summary>
            <value>
            <c>true</c> if the control should render; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Controls.RelationshipListControl.DoRender(System.Web.UI.HtmlTextWriter)">
            <summary>
            Sends server control content to a provided <see cref="T:System.Web.UI.HtmlTextWriter"></see> object, which writes the content to be rendered on the client.
            </summary>
            <param name="output">The <see cref="T:System.Web.UI.HtmlTextWriter"></see> object that receives the server control content.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Controls.RelationshipListControl.CreateRelationshipInfo(Sitecore.Commerce.Connect.CommerceServer.Catalog.Fields.CatalogRelationshipInformation,CommerceServer.Core.Catalog.CatalogRelationshipsDataSet.CatalogRelationship)">
            <summary>
            Builds field information for the relationship rows of the relationship tables.
            </summary>
            <param name="relationship">The catalog relationship information from the relationship field.</param>
            <param name="relationshipRow">The catalog data row representing the relationship.</param>
            <returns>Field information for the relationship rows of the relationship tables.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Controls.RelationshipListControl.BuildRelationshipHeaders">
            <summary>
            Builds field information for the headers of the relationship tables.
            </summary>
            <returns>Field information for the headers of the relationship tables.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Controls.RelationshipListControl.IsDisplayable(System.String)">
            <summary>
            Determines whether the specified key is displayable.
            </summary>
            <param name="key">The key.</param>
            <returns>
              <c>true</c> if the specified key is displayable; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Controls.RelationshipListControl.Relationship">
            <summary>
            A helper class for dealing with relationships.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Controls.RelationshipListControl.Relationship.Id">
            <summary>
            Gets or sets the id.
            </summary>
            <value>
            The id.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Controls.RelationshipListControl.Relationship.RelationshipName">
            <summary>
            Gets or sets the name of the relationship.
            </summary>
            <value>
            The name of the relationship.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Controls.RelationshipListControl.Relationship.TargetId">
            <summary>
            Gets or sets the target id.
            </summary>
            <value>
            The target id.
            </value>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Controls.RelationshipListControl.Relationship.FromString(System.String)">
            <summary>
            Creates a Relationship helper class from a string.
            </summary>
            <param name="item">A delimited string representing a relationship.</param>
            <returns>A Relationship helper based on the passed in string.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Controls.RelationshipListControl.Relationship.op_Implicit(System.String)~Sitecore.Commerce.Connect.CommerceServer.Controls.RelationshipListControl.Relationship">
            <summary>
            Creates a Relationship helper class from a string.
            </summary>
            <param name="item">A delimited string representing a relationship.</param>
            <returns>A Relationship helper based on the passed in string.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Controls.VariantListControl">
            <summary>
            A control for displaying a list of Product Variants in the Sitecore Content Editor. 
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Controls.VariantListControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Controls.VariantListControl"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Controls.VariantListControl.IsDisplayable(System.String)">
            <summary>
            Determines whether the specified key is displayable.
            </summary>
            <param name="key">The key.</param>
            <returns>
              <c>true</c> if the specified key is displayable; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Controls.VariantListControl.BuilderHeaderFieldInfo(Sitecore.Data.Items.Item)">
            <summary>
            Builders the header field info from the passed in Sitecore Item.
            </summary>
            <param name="item">The Sitecore item.</param>
            <returns>
            A Field
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Controls.VariantListControl.FormatFieldValue(Sitecore.Commerce.Connect.CommerceServer.Controls.CommerceListControl.FieldInfo,System.String,System.String)">
            <summary>
            Provides an opportunity to format the value before rendering
            </summary>
            <param name="field">The field info class for the item</param>
            <param name="key">The field being rendered</param>
            <param name="value">The value of the field being rendered</param>
            <returns>An updated value to render</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Staging.PublishFormWithStaging">
            <summary>
            Publishing form that also exposes commerce staging projects.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Staging.PublishFormWithStaging.stagingPanel">
            <summary>
            The <see cref="T:Sitecore.Web.UI.HtmlControls.Groupbox"/> UI object that will contain all commerce staging options.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Staging.PublishFormWithStaging.stagingProjects">
            <summary>
            The <see cref="T:Sitecore.Web.UI.HtmlControls.Border"/> UI object that will contain the staging projects.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Staging.PublishFormWithStaging.stagingWarning">
            <summary>
            The <see cref="T:Sitecore.Web.UI.HtmlControls.Literal"/> UI control that will contain any warning message related to staging projects.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Staging.PublishFormWithStaging.stagingOptionsPanel">
            <summary>
            The <see cref="T:Sitecore.Web.UI.HtmlControls.Groupbox"/> UI control that contains options related to commerce staging.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Staging.PublishFormWithStaging.StagingServer">
            <summary>
            Gets the name of the staging server associated with the publishing wizard.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Staging.PublishFormWithStaging.SelectedStagingProjects">
            <summary>
            Gets or sets the staging projects that have been selected by the user.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Staging.PublishFormWithStaging.StartedStagingProjects">
            <summary>
            Gets or sets the staging projects that have been successfully started.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Staging.PublishFormWithStaging.IsStagingComplete">
            <summary>
            Gets or sets a value indicating whether all staging projects have completed.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Staging.PublishFormWithStaging.DoNotPublish">
            <summary>
            Gets or sets a value indicating whether all staging projects have completed.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Staging.PublishFormWithStaging.CheckStagingStatus">
            <summary>
            Checks the status of the selected commerce staging projects.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Staging.PublishFormWithStaging.StartSelectedStagingProjects">
            <summary>
            Starts the staging projects that have been selected in the publish form.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Staging.PublishFormWithStaging.ActivePageChanging(System.String,System.String@)">
            <summary>
            Called when the active page is changing.
            </summary>
            <param name="page">The page that is being left.</param>
            <param name="newpage">The new page that is being entered.</param>
            <returns>True, if the change is allowed, otherwise false.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Staging.PublishFormWithStaging.ActivePageChanged(System.String,System.String)">
            <summary>
            Called when the active page has been changed.
            </summary>
            <param name="page">The page that has been entered.</param>
            <param name="oldPage">The page that was left.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Staging.PublishFormWithStaging.OnLoad(System.EventArgs)">
            <summary>
            Handles the Load event.
            </summary>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Staging.PublishFormWithStaging.GetActiveStagingProjects">
            <summary>
            Gets the names of the selected staging projects that are currently active.
            </summary>
            <returns>A list containing the names of the selected staging projects that are currently active.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Staging.PublishFormWithStaging.BuildStagingProjectControls">
            <summary>
            Builds the list of staging projects in the UI.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Staging.PublishFormWithStaging.GetAllStagingProjects">
            <summary>
            Gets the names of the staging projects that are defined on the current server.
            </summary>
            <returns>The names of the staging projects that are defined on the current server.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Staging.PublishFormWithStaging.GetProjectStatus(System.String)">
            <summary>
            Gets the current local status of a commerce staging project.
            </summary>
            <param name="projectName">The name of the commerce staging project.</param>
            <returns>The current local status of the specified commerce staging project.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Staging.PublishFormWithStaging.GetAllActiveStagingProjects">
            <summary>
            Gets the names of the commerce staging projects that are currently active.
            </summary>
            <returns>The names of the commerce staging projects that are currently active.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Staging.PublishFormWithStaging.LoadSelectedStagingProjectsFromUI">
            <summary>
            Gets the Commerce Server staging projects that have been selected in the publishing dialog.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Staging.PublishFormWithStaging.LoadStagingOptionsFromUI">
            <summary>
            Loads the commerce staging options that ahve been selected in the UI.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Staging.Pipelines.GetActiveCommerceStagingProjectsArgs">
            <summary>
            Used to represent the arguments for the GetActiveCommerceStagingProjects pipeline
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Staging.Pipelines.GetActiveCommerceStagingProjectsArgs._input">
            <summary>
            Used to hold the input paramters for the pipeline
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Staging.Pipelines.GetActiveCommerceStagingProjectsArgs._output">
            <summary>
            Used to hold the output paramters for the pipeline
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Staging.Pipelines.GetActiveCommerceStagingProjectsArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Staging.Pipelines.GetActiveCommerceStagingProjectsArgs" /> class
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Staging.Pipelines.GetActiveCommerceStagingProjectsArgs.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Staging.Pipelines.GetActiveCommerceStagingProjectsArgs" /> class
            </summary>
            <param name="info">Info for the context</param>
            <param name="context">The streaming context</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Staging.Pipelines.GetActiveCommerceStagingProjectsArgs.InputParameters">
            <summary>
            Gets the input params for the pipeline
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Staging.Pipelines.GetActiveCommerceStagingProjectsArgs.OutputParameters">
            <summary>
            Gets the output from the pipeline
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Staging.Pipelines.GetActiveCommerceStagingProjectsArgs.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Gets the object data.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Staging.Pipelines.GetActiveCommerceStagingProjectsArgs.Input">
            <summary>
            Represents the input required by the pipeline
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Staging.Pipelines.GetActiveCommerceStagingProjectsArgs.Input.ServerName">
            <summary>
            Gets or sets the name of the server containing the staging project.  Use string.Empty for the local server.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Staging.Pipelines.GetActiveCommerceStagingProjectsArgs.Input.ProjectsToInspect">
            <summary>
            Gets or sets an optional list of the specific projects to examine.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Staging.Pipelines.GetActiveCommerceStagingProjectsArgs.Output">
            <summary>
            Represents the output from the pipeline
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Staging.Pipelines.GetActiveCommerceStagingProjectsArgs.Output.ProjectNames">
            <summary>
            Gets or sets the name of staging projects that are active
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Staging.Pipelines.GetAllCommerceStagingProjectsArgs">
            <summary>
            Used to represent the arguments for the GetAllCommerceStagingProjects pipeline
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Staging.Pipelines.GetAllCommerceStagingProjectsArgs._input">
            <summary>
            Used to hold the input paramters for the pipeline
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Staging.Pipelines.GetAllCommerceStagingProjectsArgs._output">
            <summary>
            Used to hold the output paramters for the pipeline
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Staging.Pipelines.GetAllCommerceStagingProjectsArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Staging.Pipelines.GetAllCommerceStagingProjectsArgs" /> class
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Staging.Pipelines.GetAllCommerceStagingProjectsArgs.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Staging.Pipelines.GetAllCommerceStagingProjectsArgs" /> class
            </summary>
            <param name="info">Info for the context</param>
            <param name="context">The streaming context</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Staging.Pipelines.GetAllCommerceStagingProjectsArgs.InputParameters">
            <summary>
            Gets the input params for the pipeline
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Staging.Pipelines.GetAllCommerceStagingProjectsArgs.OutputParameters">
            <summary>
            Gets the output from the pipeline
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Staging.Pipelines.GetAllCommerceStagingProjectsArgs.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Gets the object data.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Staging.Pipelines.GetAllCommerceStagingProjectsArgs.Input">
            <summary>
            Represents the input required by the pipeline
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Staging.Pipelines.GetAllCommerceStagingProjectsArgs.Input.ServerName">
            <summary>
            Gets or sets the name of the server containing the staging project.  Use string.Empty for the local server.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Staging.Pipelines.GetAllCommerceStagingProjectsArgs.Output">
            <summary>
            Represents the output from the pipeline
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Staging.Pipelines.GetAllCommerceStagingProjectsArgs.Output.ProjectNames">
            <summary>
            Gets or sets the name of all staging projects defined on the server.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Staging.Pipelines.GetCommerceStagingProjectLocalStatusArgs">
            <summary>
            Used to represent the arguments for the GetCommerceStagingProjectLocalStatus pipeline
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Staging.Pipelines.GetCommerceStagingProjectLocalStatusArgs._input">
            <summary>
            Used to hold the input paramters for the pipeline
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Staging.Pipelines.GetCommerceStagingProjectLocalStatusArgs._output">
            <summary>
            Used to hold the output paramters for the pipeline
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Staging.Pipelines.GetCommerceStagingProjectLocalStatusArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Staging.Pipelines.GetCommerceStagingProjectLocalStatusArgs" /> class
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Staging.Pipelines.GetCommerceStagingProjectLocalStatusArgs.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Staging.Pipelines.GetCommerceStagingProjectLocalStatusArgs" /> class
            </summary>
            <param name="info">Info for the context</param>
            <param name="context">The streaming context</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Staging.Pipelines.GetCommerceStagingProjectLocalStatusArgs.InputParameters">
            <summary>
            Gets the input params for the pipeline
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Staging.Pipelines.GetCommerceStagingProjectLocalStatusArgs.OutputParameters">
            <summary>
            Gets the output from the pipeline
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Staging.Pipelines.GetCommerceStagingProjectLocalStatusArgs.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Gets the object data.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Staging.Pipelines.GetCommerceStagingProjectLocalStatusArgs.Input">
            <summary>
            Represents the input required by the pipeline
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Staging.Pipelines.GetCommerceStagingProjectLocalStatusArgs.Input.ServerName">
            <summary>
            Gets or sets the name of the server containing the staging project.  Use string.Empty for the local server.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Staging.Pipelines.GetCommerceStagingProjectLocalStatusArgs.Input.ProjectName">
            <summary>
            Gets or sets the name of the commerce staging project.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Staging.Pipelines.GetCommerceStagingProjectLocalStatusArgs.Output">
            <summary>
            Represents the output from the pipeline
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Staging.Pipelines.GetCommerceStagingProjectLocalStatusArgs.Output.Status">
            <summary>
            Gets or sets the status of the commerce staging project.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Staging.Pipelines.StartCommerceStagingProjectArgs">
            <summary>
            Used to represent the arguments for the StartCommerceStagingProject pipeline
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Staging.Pipelines.StartCommerceStagingProjectArgs._input">
            <summary>
            Used to hold the input paramters for the pipeline
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Staging.Pipelines.StartCommerceStagingProjectArgs._output">
            <summary>
            Used to hold the output paramters for the pipeline
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Staging.Pipelines.StartCommerceStagingProjectArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Staging.Pipelines.StartCommerceStagingProjectArgs" /> class
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Staging.Pipelines.StartCommerceStagingProjectArgs.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Staging.Pipelines.StartCommerceStagingProjectArgs" /> class
            </summary>
            <param name="info">Info for the context</param>
            <param name="context">The streaming context</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Staging.Pipelines.StartCommerceStagingProjectArgs.InputParameters">
            <summary>
            Gets the input params for the pipeline
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Staging.Pipelines.StartCommerceStagingProjectArgs.OutputParameters">
            <summary>
            Gets the output from the pipeline
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Staging.Pipelines.StartCommerceStagingProjectArgs.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Gets the object data.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Staging.Pipelines.StartCommerceStagingProjectArgs.Input">
            <summary>
            Represents the input required by the pipeline
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Staging.Pipelines.StartCommerceStagingProjectArgs.Input.ServerName">
            <summary>
            Gets or sets the name of the server containing the staging project.  Use string.Empty for the local server.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Staging.Pipelines.StartCommerceStagingProjectArgs.Input.ProjectName">
            <summary>
            Gets or sets the name of the commerce staging project.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Staging.Pipelines.StartCommerceStagingProjectArgs.Output">
            <summary>
            Represents the output from the pipeline
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Staging.Pipelines.StartCommerceStagingProjectArgs.Output.Succeeded">
            <summary>
            Gets or sets a value indicating whether the commerce staging project was successfully started.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Staging.Pipelines.GetActiveCommerceStagingProjectsProcessor">
            <summary>
            Sitecore pipeline component that retrieves a list of the commerce staging projects that are currently active on a server.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Staging.Pipelines.GetActiveCommerceStagingProjectsProcessor.Process(Sitecore.Commerce.Connect.CommerceServer.Staging.Pipelines.GetActiveCommerceStagingProjectsArgs)">
            <summary>
            Retrieves a list of the commerce staging projects that are currently active on a server.
            </summary>
            <param name="args">The pipeline arguments.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Staging.Pipelines.GetActiveCommerceStagingProjectsProcessor.IsProjectActive(System.String,System.String)">
            <summary>
            Checks if a commerce staging project is currently active.
            </summary>
            <param name="projectName">The name of the commerce staging project.</param>
            <param name="serverName">The name of the server containing the staging project.</param>
            <returns>True if the project is active, otherwise false.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Staging.Pipelines.GetAllCommerceStagingProjectsProcessor">
            <summary>
            Sitecore pipeline component that reports the names of all commerce staging projects defined on a server.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Staging.Pipelines.GetAllCommerceStagingProjectsProcessor.Process(Sitecore.Commerce.Connect.CommerceServer.Staging.Pipelines.GetAllCommerceStagingProjectsArgs)">
            <summary>
            Reports the progress of a commerce staging project replication.
            </summary>
            <param name="args">The pipeline arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Staging.Pipelines.GetCommerceStagingProjectLocalStatusProcessor">
            <summary>
            Sitecore pipeline component that reports the local progress of a commerce staging project replication.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Staging.Pipelines.GetCommerceStagingProjectLocalStatusProcessor.Process(Sitecore.Commerce.Connect.CommerceServer.Staging.Pipelines.GetCommerceStagingProjectLocalStatusArgs)">
            <summary>
            Reports the progress of a commerce staging project replication.
            </summary>
            <param name="args">The pipeline arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Staging.Pipelines.StartCommerceStagingProjectProcessor">
            <summary>
            Sitecore pipeline component that starts a commerce server staging project replication.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Staging.Pipelines.StartCommerceStagingProjectProcessor.Process(Sitecore.Commerce.Connect.CommerceServer.Staging.Pipelines.StartCommerceStagingProjectArgs)">
            <summary>
            Starts a commerce server staging project replication.
            </summary>
            <param name="args">The pipeline arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Pipelines.CheckIfCommerceServerIsInitialized">
            <summary>
            ContentEditor pipeline component that checks if CS is initialized.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Pipelines.CheckIfCommerceServerIsInitialized.Process(Sitecore.Pipelines.GetContentEditorWarnings.GetContentEditorWarningsArgs)">
            <summary>
            pipeline execution method.  If necessary, returns a message in the content editor indicating CS is not currently initialized.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Pipelines.CommercePipelineProcessor">
            <summary>
            Base pipeline processor for all processors.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Pipelines.CommercePipelineProcessor.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Pipelines.CommerceRequest">
            <summary>
            Defines the base class of all the commerce CommerceConnect specific requests.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Pipelines.CommerceResult">
            <summary>
            Defines the base class of all the commerce CommerceConnect specific results.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Pipelines.CommerceTranslateProcessor">
            <summary>
            Base pipeline processor for all translation processors.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Pipelines.PipelineContext">
            <summary>
            Base pipeline context class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Pipelines.PipelineContext.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Pipelines.PipelineContext"/> class.
            </summary>
            <param name="contextKey">The context key.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Pipelines.PipelineContextNames">
            <summary>
            PipelineContextNames constants
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Pipelines.PipelineContextNames.CartPipelineContext">
            <summary>
            The cart pipeline context property bag key.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Pipelines.PipelineNames">
            <summary>
            PipelineNames constants
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Pipelines.PipelineNames.TranslateEntityToCreditCard">
            <summary>
            The translate entity to credit card
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Pipelines.PipelineNames.TranslateShipmentToEntity">
            <summary>
            The translate shipment to entity
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Pipelines.PipelineNames.TranslatePaymentToEntity">
            <summary>
            The translate payment to entity
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Pipelines.PipelineNames.TranslateOrderGroupToEntity">
            <summary>
            The translate commerce cart to entity
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Pipelines.PipelineNames.TranslateOrderGroupToOrderHeader">
            <summary>
            The translate order group to order header
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Pipelines.PipelineNames.TranslateEntityToOrderAddress">
            <summary>
            The translate CommerceConnect entity to a commerce server order address.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Pipelines.PipelineNames.TranslateOrderAddressToEntity">
            <summary>
            The translate commerce server order address to CommerceConnect entity.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Pipelines.PipelineNames.TranslateSkuToEntity">
            <summary>
            The translate commerce inventorySku to CommerceConnect commerceStockInformation
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Pipelines.PipelineNames.TranslateEntityToSku">
            <summary>
            The translate CommerceConnect commerceStockInformation to commerce inventorySku
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Pipelines.PipelineNames.TranslateInventoryCatalogToEntity">
            <summary>
            The name of the translate.InventoryCatalogToEntity pipeline
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Pipelines.PipelineNames.TranslateEntityToInventoryCatalog">
            <summary>
            The name of the translate.EntityToInventoryCatalog pipeline
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Pipelines.PipelineNames.AddPromoCode">
            <summary>
            The name of the commerce.carts.addPromoCode pipeline
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Pipelines.PipelineNames.RemovePromoCode">
            <summary>
            The name of the commerce.carts.removePromoCode pipeline
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Pipelines.PipelineNames.SaveSku">
            <summary>
            The name of the commerce.inventory.saveSku pipeline
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Pipelines.PipelineNames.SaveInventoryCatalog">
            <summary>
            The name of the commerce.inventory.saveInventoryCatalog pipeline
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Pipelines.PipelineNames.CreateStockLocation">
            <summary>
            The name of the commerce.inventory.createStockLocation pipeline
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Pipelines.PipelineNames.UpdateStockLocation">
            <summary>
            The name of the commerce.inventory.updateStockLocation pipeline
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Pipelines.PipelineNames.SearchStockInformation">
            <summary>
            The name of the commerce.inventory.searchStockInformation pipeline
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Pipelines.PipelineNames.GetStockLocation">
            <summary>
            The name of the commerce.inventory.getStockLocation pipeline
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Pipelines.PipelineNames.SearchStockLocations">
            <summary>
            The name of the commerce.inventory.searchStockLocations pipeline
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Pipelines.PipelineNames.DeleteStockLocation">
            <summary>
            The name of the commerce.inventory.deleteStockLocation pipeline
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Pipelines.PipelineNames.CreateStockInformation">
            <summary>
            The name of the commerce.inventory.createStockInformation pipeline
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Pipelines.PipelineNames.DeleteStockInformation">
            <summary>
            The name of the commerce.inventory.deleteStockInformation pipeline
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Pipelines.PipelineNames.UpdateStockInformation">
            <summary>
            The name of the commerce.inventory.updateStockInformation pipeline
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Pipelines.PipelineNames.GetUnassociatedProductCatalogs">
            <summary>
            The name of the commerce.inventory.getUnassociatedProductCatalogs pipeline
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Pipelines.PipelineNames.GetAssociatedStockLocation">
            <summary>
            The name of the commerce.inventory.getAssociatedStockLocation pipeline
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Pipelines.PipelineNames.PurgeDeletedItems">
            <summary>
            The name of the commerce.inventory.purgeDeletedItems pipeline
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Pipelines.PipelineNames.AssociateLocation">
            <summary>
            The name of the commerce.inventory.associateLocation pipeline
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Pipelines.PipelineNames.DisassociateLocation">
            <summary>
            The name of the commerce.inventory.disassociateLocation pipeline
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Pipelines.AdditionalRequestInformation">
            <summary>
            Defined the AdditionalRequestInformation class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Pipelines.AdditionalRequestInformation.Get``1(Sitecore.Commerce.Services.ServiceProviderRequest,System.String)">
            <summary>
            Gets the additional information from the request.
            </summary>
            <typeparam name="T">Additional information class type.</typeparam>
            <param name="request">The request.</param>
            <param name="key">The key.</param>
            <returns>The additional information instance of type T.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Pipelines.AdditionalRequestInformationNames">
            <summary>
            Defines the AdditionalRequestInformationNames constants.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Pipelines.AdditionalRequestInformationNames.AddCartLinesRequestInformation">
            <summary>
            The add cart lines request information
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Pipelines.AdditionalRequestInformationNames.CartRequestInformation">
            <summary>
            The cart request information
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Pipelines.AdditionalRequestInformationNames.GetCartsRequestInformation">
            <summary>
            The get carts request information
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Pipelines.AdditionalRequestInformationNames.LoadCartRequestInformation">
            <summary>
            The load cart request information
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Pipelines.PipelineUtility">
            <summary>
            Defines the PipelineUtility static class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Pipelines.PipelineUtility.RunCommerceConnectPipeline``2(System.String,``0)">
            <summary>
            Runs the pipeline CommerceConnect style.
            </summary>
            <typeparam name="TRequest">The type of the request.</typeparam>
            <typeparam name="TResult">The type of the result.</typeparam>
            <param name="pipelineName">Name of the pipeline.</param>
            <param name="request">The request.</param>
            <returns>
            The pipeline result is returned by this method.
            </returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Pipelines.Processors.Customers.AddToCommerceUserIndex">
            <summary>
            Pipeline processor that adds a new user to the commerce users index.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Pipelines.Processors.Customers.AddToCommerceUserIndex.GetProfileId(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Retrieves the ID of the profile related to the user.
            </summary>
            <param name="args">The pipeline arguments.</param>
            <returns>The ID of the profile related to the user.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Pipelines.Processors.Customers.CommerceUserIndexProcessor">
            <summary>
            Base class for pipeline processors that update a commerce user index.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Pipelines.Processors.Customers.CommerceUserIndexProcessor.IndexName">
            <summary>
            Gets or sets the name of the commerce users index.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Pipelines.Processors.Customers.CommerceUserIndexProcessor.ProfileType">
            <summary>
            Gets or sets the user profile type.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Pipelines.Processors.Customers.CommerceUserIndexProcessor.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the pipeline arguments.
            </summary>
            <param name="args">The pipeline arguments.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Pipelines.Processors.Customers.CommerceUserIndexProcessor.PerformIndexUpdate(Sitecore.ContentSearch.ISearchIndex,Sitecore.Commerce.Connect.CommerceServer.Search.CommerceProfileIndexableUniqueId)">
            <summary>
            Performs the commerce user index update.
            </summary>
            <param name="index">The commerce user index.</param>
            <param name="profileKey">The commerce user profile key.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Pipelines.Processors.Customers.CommerceUserIndexProcessor.GetProfileId(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Retrieves the ID of the profile related to the user.
            </summary>
            <param name="args">The pipeline arguments.</param>
            <returns>The ID of the profile related to the user.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Pipelines.Processors.Customers.DeleteCustomer">
            <summary>
            Deletes a customer in Commerce Server
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Pipelines.Processors.Customers.DeleteCustomer.CustomerProfileName">
            <summary>
            Gets the name of the Commerce Server profile that represents customers
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Pipelines.Processors.Customers.DeleteCustomer.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments to execute against.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Pipelines.Processors.Customers.GetCustomer">
            <summary>
            Gets a customer from Commerce Server
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Pipelines.Processors.Customers.GetCustomer.#ctor(Sitecore.Commerce.Data.Customers.ICustomerRepository)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Pipelines.Processors.Customers.GetCustomer"/> class.
            </summary>
            <param name="customerRepository">The user repository.</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Pipelines.Processors.Customers.GetCustomer.CustomerProfileName">
            <summary>
            Gets the name of the Commerce Server profile that represents customers
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Pipelines.Processors.Customers.GetCustomer.EntityFactory">
            <summary>
            Gets the entity factory.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Pipelines.Processors.Customers.GetCustomer.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Executes the business logic of the GetCustomersFromSitecore processor.
            </summary>
            <param name="args">The arguments to run against.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Pipelines.Processors.Customers.RemoveFromCommerceUserIndex">
            <summary>
            Pipeline processor that updates the commerce users index when a user is deleted.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Pipelines.Processors.Customers.RemoveFromCommerceUserIndex.PerformIndexUpdate(Sitecore.ContentSearch.ISearchIndex,Sitecore.Commerce.Connect.CommerceServer.Search.CommerceProfileIndexableUniqueId)">
            <summary>
            Performs the commerce user index update.
            </summary>
            <param name="index">The commerce user index.</param>
            <param name="profileKey">The commerce user profile key.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Pipelines.Processors.Customers.RemoveFromCommerceUserIndex.GetProfileId(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Retrieves the ID of the profile related to the user.
            </summary>
            <param name="args">The pipeline arguments.</param>
            <returns>The ID of the profile related to the user.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Pipelines.Processors.Customers.UpdateCommerceUserIndex">
            <summary>
            Pipeline processor that updates the commerce users index when a user is modified.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Pipelines.Processors.Customers.UpdateCommerceUserIndex.GetProfileId(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Retrieves the ID of the profile related to the user.
            </summary>
            <param name="args">The pipeline arguments.</param>
            <returns>The ID of the profile related to the user.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Pipelines.CommerceBaseModuleProcessor`1">
            <summary>
            Base class for the commerce module processors.
            </summary>
            <typeparam name="T">A type implementing IHttpModule and containing a default constructor.</typeparam>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Pipelines.CommerceBaseModuleProcessor`1.Init(Sitecore.Pipelines.PipelineArgs)">
            <summary>
            Initializes the module processor.
            </summary>
            <param name="args">The PipelineArgs.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Pipelines.CommerceBaseModuleProcessor`1.BeginRequest(Sitecore.Pipelines.PipelineArgs)">
            <summary>
            Invokes the Begin method on the current module.
            </summary>
            <param name="args">The PipeLineArgs.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Pipelines.CommerceBaseModuleProcessor`1.EndRequest(Sitecore.Pipelines.PipelineArgs)">
            <summary>
            Invokes the End method on the current module.
            </summary>
            <param name="args">The PipelineArgs.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Pipelines.CommerceBaseModuleProcessor`1.Begin(`0)">
            <summary>
            Begin method of the module processor.
            </summary>
            <param name="module">The module to invoke the Begin method against.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Pipelines.CommerceBaseModuleProcessor`1.End(`0)">
            <summary>
            End method of the module processor.
            </summary>
            <param name="module">The module to invoke the End method against.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Pipelines.CommerceBaseModuleProcessor`1.SetModule(`0)">
            <summary>
            Adds the module to the current HttpContext Application state.
            </summary>
            <param name="module">The module to add.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Pipelines.CommerceBaseModuleProcessor`1.GetModule">
            <summary>
            Gets the module from the current HttpContext Application state.
            </summary>
            <returns>The module.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Pipelines.CommerceExpressionEvaluatorProcessor">
            <summary>
            Processor for the CommerceExpressionModule.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Pipelines.CommerceCacheProcessor">
            <summary>
            Processor for the CommerceCacheModule.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Pipelines.CommerceProfileProcessor">
            <summary>
            Processor for the CommerceProfileModule.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Pipelines.CommerceProfileProcessor.Begin(CommerceServer.Core.Runtime.Profiles.CommerceProfileModule)">
            <summary>
            Invokes the BeginRequest method on the CommerceProfileModule.
            </summary>
            <param name="module">The module to execute the BeginRequest method against.</param> 
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Pipelines.CommerceOrderProcessor">
            <summary>
            Processor for the CommerceOrderModule.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Pipelines.CommerceOrderProcessor.Begin(CommerceServer.Core.Runtime.Orders.CommerceOrderModule)">
            <summary>
            Invokes the BeginRequest method on the CommerceOrderModule.
            </summary>
            <param name="module">The module to execute the BeginRequest method against.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Pipelines.CommerceCatalogProcessor">
            <summary>
            Processor for the CommerceCatalogModule.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Pipelines.CommerceCatalogProcessor.Begin(CommerceServer.Core.Runtime.Catalog.CommerceCatalogModule)">
            <summary>
            Invokes the BeginRequest method on the CommerceCatalogModule.
            </summary>
            <param name="module">The module to execute the BeginRequest method against.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Pipelines.CommerceApplicationProcessor">
            <summary>
            Pipeline processor for the CommerceApplicationModule.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Pipelines.CommerceApplicationProcessor.Begin(CommerceServer.Core.Runtime.CommerceApplicationModule)">
            <summary>
            Invokes the BeginRequest method on the CommerceApplicationModule.
            </summary>
            <param name="module">The module to execute the BeginRequest method against.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Pipelines.CommerceApplicationProcessor.End(CommerceServer.Core.Runtime.CommerceApplicationModule)">
            <summary>
            Invokes the EndRequest method on the CommerceApplicationModule.
            </summary>
            <param name="module">The module to execute the EndRequest method against.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Pipelines.HierarchyCacheClearProcessor">
            <summary>
            Popeline component that is responsible for clearing the TemplateHierarchyHelper cache
            when a template's Base Template changes.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Pipelines.HierarchyCacheClearProcessor.Process(Sitecore.Pipelines.Save.SaveArgs)">
            <summary>
            Processes the saveUI pipeline arguments.
            </summary>
            <param name="args">The pipeline arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Pipelines.RegisterDataModelExtensions">
            <summary>
            Pipeline processor that registers data model extensions with the BSON class map.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Pipelines.RegisterDataModelExtensions.Process(Sitecore.Pipelines.PipelineArgs)">
            <summary>
            Processes the pipeline arguments.
            </summary>
            <param name="args">The pipeline arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Pipelines.TranslatorArgs">
            <summary>
            Base translator pipeline arguments.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Pipelines.TranslatorArgs._input">
            <summary>
            Used to hold the input paramters for the pipeline
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Pipelines.TranslatorArgs._output">
            <summary>
            Used to hold the output paramters for the pipeline
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Pipelines.TranslatorArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Pipelines.TranslatorArgs"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Pipelines.TranslatorArgs.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Pipelines.TranslatorArgs"/> class.
            </summary>
            <param name="info">The serialized data.</param>
            <param name="context">The context.</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Pipelines.TranslatorArgs.InputParameters">
            <summary>
            Gets or sets the input parameters.
            </summary>
            <value>
            The input parameters.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Pipelines.TranslatorArgs.OutputParameters">
            <summary>
            Gets or sets the output parameters.
            </summary>
            <value>
            The output parameters.
            </value>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Pipelines.TranslatorArgs.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Gets the object data.
            </summary>
            <param name="info">The info.</param>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Pipelines.TranslatorArgs.AllocateInputAndOutputParameters">
            <summary>
            Allocates the input and output parameters.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Pipelines.TranslatorArgs.Input">
            <summary>
            Defines the input parameter arguments.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Pipelines.TranslatorArgs.Input.Database">
            <summary>
            Gets or sets the database.
            </summary>
            <value>
            The database.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Pipelines.TranslatorArgs.Input.Source">
            <summary>
            Gets or sets the source.
            </summary>
            <value>
            The source.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Pipelines.TranslatorArgs.Input.Relationships">
            <summary>
            Gets or sets the relationships.
            </summary>
            <value>
            The relationships.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Pipelines.TranslatorArgs.Output">
            <summary>
            Defines the output parameter arguments.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Pipelines.TranslatorArgs.Output.Destination">
            <summary>
            Gets or sets the destination.
            </summary>
            <value>
            The destination.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Pipelines.CacheRefreshStart">
            <summary>
            Helper for starting a cache refresh. 
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Pipelines.CacheRefreshStart.Process(Sitecore.Pipelines.PipelineArgs)">
            <summary>
            Processes cache refresh.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Pipelines.CacheRefreshStop">
            <summary>
            A helper for stoping a cache refresh. 
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Pipelines.CacheRefreshStop.Process(Sitecore.Pipelines.PipelineArgs)">
            <summary>
            Processes a cache refresh stop request.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Pipelines.BaseCommerceArgs">
            <summary>
            Base Commerce Server argument class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Pipelines.BaseCommerceArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Pipelines.BaseCommerceArgs"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Pipelines.BaseCommerceArgs.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Pipelines.BaseCommerceArgs"/> class.
            </summary>
            <param name="info">The serialized data.</param>
            <param name="context">The context.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.ContentEditor.SaveCatalogItemCheck">
            <summary>
            Checks for changed field and stop any changes when modifying a commerce when the
            catalog is managed externally.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.ContentEditor.SaveCatalogItemCheck.Process(Sitecore.Pipelines.Save.SaveArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Search.Models.CatalogAssociationsDictionary">
            <summary>
            Class representing a list of ancestor associations
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Search.Models.CatalogAssociationsDictionary.Keys">
            <summary>
            Gets the list of keys
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Search.Models.CatalogAssociationsDictionary.Values">
            <summary>
            Gets a list of values
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Search.Models.CatalogAssociationsDictionary.Count">
            <summary>
            Gets the number of items in the dictionary
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Search.Models.CatalogAssociationsDictionary.IsReadOnly">
            <summary>
            Gets a value indicating whether or not the dictionary is readyonly
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Search.Models.CatalogAssociationsDictionary.Item(Sitecore.Data.ID)">
            <summary>
            Gets or sets the value associated with the specified key
            </summary>
            <param name="key">They key</param>
            <returns>The item with the specified key</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.Models.CatalogAssociationsDictionary.Remove(Sitecore.Data.ID)">
            <summary>
            Removes the specified entry from the dictionary
            </summary>
            <param name="key">The key to remove</param>
            <returns>True if successfully removed, false if not</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.Models.CatalogAssociationsDictionary.TryGetValue(Sitecore.Data.ID,System.Collections.Generic.List{Sitecore.Data.ID}@)">
            <summary>
            Tries to get the value if the key exists
            </summary>
            <param name="key">The key</param>
            <param name="value">Output of the value</param>
            <returns>True if the key was found, false if not</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.Models.CatalogAssociationsDictionary.Add(Sitecore.Data.ID,System.Collections.Generic.List{Sitecore.Data.ID})">
            <summary>
            Adds a key to the dictionary
            </summary>
            <param name="key">They Key</param>
            <param name="value">The value</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.Models.CatalogAssociationsDictionary.ContainsKey(Sitecore.Data.ID)">
            <summary>
            Returns whether or not the sictionary contains the specified key
            </summary>
            <param name="key">They key</param>
            <returns>Return true if the dictionary contains the key, false if not</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.Models.CatalogAssociationsDictionary.Add(System.Collections.Generic.KeyValuePair{Sitecore.Data.ID,System.Collections.Generic.List{Sitecore.Data.ID}})">
            <summary>
            This method adds a new item to the dictionary
            </summary>
            <param name="item">The item to add</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.Models.CatalogAssociationsDictionary.Clear">
            <summary>
            This method empties the dictionary
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.Models.CatalogAssociationsDictionary.Contains(System.Collections.Generic.KeyValuePair{Sitecore.Data.ID,System.Collections.Generic.List{Sitecore.Data.ID}})">
            <summary>
            Returns wheter or not the specified item exists in the dictionary
            </summary>
            <param name="item">The item</param>
            <returns>Returns wheter or not the specified item exists</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.Models.CatalogAssociationsDictionary.CopyTo(System.Collections.Generic.KeyValuePair{Sitecore.Data.ID,System.Collections.Generic.List{Sitecore.Data.ID}}[],System.Int32)">
            <summary>
            Copies the dictionary starting at the arrayIndex to the specified array
            </summary>
            <param name="array">The array</param>
            <param name="arrayIndex">The start index</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.Models.CatalogAssociationsDictionary.Remove(System.Collections.Generic.KeyValuePair{Sitecore.Data.ID,System.Collections.Generic.List{Sitecore.Data.ID}})">
            <summary>
            Removes an item from the dictionary
            </summary>
            <param name="item">The item to remove</param>
            <returns>True if found and removed, false if not</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.Models.CatalogAssociationsDictionary.GetEnumerator">
            <summary>
            Gets the enumerator for the dictionary
            </summary>
            <returns>Gets the enumerator</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.Models.CatalogAssociationsDictionary.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Gets the enumerator for the dictionary
            </summary>
            <returns>Gets the enumerator</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.Models.CatalogAssociationsDictionary.AddParentIdToItem(Sitecore.Data.ID,Sitecore.Data.ID)">
            <summary>
            This method adds a parent id to a specific item
            </summary>
            <param name="childId">The child id</param>
            <param name="parentId">The parent id</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.Models.CatalogAssociationsDictionary.AddItemsToParentId(System.Collections.Generic.List{Sitecore.Data.ID},Sitecore.Data.ID)">
            <summary>
            This method takes a list of child ids to add a specific parent id to
            </summary>
            <param name="childIds">The list of child ids</param>
            <param name="parentId">The parent id</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.Models.CatalogAssociationsDictionary.GetParentIds(Sitecore.Data.ID)">
            <summary>
            This method returns a list of parent ids associated with a specific child id
            </summary>
            <param name="childId">The child id</param>
            <returns>The list of parent ids, or an empty list if none were found.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceIndexableItem">
            <summary>
            Class representing a commerce indexable item
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceIndexableItem.#ctor(System.Guid,System.Collections.Generic.IEnumerable{Sitecore.Globalization.Language})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceIndexableItem" /> class.
            </summary>
            <param name="commerceExternalId">The commerce external Id guid</param>
            <param name="languages">The list of languages for this item.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceIndexableItem.#ctor(Sitecore.Data.ID,System.Collections.Generic.IEnumerable{Sitecore.Globalization.Language})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceIndexableItem" /> class.
            </summary>
            <param name="commerceExternalId">The commerce external Id guid sitecore id</param>
            <param name="languages">The list of languages</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceIndexableItem.#ctor(Sitecore.Data.Items.Item)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceIndexableItem" /> class.
            </summary>
            <param name="commerceItem">The commerce item</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceIndexableItem.SitecoreId">
            <summary>
            Gets the sitecore item id
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceIndexableItem.Languages">
            <summary>
            Gets the list of languages
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceIndexableItem.AbsolutePath">
            <summary>
            Gets the absolute path
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceIndexableItem.Culture">
            <summary>
            Gets the culture
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceIndexableItem.DataSource">
            <summary>
            Gets the datasource (not implemented)
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceIndexableItem.Fields">
            <summary>
            Gets the list of fields (not implemented)
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceIndexableItem.Id">
            <summary>
            Gets the indexable item's id
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceIndexableItem.UniqueId">
            <summary>
            Gets the unique ID
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceIndexableItem.GetFieldById(System.Object)">
            <summary>
            Gets a field by its ID (not implemented)
            </summary>
            <param name="fieldId">The field's id</param>
            <returns>The indexable field</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceIndexableItem.GetFieldByName(System.String)">
            <summary>
            Gets a field by its name (not implemented)
            </summary>
            <param name="fieldName">The field's name</param>
            <returns>The indexable field</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceIndexableItem.LoadAllFields">
            <summary>
            Loads all the fields (not implemented)
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceFacetItem">
            <summary>
            Class representing a facet item
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceFacetItem.FacetFieldNameIsEnabled">
            <summary>
            Constant string representing the Enabled Field name
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceFacetItem.FacetFieldNameFieldName">
            <summary>
            Constant string representing the field name variable
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceFacetItem.FacetFieldNameDisplayName">
            <summary>
            Constant string representing the display name variable
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceFacetItem.FacetFieldName">
            <summary>
            Constant string representing the display name variable
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceFacetItem.#ctor(Sitecore.Data.Items.Item)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceFacetItem" /> class.
            </summary>
            <param name="sitecoreItem">The sitecore facet item</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceFacetItem.IsFacet">
            <summary>
            Gets a value indicating whether or not this item is actually a facet
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceFacetItem.IsEnabled">
            <summary>
            Gets a value indicating whether or not this facet is enables
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceFacetItem.FieldName">
            <summary>
            Gets the field name for this facet
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceFacetItem.DisplayName">
            <summary>
            Gets the display name
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceFacetItem.Fields">
            <summary>
            Gets the collection of fields from the underlying item
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceProfileSearchResult">
            <summary>
            Commerce profile search result ckass.
            </summary>
            <seealso cref="T:Sitecore.ContentSearch.ISearchResult" />
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceProfileSearchResult.fields">
            <summary>
            The field values.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceProfileSearchResult.Content">
            <summary>
            Gets or sets the content.
            </summary>
            <value>
            The content.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceProfileSearchResult.Datasource">
            <summary>
            Gets or sets the datasource.
            </summary>
            <value>
            The datasource.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceProfileSearchResult.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceProfileSearchResult.UniqueId">
            <summary>
            Gets or sets the unique identifier.
            </summary>
            <value>
            The unique identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceProfileSearchResult.Item(Sitecore.ContentSearch.SearchTypes.ObjectIndexerKey)">
            <summary>
            Gets or sets the <see cref="T:System.Object"/> with the specified key.
            </summary>
            <value>
            The <see cref="T:System.Object"/>.
            </value>
            <param name="key">The key.</param>
            <returns>The value for the given key.</returns>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceProfileSearchResult.Item(System.String)">
            <summary>
            Gets or sets the <see cref="T:System.String"/> at the specified index.
            </summary>
            <value>
            The <see cref="T:System.String"/>.
            </value>
            <param name="index">The index.</param>
            <returns>The value for the given index.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceProfileSearchResult.GetValue(System.String)">
            <summary>
            Gets the value.
            </summary>
            <param name="key">The key.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceProfileSearchResult.SetValue(System.String,System.Object)">
            <summary>
            Sets the value.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceQueryFacet">
            <summary>
            Used to represent a querying facet
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceQueryFacet.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceQueryFacet"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceQueryFacet.Name">
            <summary>
            Gets or sets the name of the facet
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceQueryFacet.DisplayName">
            <summary>
            Gets or sets the display name of the facet
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceQueryFacet.Values">
            <summary>
            Gets or sets any values requried during a query
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceQueryFacet.FoundValues">
            <summary>
            Gets or sets any values found as a result of a query
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceQuerySort">
            <summary>
            Used to represent a querying sort field
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceQuerySort.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceQuerySort"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceQuerySort.Name">
            <summary>
            Gets or sets the name of the sort field
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceQuerySort.DisplayName">
            <summary>
            Gets or sets the display name of the sort field
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceSearchOptions">
            <summary>
            Class representing the different paging options for search queries
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceSearchOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceSearchOptions" /> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceSearchOptions.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceSearchOptions" /> class.
            </summary>
            <param name="numberOfItemsToReturn">The number of items to return (default is 20)</param>
            <param name="startPageIndex">The start page index (default is 0)</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceSearchOptions.#ctor(System.Int32,System.Int32,System.Collections.Generic.IEnumerable{Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceQueryFacet})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceSearchOptions" /> class.
            </summary>
            <param name="numberOfItemsToReturn">The number of items to return (default is 20)</param>
            <param name="startPageIndex">The start page index (default is 0)</param>
            <param name="facetFields">The list of facets to gather, or null if none</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceSearchOptions.NumberOfItemsToReturn">
            <summary>
            Gets or sets the number of items to return
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceSearchOptions.StartPageIndex">
            <summary>
            Gets or sets the start page index
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceSearchOptions.SortField">
            <summary>
            Gets or sets the sort field
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceSearchOptions.SortDirection">
            <summary>
            Gets or sets the direction of the sort
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceSearchOptions.HasPaging">
            <summary>
            Gets a value indicating whether or not there are paging options defined, or if all results should be returned
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceSearchOptions.FacetFields">
            <summary>
            Gets or sets the list of facets
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceSearchOptions.HasFacets">
            <summary>
            Gets a value indicating whether or not there are facets defined
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Search.Models.BaseCommerceSearchResultItem">
            <summary>
            Class representing the base commerce search result items
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Search.Models.BaseCommerceSearchResultItem.BaseTemplates">
            <summary>
            Gets or sets the BaseTemplates
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Search.Models.BaseCommerceSearchResultItem.CommerceSearchItemType">
            <summary>
            Gets or sets the CommerceSearchItemType 
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.Models.BaseCommerceSearchResultItem.SafeGetFieldValue(System.String)">
            <summary>
            Gets the Value of the specified field.
            </summary>
            <param name="fieldName">The name of the field.</param>
            <returns>The field value, or an empty string if the field does not exist.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceBaseCatalogSearchResultItem">
            <summary>
            Base class for catalog search result items
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceBaseCatalogSearchResultItem.CommerceAncestorIds">
            <summary>
            Gets or sets the CommerceAncestorIds
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceBaseCatalogSearchResultItem.CommerceAncestorNames">
            <summary>
            Gets or sets the CommerceAncestorNames
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceBaseCatalogSearchResultItem.CatalogName">
            <summary>
            Gets or sets the CatalogName
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceBaseCatalogSearchResultItem.Upsell">
            <summary>
            Gets or sets the Upsells
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceBaseCatalogSearchResultItem.CrossSell">
            <summary>
            Gets or sets the Cross Sells
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceCatalogSearchResultItem">
            <summary>
            Class representing a catalog search result item
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceCatalogSearchResultItem.StartDate">
            <summary>
            Gets or sets the list price on a product
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceCatalogSearchResultItem.EndDate">
            <summary>
            Gets or sets the list price on a product
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceCategorySearchResultItem">
            <summary>
            Class representing a category search result item
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceCategorySearchResultItem.ListPrice">
            <summary>
            Gets or sets the list price on a category
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceProductSearchResultItem">
            <summary>
            Class representing a product search result item
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceProductSearchResultItem.ListPrice">
            <summary>
            Gets or sets the list price on a product
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceProductSearchResultItem.ProductId">
            <summary>
            Gets or sets the product id of the current product
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceProductSearchResultItem.CatalogItemId">
            <summary>
            Gets or sets the catalog item id of the product.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Search.IIndexResolver">
            <summary>
            Interface for index resolver in Commerce Server Sitecore integration.  
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.IIndexResolver.GetIndexName(Sitecore.Data.Database,System.String)">
            <summary>
            Adds data to the cache.
            </summary>
            <param name="database">The database name to base the index name on</param>
            <param name="catalogName">The catalog name to base the index on</param>
            <returns>The name of the index to use bsaed on the database and catalog</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Search.ICommerceSearchManager">
            <summary>
            Interface for search helper class with useful tools used in search classes
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.ICommerceSearchManager.IsItemCategory(Sitecore.Data.Items.Item)">
            <summary>
            Returns whether or not the specific item is a category
            </summary>
            <param name="item">The item to check</param>
            <returns>True if it's a category, false if not</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.ICommerceSearchManager.IsItemProduct(Sitecore.Data.Items.Item)">
            <summary>
            Returns whether or not the specific item is a product
            </summary>
            <param name="item">The item to check</param>
            <returns>True if it's a product, false if not</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.ICommerceSearchManager.IsItemVariant(Sitecore.Data.Items.Item)">
            <summary>
            Returns whether or not the specific item is a variant
            </summary>
            <param name="item">The item to check</param>
            <returns>True if it's a variant, false if not</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.ICommerceSearchManager.IsItemCatalog(Sitecore.Data.Items.Item)">
            <summary>
            Returns whether or not the specific item is a catalog
            </summary>
            <param name="item">The item to check</param>
            <returns>True if it's a catalog, false if not</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.ICommerceSearchManager.IsItemVirtualCatalog(Sitecore.Data.Items.Item)">
            <summary>
            Returns whether or not the specific item is a virtual catalog
            </summary>
            <param name="item">The item to check</param>
            <returns>True if it's a virtual catalog, false if not</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.ICommerceSearchManager.IsItemNavigation(Sitecore.Data.Items.Item)">
            <summary>
            Returns whether or not the specific item is a navigation
            </summary>
            <param name="item">The item to check</param>
            <returns>True if it's a navigation, false if not</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.ICommerceSearchManager.IsItemCatalogSet(Sitecore.Data.Items.Item)">
            <summary>
            Returns whether or not the specific item is a catalog set
            </summary>
            <param name="item">The item to check</param>
            <returns>True if it's a catalog set, false if not</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.ICommerceSearchManager.AddSearchOptionsToQuery``1(System.Linq.IQueryable{``0},Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceSearchOptions)">
            <summary>
            This method adds all search options to the provided search query
            </summary>
            <typeparam name="T">The type of search reault item, based on <see cref="T:Sitecore.ContentSearch.SearchTypes.SearchResultItem"/></typeparam>
            <param name="query">The query to add options to</param>
            <param name="searchOptions">The search options to add</param>
            <returns>The updated query</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.ICommerceSearchManager.AddSearchOptionsToQuery(System.Linq.IQueryable{Sitecore.ContentSearch.SearchTypes.SitecoreUISearchResultItem},Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceSearchOptions)">
            <summary>
            This method adds all search options to the provided search query
            </summary>
            <param name="query">The query to add options to</param>
            <param name="searchOptions">The search options to add</param>
            <returns>The updated query</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.ICommerceSearchManager.GetFacetFieldsForItem(Sitecore.Data.Items.Item)">
            <summary>
            This method returns facet field names for the specified item
            </summary>
            <param name="item">The item</param>
            <returns>A list of the names of fields to facet on</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.ICommerceSearchManager.GetSortFieldsForItem(Sitecore.Data.Items.Item)">
            <summary>
            This method returns sort field names for the specified item
            </summary>
            <param name="item">The item</param>
            <returns>A list of the names of fields to sort on</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.ICommerceSearchManager.GetItemsPerPageForItem(Sitecore.Data.Items.Item)">
            <summary>
            This methods returns the count for items per page
            </summary>
            <param name="item">The item</param>
            <returns>The count for items per page</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.ICommerceSearchManager.GetIndex">
            <summary>
            Gets the name of the current index used by the site
            </summary>
            <returns>The index to work with</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.ICommerceSearchManager.GetIndex(System.String)">
            <summary>
            Gets the name of the current index used by the site
            </summary>
            <param name="catalogName">The catalog name to base the index of</param>
            <returns>The associated index</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.ICommerceSearchManager.GetIndex(System.String,System.String)">
            <summary>
            Gets the name of the current index used by the site
            </summary>
            <param name="databaseName">The name of the database to base the index on.</param>
            <param name="catalogName">The catalog name to base the index on</param>
            <returns>The index to work with</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.ICommerceSearchManager.GetVirtualAncestors(Sitecore.Data.Items.Item)">
            <summary>
            Gets all of the virtual ancestors for an item
            </summary>
            <param name="item">The item to find the virtual ancestors for</param>
            <returns>All of the virtual ancestors of the passed in item</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.ICommerceSearchManager.ClearVirtualAncestors">
            <summary>
            Clears the virtual ancestors cache.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.ICommerceSearchManager.GetDefaultCatalog">
            <summary>
            Gets the default catalog of the current site
            </summary>
            <returns>The name of the default catalog as a string</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.ICommerceSearchManager.AddToIndexingQueue(Sitecore.Data.ID,Sitecore.Data.Database)">
            <summary>
            Adds an item to the history queue
            </summary>
            <param name="itemId">The Id of the item that needs to be reindexed</param>
            <param name="database">The database in which the item resides. Passing null indicates that the context database should be used.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.ICommerceSearchManager.DeleteFromIndexingQueue(Sitecore.Data.ID,Sitecore.Data.Database)">
            <summary>
            Deletes an item from the indexing queue
            </summary>
            <param name="itemId">The Id of the item that needs to be deleted from the index</param>
            <param name="database">The database in which the item resides. Passing null indicates that the context database should be used.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Search.ISortProvider">
            <summary>
            The interface to be used by all sorting type
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.ISortProvider.ApplySorting``1(System.Linq.IQueryable{``0},Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceSearchOptions)">
            <summary>
            Applies sorting to a query based on details in the searchOptions
            </summary>
            <typeparam name="T">The search item type e.g. UISearchResult</typeparam>
            <param name="query">The query to apply the sort to</param>
            <param name="searchOptions">The options for sorting</param>
            <returns>The query with the new sort options applied</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.ISortProvider.CanHandle``1(System.Linq.IQueryable{``0},Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceSearchOptions)">
            <summary>
            CHecks to see if the class can handle sorting this type of query
            </summary>
            <typeparam name="T">The search item type e.g. UISearchResult</typeparam>
            <param name="query">The query to apply the sort to</param>
            <param name="searchOptions">The options for sorting</param>
            <returns>True if it can sort it and False otherwise</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Search.CommerceIndexAssociationsEvent">
            <summary>
            Class used to clear the cache that contains all of the virtual associations
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.CommerceIndexAssociationsEvent.ClearAssociations(System.Object,System.EventArgs)">
            <summary>
            This method gets called after the crawl to clear the cache
            </summary>
            <param name="sender">Objetct sender</param>
            <param name="args">Event arguments</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Search.SearchManager">
            <summary>
            Provides access to Sitecore search results.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.SearchManager.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Search.SearchManager"/> class.
            </summary>
            <param name="indexName">Name of the search index.</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Search.SearchManager.IndexName">
            <summary>
            Gets or sets the name of the index.
            </summary>
            <value>
            The name of the index.
            </value>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.SearchManager.GetAll``1(System.Int32@)">
            <summary>
            Gets all results of a given type.
            </summary>
            <typeparam name="T">Type of return value.</typeparam>
            <param name="totalResults">The total results.</param>
            <returns>List of T of Search results.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.SearchManager.Search``1(System.String,System.String,System.Int32@)">
            <summary>
            Searches the specified field for the given value.
            </summary>
            <typeparam name="T">Type of return value.</typeparam>
            <param name="fieldName">Name of the field.</param>
            <param name="value">The value.</param>
            <param name="totalResults">The total results.</param>
            <returns>List of T search results.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Search.ComputedFields.BaseCommerceComputedField">
            <summary>
            The base computed field for commerce server computed fields
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Search.ComputedFields.BaseCommerceComputedField.FieldName">
            <summary>
            Gets or sets the field name
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Search.ComputedFields.BaseCommerceComputedField.ReturnType">
            <summary>
            Gets or sets the return type
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Search.ComputedFields.BaseCommerceComputedField.ValidTemplates">
            <summary>
            Gets a list of valid templates that can be computed against. If the indexable item in question isn't path of 
            this list of templates, it will be skipped. 
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.ComputedFields.BaseCommerceComputedField.GetItemType(Sitecore.Data.Items.Item)">
            <summary>
            Returns the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Search.CommerceSearchResultItemType">CommerceSearchResultItemType</see> of this item
            </summary>
            <param name="item">The item</param>
            <returns>Returns <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Search.CommerceSearchResultItemType">CommerceSearchResultItemType</see>, or unknown if not part of any known types.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.ComputedFields.BaseCommerceComputedField.ComputeFieldValue(Sitecore.ContentSearch.IIndexable)">
            <summary>
            Initial method called in by sitecore to launch a compute value call
            </summary>
            <param name="indexable">The item to index</param>
            <returns>The computed fields</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.ComputedFields.BaseCommerceComputedField.ComputeValue(Sitecore.ContentSearch.IIndexable)">
            <summary>
            Abstract method used to kick off a computation of an indexable to build the desired value
            </summary>
            <param name="itemToIndex">The indexable item</param>
            <returns>The computed value</returns>        
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.ComputedFields.BaseCommerceComputedField.IsItemPartOfValidTemplates(Sitecore.Data.Items.Item)">
            <summary>
            Checks to see if the specified item is part of the list of valid templates.
            </summary>
            <param name="item">The item to verify</param>
            <returns>True if the item is part of the valid template, false if not</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.ComputedFields.BaseCommerceComputedField.GetValidatedItem(Sitecore.ContentSearch.IIndexable)">
            <summary>
            Validates that the indexable item is part of the valid tempaltes, and returns the undelying item if so
            </summary>
            <param name="itemToIndex">The indexable to validate</param>
            <returns>The underlying item if it's valid, null if not.</returns>        
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Search.ComputedFields.BaseCommerceVariants`1">
            <summary>
            Gathers all of the unique variant values for the specified field
            </summary>
            <typeparam name="T">The type of item list that this computed field produces.</typeparam>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Search.ComputedFields.BaseCommerceVariants`1._validTemplates">
            <summary>
            The list of valid tempaltes that this applies to
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Search.ComputedFields.BaseCommerceVariants`1.ValidTemplates">
            <summary>
            Gets the list of valid templates for this computed value
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.ComputedFields.BaseCommerceVariants`1.ComputeValue(Sitecore.ContentSearch.IIndexable)">
            <summary>
            Computed the value for the specfic indexable
            </summary>
            <param name="indexable">The indexable item</param>
            <returns>The computed value</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.ComputedFields.BaseCommerceVariants`1.ConvertValue(System.Object,System.IFormatProvider)">
            <summary>
            Converts a variant value into the correct format for use in indexing.
            </summary>
            <param name="variantValue">The variant value to convert.</param>
            <param name="provider">An object that supplies culture-specific formatting information.</param>
            <returns>The converted value that will be used in indexing.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Search.ComputedFields.CatalogItemId">
            <summary>
            Class representing a commerce catalog item ID.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Search.ComputedFields.CatalogItemId.ValidTemplatesInternal">
            <summary>
            The list of valid tempaltes that this applies to
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Search.ComputedFields.CatalogItemId.ValidTemplates">
            <summary>
            Gets the list of valid templates for this computed value
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.ComputedFields.CatalogItemId.ComputeValue(Sitecore.ContentSearch.IIndexable)">
            <summary>
            Computed the value for the specfic indexable
            </summary>
            <param name="indexable">The indexable item</param>
            <returns>The computed value</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Search.ComputedFields.CommerceSearchItemType">
            <summary>
            Class representing a commerce search item type
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Search.ComputedFields.CommerceSearchItemType._validTemplates">
            <summary>
            The list of valid tempaltes that this applies to
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Search.ComputedFields.CommerceSearchItemType.ValidTemplates">
            <summary>
            Gets the list of valid templates for this computed value
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.ComputedFields.CommerceSearchItemType.ComputeValue(Sitecore.ContentSearch.IIndexable)">
            <summary>
            Computed the value for the specfic indexable
            </summary>
            <param name="indexable">The indexable item</param>
            <returns>The computed value</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Search.ComputedFields.BaseAncestorField">
            <summary>
            Abstract class to server as base of an ancestor field
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Search.ComputedFields.BaseAncestorField._validTemplates">
            <summary>
            The list of valid tempaltes that this applies to
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Search.ComputedFields.BaseAncestorField.ValidTemplates">
            <summary>
            Gets the list of valid templates for this computed value
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.ComputedFields.BaseAncestorField.GetAncestorsForItem(Sitecore.Data.Items.Item)">
            <summary>
            Gets the list of ancestors for either a product or category item
            </summary>
            <param name="item">The item</param>
            <returns>The list of ancestors</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.ComputedFields.BaseAncestorField.GetProductAncestors(Sitecore.Data.Items.Item)">
            <summary>
            Gets the list of ancestors for either a product
            </summary>
            <param name="productItem">The product item</param>
            <returns>The list of ancestors</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.ComputedFields.BaseAncestorField.GetCategoryAncestors(Sitecore.Data.Items.Item)">
            <summary>
            Gets the list of ancestors for either a category
            </summary>
            <param name="categoryItem">The category item</param>
            <returns>The list of ancestors</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.ComputedFields.BaseAncestorField.GetRelationships(Sitecore.Data.Items.BaseItem,System.String)">
            <summary>
            Gets the list of crosssells or upsells
            </summary>
            <param name="item">The catalog item</param>
            <param name="relationshipType">The type of relationship to retreive - crosssell or upsell</param>
            <returns>The list of upsell items</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Search.ComputedFields.CommerceAncestorNames">
            <summary>
             Class represnting a list of ancestor names cputed field
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.ComputedFields.CommerceAncestorNames.ComputeValue(Sitecore.ContentSearch.IIndexable)">
            <summary>
            Computed the value for the specfic indexable
            </summary>
            <param name="indexable">The indexable item</param>
            <returns>The computed value</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Search.ComputedFields.CommerceAncestorIds">
            <summary>
            Class representing a list of commerce ancestor ids computed fields
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.ComputedFields.CommerceAncestorIds.ComputeValue(Sitecore.ContentSearch.IIndexable)">
            <summary>
            Computed the value for the specfic indexable
            </summary>
            <param name="indexable">The indexable item</param>
            <returns>The computed value</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.ComputedFields.CommerceAncestorIds.ValidateList(System.Collections.Generic.List{Sitecore.Data.ID})">
            <summary>
            Makes sure that the list of IDs is in a good state to return
            </summary>
            <param name="returnList">The list of IDs to validate</param>
            <returns>The list of IDs to return</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Search.ComputedFields.CommerceVariants">
            <summary>
            Gathers all of the unique variant values for the specified field
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Search.ComputedFields.ContentGathererField">
            <summary>
            Used to gather data that needs to go into the _content field
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.ComputedFields.ContentGathererField.ComputeValue(Sitecore.ContentSearch.IIndexable)">
            <summary>
            Computed the value for the specfic indexable
            </summary>
            <param name="indexable">The indexable item</param>
            <returns>The computed value</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Search.ComputedFields.CommerceRelationships">
            <summary>
            Class representing a list of commerce up sell ids computed fields
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Search.ComputedFields.CommerceRelationships._validTemplates">
            <summary>
            The list of valid tempaltes that this applies to
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Search.ComputedFields.CommerceRelationships.ValidTemplates">
            <summary>
            Gets the list of valid templates for this computed value
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.ComputedFields.CommerceRelationships.ComputeValue(Sitecore.ContentSearch.IIndexable)">
            <summary>
            Computed the value for the specfic indexable
            </summary>
            <param name="indexable">The indexable item</param>
            <returns>The computed value</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Search.ComputedFields.InStockLocations">
            <summary>
            InStockLocations computed field for Commerce Server integration.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.ComputedFields.InStockLocations.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Search.ComputedFields.InStockLocations"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.ComputedFields.InStockLocations.BuildServicePipelineArgs(Sitecore.Data.Items.Item)">
            <summary>
            Builds a service request to retrieve indexing information for a specific <see cref="T:Sitecore.Data.Items.Item"/>.
            </summary>
            <param name="item">The <see cref="T:Sitecore.Data.Items.Item"/> being indexed.</param>
            <returns>A <see cref="T:Sitecore.Commerce.Pipelines.ServicePipelineArgs"/> that will retrieve indexing information for the specified <paramref name="item"/>.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.ComputedFields.InStockLocations.IsRequestForItem(Sitecore.Commerce.Services.Inventory.StockStatusForIndexingRequest,Sitecore.Data.Items.Item)">
            <summary>
            Checks if a <see cref="T:Sitecore.Commerce.Services.Inventory.StockStatusForIndexingRequest"/> will retrieve indexing information for a specific <see cref="T:Sitecore.Data.Items.Item"/>.
            </summary>
            <param name="request">The service request.</param>
            <param name="item">The item being indexed.</param>
            <returns>True if the <paramref name="request"/> will retrieve information for the specified <paramref name="item"/>.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Search.ComputedFields.InventoryIndexingHelper">
            <summary>
             Helper class for computed index fields in the inventory system.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.ComputedFields.InventoryIndexingHelper.BuildStockStatusForIndexingArgs(Sitecore.Data.Items.Item,Sitecore.Commerce.Connect.CommerceServer.Catalog.ItemClassificationService)">
            <summary>
            Builds a service request to retrieve indexing information for a specific <see cref="T:Sitecore.Data.Items.Item"/>.
            </summary>
            <param name="item">The <see cref="T:Sitecore.Data.Items.Item"/> being indexed.</param>
            <param name="itemClassificationService">The <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.ItemClassificationService"/> used to lookup product information.</param>
            <returns>A <see cref="T:Sitecore.Commerce.Services.Inventory.StockStatusForIndexingRequest"/> that will retrieve indexing information for the specified <paramref name="item"/>.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.ComputedFields.InventoryIndexingHelper.IsRequestForItem(Sitecore.Commerce.Services.Inventory.StockStatusForIndexingRequest,Sitecore.Data.Items.Item,Sitecore.Commerce.Connect.CommerceServer.Catalog.ItemClassificationService)">
            <summary>
            Checks if a <see cref="T:Sitecore.Commerce.Services.Inventory.StockStatusForIndexingRequest"/> will retrieve indexing information for a specific <see cref="T:Sitecore.Data.Items.Item"/>.
            </summary>
            <param name="request">The service request.</param>
            <param name="item">The item being indexed.</param>
            <param name="itemClassificationService">The <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.ItemClassificationService"/> used to lookup product information.</param>
            <returns>True if the <paramref name="request"/> will retrieve information for the specified <paramref name="item"/>.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Search.ComputedFields.OrderableLocations">
            <summary>
            OrderableLocations computed field for Commerce Server integration.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.ComputedFields.OrderableLocations.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Search.ComputedFields.OrderableLocations"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.ComputedFields.OrderableLocations.BuildServicePipelineArgs(Sitecore.Data.Items.Item)">
            <summary>
            Builds a service request to retrieve indexing information for a specific <see cref="T:Sitecore.Data.Items.Item"/>.
            </summary>
            <param name="item">The <see cref="T:Sitecore.Data.Items.Item"/> being indexed.</param>
            <returns>A <see cref="T:Sitecore.Commerce.Pipelines.ServicePipelineArgs"/> that will retrieve indexing information for the specified <paramref name="item"/>.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.ComputedFields.OrderableLocations.IsRequestForItem(Sitecore.Commerce.Services.Inventory.StockStatusForIndexingRequest,Sitecore.Data.Items.Item)">
            <summary>
            Checks if a <see cref="T:Sitecore.Commerce.Services.Inventory.StockStatusForIndexingRequest"/> will retrieve indexing information for a specific <see cref="T:Sitecore.Data.Items.Item"/>.
            </summary>
            <param name="request">The service request.</param>
            <param name="item">The item being indexed.</param>
            <returns>True if the <paramref name="request"/> will retrieve information for the specified <paramref name="item"/>.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Search.ComputedFields.OutOfStockLocations">
            <summary>
            OutOfStockLocations computed field for Commerce Server integration.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.ComputedFields.OutOfStockLocations.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Search.ComputedFields.OutOfStockLocations"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.ComputedFields.OutOfStockLocations.BuildServicePipelineArgs(Sitecore.Data.Items.Item)">
            <summary>
            Builds a service request to retrieve indexing information for a specific <see cref="T:Sitecore.Data.Items.Item"/>.
            </summary>
            <param name="item">The <see cref="T:Sitecore.Data.Items.Item"/> being indexed.</param>
            <returns>A <see cref="T:Sitecore.Commerce.Pipelines.ServicePipelineArgs"/> that will retrieve indexing information for the specified <paramref name="item"/>.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.ComputedFields.OutOfStockLocations.IsRequestForItem(Sitecore.Commerce.Services.Inventory.StockStatusForIndexingRequest,Sitecore.Data.Items.Item)">
            <summary>
            Checks if a <see cref="T:Sitecore.Commerce.Services.Inventory.StockStatusForIndexingRequest"/> will retrieve indexing information for a specific <see cref="T:Sitecore.Data.Items.Item"/>.
            </summary>
            <param name="request">The service request.</param>
            <param name="item">The item being indexed.</param>
            <returns>True if the <paramref name="request"/> will retrieve information for the specified <paramref name="item"/>.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Search.ComputedFields.PreOrderable">
            <summary>
            PreOrderable computed field for Commerce Server integration.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.ComputedFields.PreOrderable.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Search.ComputedFields.PreOrderable"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.ComputedFields.PreOrderable.BuildServicePipelineArgs(Sitecore.Data.Items.Item)">
            <summary>
            Builds a service request to retrieve indexing information for a specific <see cref="T:Sitecore.Data.Items.Item"/>.
            </summary>
            <param name="item">The <see cref="T:Sitecore.Data.Items.Item"/> being indexed.</param>
            <returns>A <see cref="T:Sitecore.Commerce.Pipelines.ServicePipelineArgs"/> that will retrieve indexing information for the specified <paramref name="item"/>.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.ComputedFields.PreOrderable.IsRequestForItem(Sitecore.Commerce.Services.Inventory.StockStatusForIndexingRequest,Sitecore.Data.Items.Item)">
            <summary>
            Checks if a <see cref="T:Sitecore.Commerce.Services.Inventory.StockStatusForIndexingRequest"/> will retrieve indexing information for a specific <see cref="T:Sitecore.Data.Items.Item"/>.
            </summary>
            <param name="request">The service request.</param>
            <param name="item">The item being indexed.</param>
            <returns>True if the <paramref name="request"/> will retrieve information for the specified <paramref name="item"/>.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Search.CommerceSearchResultItemType">
            <summary>
            Static class representing the various search reault item types
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Search.CommerceSearchResultItemType.Catalog">
            <summary>
            A commerce catalog type
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Search.CommerceSearchResultItemType.VirtualCatalog">
            <summary>
            A commerce virtual catalog type
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Search.CommerceSearchResultItemType.Category">
            <summary>
            A commerce category type
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Search.CommerceSearchResultItemType.Product">
            <summary>
            A commerce product type
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Search.CommerceSearchResultItemType.Variant">
            <summary>
            A commerce variant type
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Search.CommerceSearchResultItemType.Navigation">
            <summary>
            A commerce navigation type
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Search.CommerceSearchResultItemType.CatalogSet">
            <summary>
            A commerce catalog set type
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Search.CommerceSearchResultItemType.Unknown">
            <summary>
            An unknown commerce type
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Search.AllCatalogsCrawler">
            <summary>
            Responsible for indexing all Commerce Catalog items.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.AllCatalogsCrawler.GetCatalogsToIndex">
            <summary>
            Gets the names of the catalogs that should be indexed.
            </summary>
            <returns>The names of the catalogs that should be indexed.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Search.AllCatalogsIntervalAsynchronousStrategy">
            <summary>
            Index update strategy that periodically checks for updates to commerce catalog items in all catalogs.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.AllCatalogsIntervalAsynchronousStrategy.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Search.AllCatalogsIntervalAsynchronousStrategy"/> class.
            </summary>
            <param name="database">The name of the database to index.</param>
            <param name="interval">The interval in which index updates will be run.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.AllCatalogsIntervalAsynchronousStrategy.GetCatalogsToIndex">
            <summary>
            Gets the names of the catalogs that should be indexed.
            </summary>
            <returns>The names of the catalogs that should be indexed.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Search.CatalogCrawler">
            <summary>
            Responsible for indexing Commerce Catalog items.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Search.CatalogCrawler.Database">
            <summary>
            Gets or sets the name of the sitecore database to use
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Search.CatalogCrawler.Root">
            <summary>
            Gets or sets the path to the root item to crawl from
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Search.CatalogCrawler.RootItem">
            <summary>
            Gets the root item to index from
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.CatalogCrawler.IsExcludedFromIndex(Sitecore.ContentSearch.IIndexable)">
            <summary>
            Determines whether [is excluded from index] [the specified indexable].
            </summary>
            <param name="indexable">The indexable.</param>
            <returns>True if the item is excluded; otherwise false.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.CatalogCrawler.Initialize(Sitecore.ContentSearch.ISearchIndex)">
            <summary>
            Initializes the search crawler
            </summary>
            <param name="index">The saerch index</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.CatalogCrawler.GetIndexable(Sitecore.ContentSearch.IIndexableUniqueId)">
            <summary>
            Retrives an item to be indexed based on it's unique id
            </summary>
            <param name="indexableUniqueId">The unique id of the item</param>
            <returns>The item to be indexed</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.CatalogCrawler.GetIndexableAndCheckDeletes(Sitecore.ContentSearch.IIndexableUniqueId)">
            <summary>
            Check for any deletes on an item
            </summary>
            <param name="indexableUniqueId">The unique id of the item</param>
            <returns>The item to index</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.CatalogCrawler.GetIndexablesToUpdateOnDelete(Sitecore.ContentSearch.IIndexableUniqueId)">
            <summary>
            Item versions that need to be deleted once the item is indexed
            </summary>
            <param name="indexableUniqueId">The id of the item to check</param>
            <returns>The items in the index to delete</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.CatalogCrawler.IndexUpdateNeedDelete(Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceIndexableItem)">
            <summary>
            Indicates whether an item needs to be deleted from the index or not
            </summary>
            <param name="indexable">The item being indexed</param>
            <returns>Whether or not to delete the item</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.CatalogCrawler.GetItemsToIndex">
            <summary>
            Gets the list of items to be index
            </summary>
            <returns>A list of items to be indexed</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.CatalogCrawler.DoAdd(Sitecore.ContentSearch.IProviderUpdateContext,Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceIndexableItem)">
            <summary>
            Commerce catalog crawler's DoAdd method
            </summary>
            <param name="context">The update context</param>
            <param name="indexable">The commerce indexable item</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.CatalogCrawler.DoUpdate(Sitecore.ContentSearch.IProviderUpdateContext,Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceIndexableItem)">
            <summary>
            Updates index documents.
            </summary>
            <param name="context">The context.</param>
            <param name="indexable">The indexable.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.CatalogCrawler.IsExcludedFromIndex(Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceIndexableItem,System.Boolean)">
            <summary>
            Determines whether [is excluded from index] [the specified indexable].
            </summary>
            <param name="indexable">The indexable.</param>
            <param name="checkLocation">if set to <c>true</c> [check location].</param>
            <returns>True if the item is excluded; otherwise false.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.CatalogCrawler.GetCatalogsToIndex">
            <summary>
            Gets the names of the catalogs that should be indexed.
            </summary>
            <returns>The names of the catalogs that should be indexed.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Search.CatalogIntervalAsynchronousStrategy">
            <summary>
            Index update strategy that periodically checks for updates to commerce catalog items.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.CatalogIntervalAsynchronousStrategy.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Search.CatalogIntervalAsynchronousStrategy"/> class.
            </summary>
            <param name="database">The name of the database to index.</param>
            <param name="interval">The interval in which index updates will be run.</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Search.CatalogIntervalAsynchronousStrategy.Database">
            <summary>
            Gets the <see cref="P:Sitecore.Commerce.Connect.CommerceServer.Search.CatalogIntervalAsynchronousStrategy.Database"/> being indexed.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Search.CatalogIntervalAsynchronousStrategy.UpdateInterval">
            <summary>
            Gets the interval in which the index is updated.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Search.CatalogIntervalAsynchronousStrategy.AlarmClock">
            <summary>
            Gets the <see cref="P:Sitecore.Commerce.Connect.CommerceServer.Search.CatalogIntervalAsynchronousStrategy.AlarmClock"/> use to wake up the index update strategy.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Search.CatalogIntervalAsynchronousStrategy.Index">
            <summary>
            Gets the <see cref="T:Sitecore.ContentSearch.ISearchIndex"/> being updated.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Search.CatalogIntervalAsynchronousStrategy.CatalogRepository">
            <summary>
            Gets the catalog repository.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Search.CatalogIntervalAsynchronousStrategy.LastRunTimeUtc">
            <summary>
            Gets or sets the time the index update strategy was last run.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.CatalogIntervalAsynchronousStrategy.Initialize(Sitecore.ContentSearch.ISearchIndex)">
            <summary>
            Initializes the index update strategy.
            </summary>
            <param name="searchIndex">The search index to update.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.CatalogIntervalAsynchronousStrategy.Run">
            <summary>
            Runs the index update stragegy.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.CatalogIntervalAsynchronousStrategy.IndexModifiedGlobalCatalogItems">
            <summary>
            Performs indexing on modified catalog tiems that are not scoped to a catalog.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.CatalogIntervalAsynchronousStrategy.IndexModifiedCatalogItems(System.String)">
            <summary>
            Performs indexing on modified items in the specified catalog.
            </summary>
            <param name="catalogName">The name of the catalog to index.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.CatalogIntervalAsynchronousStrategy.IndexDeletedCatalogItems">
            <summary>
            Performs indexing on deleted catalog's items
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.CatalogIntervalAsynchronousStrategy.IndexDeletedCategoryItems(System.Collections.Generic.List{CommerceServer.Core.Catalog.ExternalIdInformation})">
            <summary>
            Performs indexing on deleted category's items
            </summary>
            <param name="deletedInformation">List of deleted categories</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.CatalogIntervalAsynchronousStrategy.OnAlarmClockRing(System.Object,System.EventArgs)">
            <summary>
            Handles the Ring event of the AlarmClock used to wake up this index update strategy for processing.
            </summary>
            <param name="sender">The event sender.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.CatalogIntervalAsynchronousStrategy.GetMinCatalogItemLastModifiedDate">
            <summary>
            Gets the minimum last modified date for catalog items to be indexed.
            </summary>
            <returns>The minimum last modified date for catalog items to be indexed.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.CatalogIntervalAsynchronousStrategy.GetItemTypesToIndex">
            <summary>
            Gets the commerce item types that will be inexed.
            </summary>
            <returns>An array containing the commerce item types that will be indexed.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.CatalogIntervalAsynchronousStrategy.GetCatalogsToIndex">
            <summary>
            Gets the names of the catalogs that should be indexed.
            </summary>
            <returns>The names of the catalogs that should be indexed.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Search.CommerceDataField">
            <summary>
            Commerce indexable data field.
            </summary>
            <seealso cref="T:Sitecore.ContentSearch.IIndexableDataField" />
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.CommerceDataField.#ctor(System.String,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Search.CommerceDataField"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="value">The value.</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Search.CommerceDataField.FieldType">
            <summary>
            Gets the type of the field.
            </summary>
            <value>
            The type of the field.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Search.CommerceDataField.Id">
            <summary>
            Gets the identifier.
            </summary>
            <value>
            The identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Search.CommerceDataField.Name">
            <summary>
            Gets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Search.CommerceDataField.TypeKey">
            <summary>
            Gets the type key.
            </summary>
            <value>
            The type key.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Search.CommerceDataField.Value">
            <summary>
            Gets the value.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Search.CommerceProfileIndexableItem">
            <summary>
            Commerce profile indexable item used when indexing CS profiles.
            </summary>
            <seealso cref="T:Sitecore.ContentSearch.IIndexable" />
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.CommerceProfileIndexableItem.#ctor(System.String,System.String,CommerceServer.Core.Runtime.Profiles.Profile,Sitecore.Commerce.Connect.CommerceServer.Profiles.Models.CommerceProfileDefinition)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Search.CommerceProfileIndexableItem"/> class.
            </summary>
            <param name="profileType">Type of the profile.</param>
            <param name="keyValue">The key value.</param>
            <param name="profile">The profile.</param>
            <param name="profileDefinition">The profile definition.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.CommerceProfileIndexableItem.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Search.CommerceProfileIndexableItem"/> class.
            </summary>
            <param name="profileType">Type of the profile.</param>
            <param name="keyValue">The key value.</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Search.CommerceProfileIndexableItem.ProfileType">
            <summary>
            Gets or sets the type of the profile.
            </summary>
            <value>
            The type of the profile.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Search.CommerceProfileIndexableItem.Id">
            <summary>
            Gets the identifier.
            </summary>
            <value>
            The identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Search.CommerceProfileIndexableItem.UniqueId">
            <summary>
            Gets the unique identifier.
            </summary>
            <value>
            The unique identifier.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Search.CommerceProfileIndexableItem.AbsolutePath">
            <summary>
            Gets the absolute path.
            </summary>
            <value>
            The absolute path.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Search.CommerceProfileIndexableItem.Culture">
            <summary>
            Gets the culture.
            </summary>
            <value>
            The culture.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Search.CommerceProfileIndexableItem.DataSource">
            <summary>
            Gets the data source.
            </summary>
            <value>
            The data source.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Search.CommerceProfileIndexableItem.Fields">
            <summary>
            Gets the fields.
            </summary>
            <value>
            The fields.
            </value>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.CommerceProfileIndexableItem.GetFieldById(System.Object)">
            <summary>
            Gets the field by identifier.
            </summary>
            <param name="fieldId">The field identifier.</param>
            <returns>The IIndexableDataField object.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.CommerceProfileIndexableItem.GetFieldByName(System.String)">
            <summary>
            Gets the name of the field by.
            </summary>
            <param name="fieldName">Name of the field.</param>
            <returns>The IIndexableDataField object.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.CommerceProfileIndexableItem.LoadAllFields">
            <summary>
            Loads all fields.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.CommerceProfileIndexableItem.AddField(System.String,System.Object)">
            <summary>
            Adds a field to be indexed.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Search.CommerceProfileIndexableUniqueId">
            <summary>
            unique ID that represents a Commerce Server profile being indexed.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.CommerceProfileIndexableUniqueId.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Search.CommerceProfileIndexableUniqueId"/> class.
            </summary>
            <param name="profileType">The type of profile being indexed.</param>
            <param name="profileId">The ID of the profile being indexed.</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Search.CommerceProfileIndexableUniqueId.ProfileType">
            <summary>
            Gets the type of profile being indexed.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Search.CommerceProfileIndexableUniqueId.ProfileId">
            <summary>
            Gets the ID of the profile being indexed.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Search.IndexResolver">
            <summary>
            Figures out the name of the current index the site should be using
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Search.IndexResolver.IndexNameTemplate">
            <summary>
            The template for building the index name
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.IndexResolver.GetIndexName(Sitecore.Data.Database,System.String)">
            <summary>
            Gets the name of the current index based on the provided database
            </summary>
            <param name="database">The database to base the index name on</param>
            <param name="catalogName">The catalog name to base the index on</param>
            <returns>The index name to use.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Search.ProfileCrawler">
            <summary>
            Commerce server profile crawler.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Search.ProfileCrawler.ProfileType">
            <summary>
            Gets or sets the type of the profile.
            </summary>
            <value>
            The type of the profile.
            </value>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.ProfileCrawler.Initialize(Sitecore.ContentSearch.ISearchIndex)">
            <summary>
            Initializes the specified index.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.ProfileCrawler.IsExcludedFromIndex(Sitecore.ContentSearch.IIndexable)">
            <summary>
            Checks if an item should be excluded from the index associated with this crawler.
            </summary>
            <param name="indexable">The item to check.</param>
            <returns>True if the item should be excluded, otherwise false.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.ProfileCrawler.Delete(Sitecore.ContentSearch.IProviderUpdateContext,Sitecore.ContentSearch.IIndexableUniqueId,Sitecore.ContentSearch.IndexingOptions)">
            <summary>
            Deletes the specified context.
            </summary>
            <param name="context">The context.</param>
            <param name="indexableUniqueId">The indexable unique identifier.</param>
            <param name="indexingOptions">The indexing options.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.ProfileCrawler.IsExcludedFromIndex(Sitecore.ContentSearch.IIndexableUniqueId)">
            <summary>
            Checks if an item should be excluded from the index associated with this crawler.
            </summary>
            <param name="indexableUniqueId">The unique ID of the item to check.</param>
            <returns>True if the item should be excluded, otherwise false.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.ProfileCrawler.IsExcludedFromIndex(Sitecore.ContentSearch.IIndexableUniqueId,System.Boolean)">
            <summary>
            Checks if an item should be excluded from the index associated with this crawler.
            </summary>
            <param name="indexableUniqueId">The unique ID of the item to check.</param>
            <param name="checkLocation">Specifies whether the item location should be checked.</param>
            <returns>True if the item should be excluded, otherwise false.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.ProfileCrawler.GetItemsToIndex">
            <summary>
            Gets the index of the items to.
            </summary>
            <returns>A list if commerce profiles to index.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.ProfileCrawler.DoAdd(Sitecore.ContentSearch.IProviderUpdateContext,Sitecore.Commerce.Connect.CommerceServer.Search.CommerceProfileIndexableItem)">
            <summary>
            Does the add.
            </summary>
            <param name="context">The context.</param>
            <param name="indexable">The indexable.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.ProfileCrawler.GetIndexable(Sitecore.ContentSearch.IIndexableUniqueId)">
            <summary>
            Gets the indexable.
            </summary>
            <param name="indexableUniqueId">The indexable unique identifier.</param>
            <returns>The commerce profile indexable item.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.ProfileCrawler.GetIndexableAndCheckDeletes(Sitecore.ContentSearch.IIndexableUniqueId)">
            <summary>
            Gets the indexable and check deletes.
            </summary>
            <param name="indexableUniqueId">The indexable unique identifier.</param>
            <returns>The commerce profile indexable item.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.ProfileCrawler.GetIndexablesToUpdateOnDelete(Sitecore.ContentSearch.IIndexableUniqueId)">
            <summary>
            Gets the indexables to update on delete.
            </summary>
            <param name="indexableUniqueId">The indexable unique identifier.</param>
            <returns>The items in the index to delete</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.ProfileCrawler.IndexUpdateNeedDelete(Sitecore.Commerce.Connect.CommerceServer.Search.CommerceProfileIndexableItem)">
            <summary>
            Indexes the update need delete.
            </summary>
            <param name="indexable">The indexable.</param>
            <returns>
            Whether or not to delete the item
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.ProfileCrawler.GetProfileItem(Sitecore.Commerce.Connect.CommerceServer.Search.CommerceProfileIndexableUniqueId)">
            <summary>
            Gets the profile item.
            </summary>
            <param name="indexableUniqueId">The indexable unique identifier.</param>
            <returns>Get the profile indexable item.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.ProfileCrawler.InjectAdditionalContent(CommerceServer.Core.Runtime.Profiles.Profile,Sitecore.Commerce.Connect.CommerceServer.Search.CommerceProfileIndexableItem)">
            <summary>
            Override this method to inject additional content to the index.
            </summary>
            <param name="profile">The commerce server profile.</param>
            <param name="indexableItem">The indexable item.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Search.ProfileLuceneFieldMap">
            <summary>
            Used to dynamically generate the lucene field definitions based on the profile definition.
            </summary>
            <seealso cref="T:Sitecore.ContentSearch.FieldMap" />
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.ProfileLuceneFieldMap.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Search.ProfileLuceneFieldMap" /> class.
            </summary>
            <param name="profileType">Type of the profile.</param>
            <param name="additionalFields">The additional fields.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.ProfileLuceneFieldMap.AddFieldName(System.String)">
            <summary>
            Adds the name of the field.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.ProfileLuceneFieldMap.GetDefinitions(System.String)">
            <summary>
            Gets the definitions.
            </summary>
            <param name="name">The profilename.</param>
            <returns>The definitions for the given profile name.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Search.ProfileSolrFieldMap">
            <summary>
            Used to dynamically generate the lucene field definitions based on the profile definition.
            </summary>
            <seealso cref="T:Sitecore.ContentSearch.SolrProvider.SolrFieldMap" />
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.ProfileSolrFieldMap.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Search.ProfileSolrFieldMap" /> class.
            </summary>
            <param name="profileType">Type of the profile.</param>
            <param name="additionalFields">The additional fields.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.ProfileSolrFieldMap.GetDefinitions(System.String)">
            <summary>
            Gets the definitions.
            </summary>
            <param name="name">The name.</param>
            <returns>The definitions for the given profile name.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Search.SelectedCatalogsCrawler">
            <summary>
            Responsible for indexing Commerce Catalog items that have been selected in the Commerce/Catalog Management/Catalogs folder.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.SelectedCatalogsCrawler.GetCatalogsToIndex">
            <summary>
            Gets the names of the catalogs that should be indexed.
            </summary>
            <returns>The names of the catalogs that should be indexed.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Search.SelectedCatalogsIntervalAsynchronousStrategy">
            <summary>
            Index update strategy that periodically checks for updates to commerce catalog items in catalogs that have been selected in the Catalogs folder root item.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.SelectedCatalogsIntervalAsynchronousStrategy.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Search.SelectedCatalogsIntervalAsynchronousStrategy"/> class.
            </summary>
            <param name="database">The name of the database to index.</param>
            <param name="rootPath">The path to the root item from which indexing will begin.</param>
            <param name="interval">The interval in which index updates will be run.</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Search.SelectedCatalogsIntervalAsynchronousStrategy.RootPath">
            <summary>
            Gets the path to the root item being indexed.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.SelectedCatalogsIntervalAsynchronousStrategy.GetCatalogsToIndex">
            <summary>
            Gets the names of the catalogs that should be indexed.
            </summary>
            <returns>The names of the catalogs that should be indexed.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Search.SitecoreItemExclusionCrawler">
            <summary>
            Used to make sure Sitecore does not crawl Commerce Server Sitecore Items
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.SitecoreItemExclusionCrawler.GetIndexableChildrenIds(Sitecore.ContentSearch.SitecoreIndexableItem)">
            <summary>
            Gets all of the child item ids to be indexed
            </summary>
            <param name="parent">The item whose children we need to check for.</param>
            <returns>A collection of items if there are children, otherwise null</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.SitecoreItemExclusionCrawler.GetIndexableChildren(Sitecore.ContentSearch.SitecoreIndexableItem)">
            <summary>
            Gets all of the child items to be indexed
            </summary>
            <param name="parent">The item whose children we need to check for.</param>
            <returns>A collection of items if there are children, otherwise null</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Search.UserProfileCrawler">
            <summary>
            Specific user profile crawler allowing to add profile addresses to the index.
            </summary>
            <seealso cref="T:Sitecore.Commerce.Connect.CommerceServer.Search.ProfileCrawler" />
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Search.UserProfileCrawler.AddressPropertiesToIndex">
            <summary>
            Gets or sets the index of the address properties to.
            </summary>
            <value>
            The index of the address properties to.
            </value>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.UserProfileCrawler.InjectAdditionalContent(CommerceServer.Core.Runtime.Profiles.Profile,Sitecore.Commerce.Connect.CommerceServer.Search.CommerceProfileIndexableItem)">
            <summary>
            Used to inject address information to the index.
            </summary>
            <param name="profile">The commerce server profile.</param>
            <param name="indexableItem">The indexable item.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Search.FieldReaders.CommerceDecimalFieldReader">
            <summary>
            Field reader for Commerce <see cref="T:System.Decimal"/> field types.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.FieldReaders.CommerceDecimalFieldReader.TryParse(System.String,System.IFormatProvider,System.Decimal@)">
            <summary>
            Converts the string representation of a <see cref="T:System.Decimal"/> in a specified culture-specific format to its .NET type equivalent. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="value">The string value to parse.</param>
            <param name="formatProvider">An object that supplies culture-specific formatting information about the value.</param>
            <param name="result">The parsed .NET type.</param>
            <returns>True if the <paramref name="value"/> was successfully parsed, otherwise false.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Search.FieldReaders.CommerceDoubleFieldReader">
            <summary>
            Field reader for Commerce <see cref="T:System.Double"/> field types.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.FieldReaders.CommerceDoubleFieldReader.TryParse(System.String,System.IFormatProvider,System.Double@)">
            <summary>
            Converts the string representation of a <see cref="T:System.Double"/> in a specified culture-specific format to its .NET type equivalent. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="value">The string value to parse.</param>
            <param name="formatProvider">An object that supplies culture-specific formatting information about the value.</param>
            <param name="result">The parsed .NET type.</param>
            <returns>True if the <paramref name="value"/> was successfully parsed, otherwise false.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Search.FieldReaders.CommerceFieldReader`1">
            <summary>
            Base field reader for Commerce field types.
            </summary>
            <typeparam name="T">The type of data stored in the field.</typeparam>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.FieldReaders.CommerceFieldReader`1.GetFieldValue(Sitecore.ContentSearch.IIndexableDataField)">
            <summary>
            Gets a strongly-typed field value.
            </summary>
            <param name="indexableField">The <see cref="T:Sitecore.ContentSearch.IIndexableDataField"/> representing the field.</param>
            <returns>The strongly-typed field value.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.FieldReaders.CommerceFieldReader`1.TryParse(System.String,System.IFormatProvider,`0@)">
            <summary>
            Converts the string representation of a number in a specified culture-specific format to its .NET type equivalent. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="value">The string value to parse.</param>
            <param name="formatProvider">An object that supplies culture-specific formatting information about the value.</param>
            <param name="result">The parsed .NET type.</param>
            <returns>True if the <paramref name="value"/> was successfully parsed, otherwise false.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Search.FieldReaders.CommerceInt32FieldReader">
            <summary>
            Field reader for Commerce <see cref="T:System.Int32"/> field types.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.FieldReaders.CommerceInt32FieldReader.TryParse(System.String,System.IFormatProvider,System.Int32@)">
            <summary>
            Converts the string representation of a <see cref="T:System.Int32"/> in a specified culture-specific format to its .NET type equivalent. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="value">The string value to parse.</param>
            <param name="formatProvider">An object that supplies culture-specific formatting information about the value.</param>
            <param name="result">The parsed .NET type.</param>
            <returns>True if the <paramref name="value"/> was successfully parsed, otherwise false.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Search.FieldReaders.CommerceInt64FieldReader">
            <summary>
            Field reader for Commerce <see cref="T:System.Int64"/> field types.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.FieldReaders.CommerceInt64FieldReader.TryParse(System.String,System.IFormatProvider,System.Int64@)">
            <summary>
            Converts the string representation of a <see cref="T:System.Int64"/> in a specified culture-specific format to its .NET type equivalent. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="value">The string value to parse.</param>
            <param name="formatProvider">An object that supplies culture-specific formatting information about the value.</param>
            <param name="result">The parsed .NET type.</param>
            <returns>True if the <paramref name="value"/> was successfully parsed, otherwise false.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Search.FieldReaders.CommerceSingleFieldReader">
            <summary>
            Field reader for Commerce <see cref="T:System.Single"/> field types.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.FieldReaders.CommerceSingleFieldReader.TryParse(System.String,System.IFormatProvider,System.Single@)">
            <summary>
            Converts the string representation of a <see cref="T:System.Single"/> in a specified culture-specific format to its .NET type equivalent. A return value indicates whether the conversion succeeded or failed.
            </summary>
            <param name="value">The string value to parse.</param>
            <param name="formatProvider">An object that supplies culture-specific formatting information about the value.</param>
            <param name="result">The parsed .NET type.</param>
            <returns>True if the <paramref name="value"/> was successfully parsed, otherwise false.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Search.CommerceIndexFilter">
            <summary>
            Used to make sure that Commerce catalogs, categories, and products are not indexed by the regular SC crawlers
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.CommerceIndexFilter.Process(Sitecore.ContentSearch.Pipelines.IndexingFilters.InboundIndexFilterArgs)">
            <summary>
            Called when the pipeline is processed
            </summary>
            <param name="args">The args for the current item being processed</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Search.CommerceSearchManager">
            <summary>
            Search helper class with useful tools used in search classes
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.CommerceSearchManager.IsItemCategory(Sitecore.Data.Items.Item)">
            <summary>
            Returns whether or not the specific item is a category
            </summary>
            <param name="item">The item to check</param>
            <returns>True if it's a category, false if not</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.CommerceSearchManager.IsItemProduct(Sitecore.Data.Items.Item)">
            <summary>
            Returns whether or not the specific item is a product
            </summary>
            <param name="item">The item to check</param>
            <returns>True if it's a product, false if not</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.CommerceSearchManager.IsItemVariant(Sitecore.Data.Items.Item)">
            <summary>
            Returns whether or not the specific item is a variant
            </summary>
            <param name="item">The item to check</param>
            <returns>True if it's a variant, false if not</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.CommerceSearchManager.IsItemCatalog(Sitecore.Data.Items.Item)">
            <summary>
            Returns whether or not the specific item is a catalog
            </summary>
            <param name="item">The item to check</param>
            <returns>True if it's a catalog, false if not</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.CommerceSearchManager.IsItemVirtualCatalog(Sitecore.Data.Items.Item)">
            <summary>
            Returns whether or not the specific item is a virtual catalog
            </summary>
            <param name="item">The item to check</param>
            <returns>
            True if it's a virtual catalog, false if not
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.CommerceSearchManager.IsItemNavigation(Sitecore.Data.Items.Item)">
            <summary>
            Returns whether or not the specific item is a navigation
            </summary>
            <param name="item">The item to check</param>
            <returns>True if it's a navigation, false if not</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.CommerceSearchManager.IsItemCatalogSet(Sitecore.Data.Items.Item)">
            <summary>
            Returns whether or not the specific item is a catalog set
            </summary>
            <param name="item">The item to check</param>
            <returns>True if it's a catalog set, false if not</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.CommerceSearchManager.AddSearchOptionsToQuery``1(System.Linq.IQueryable{``0},Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceSearchOptions)">
            <summary>
            This method adds all search options to the provided search query
            </summary>
            <typeparam name="T">The type of search reault item, based on <see cref="T:Sitecore.ContentSearch.SearchTypes.SearchResultItem"/></typeparam>
            <param name="query">The query to add options to</param>
            <param name="searchOptions">The search options to add</param>
            <returns>The updated query</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.CommerceSearchManager.AddSearchOptionsToQuery(System.Linq.IQueryable{Sitecore.ContentSearch.SearchTypes.SitecoreUISearchResultItem},Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceSearchOptions)">
            <summary>
            This method adds all search options to the provided search query
            </summary>
            <param name="query">The query to add options to</param>
            <param name="searchOptions">The search options to add</param>
            <returns>The updated query</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.CommerceSearchManager.GetFacetFieldsForItem(Sitecore.Data.Items.Item)">
            <summary>
            This method returns facet field names for the specified item
            </summary>
            <param name="item">The item</param>
            <returns>A list of the names of fields to facet on</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.CommerceSearchManager.GetItemsPerPageForItem(Sitecore.Data.Items.Item)">
            <summary>
            This methods returns the count for items per page
            </summary>
            <param name="item">The item</param>
            <returns>The count for items per page</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.CommerceSearchManager.GetSortFieldsForItem(Sitecore.Data.Items.Item)">
            <summary>
            This method returns sort field names for the specified item
            </summary>
            <param name="item">The item</param>
            <returns>A list of the names of fields to sort on</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.CommerceSearchManager.GetIndex">
            <summary>
            Gets the name of the current index used by the site
            </summary>
            <returns>The index to work with</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.CommerceSearchManager.GetIndex(System.String)">
            <summary>
            Gets the name of the current index used by the site
            </summary>
            <param name="catalogName">The catalog name to base the index on</param>
            <returns>The index to work with</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.CommerceSearchManager.GetIndex(System.String,System.String)">
            <summary>
            Gets the name of the current index used by the site
            </summary>
            <param name="databaseName">The database name to base the index on.</param>
            <param name="catalogName">The catalog name to base the index on</param>
            <returns>The index to work with</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.CommerceSearchManager.GetVirtualAncestors(Sitecore.Data.Items.Item)">
            <summary>
            Gets all of the virtual ancestors for an item
            </summary>
            <param name="item">The item to find the virtual ancestors for</param>
            <returns>All of the virtual ancestors of the passed in item</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.CommerceSearchManager.ClearVirtualAncestors">
            <summary>
            Clears the virtual ancestors cache.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.CommerceSearchManager.ScanAssociations(Sitecore.Data.Database)">
            <summary>
            This method is used prior to the crawler crawling. It fills the associations
            </summary>
            <param name="database">The database to check for child templates</param>
            <returns>The collection of ancestors</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.CommerceSearchManager.GetDefaultCatalog">
            <summary>
            Gets the default catalog of the current site
            </summary>
            <returns>The name of the default catalog as a string</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.CommerceSearchManager.AddToIndexingQueue(Sitecore.Data.ID,Sitecore.Data.Database)">
            <summary>
            Adds an item to the history queue
            </summary>
            <param name="itemId">The Id of the item that needs to be reindexed</param>
            <param name="database">The database in which the item resides. Passing null indicates that the context database should be used.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.CommerceSearchManager.DeleteFromIndexingQueue(Sitecore.Data.ID,Sitecore.Data.Database)">
            <summary>
            Deletes an item from the indexing queue
            </summary>
            <param name="itemId">The Id of the item that needs to be deleted from the index</param>
            <param name="database">The database in which the item resides. Passing null indicates that the context database should be used.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.CommerceSearchManager.GetChildTemplates(Sitecore.Data.ID,Sitecore.Data.Database)">
            <summary>
            Helper method used to get all child templates of a specific template
            </summary>
            <param name="rootTemplateId">The id of the root template</param>
            <param name="database">The database to check for child templates</param>
            <returns>The list of all child templates</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.CommerceSearchManager.ApplySorting``1(System.Linq.IQueryable{``0},Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceSearchOptions)">
            <summary>
            Base method for applying sorting on a query
            </summary>
            <typeparam name="T">The type of the query item e.g. SearchResultItem</typeparam>
            <param name="query">The query to add sorting to</param>
            <param name="searchOptions">The options containing the sort data</param>
            <returns>The query with sorting applied</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Search.GetChildrenToIndex">
            <summary>
            Used to make sure Sitecore does not crawl Commerce Server Sitecore Items
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.GetChildrenToIndex.Process(Sitecore.ContentSearch.Pipelines.GetChildrenToIndex.GetChildrenToIndexArgs)">
            <summary>
            The GetChildrenToIndex processor is called from the <see cref="F:Sitecore.ContentSearch.Pipelines.PipelineNames.GetChildrenToIndex"/> pipeline
            which is called during the Sitecore item cralwers' <see cref="M:Sitecore.ContentSearch.SitecoreItemCrawler.GetChildList(Sitecore.ContentSearch.SitecoreIndexableItem)"/>
            </summary>
            <param name="args">The get children to index args</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.GetChildrenToIndex.AddString(System.String)">
            <summary>
            Add a string to the indxexes to ignore
            </summary>
            <param name="indexName">the index name to add</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Search.SearchResponse">
            <summary>
            This class represents a search response
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.SearchResponse.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Search.SearchResponse" /> class.
            </summary>        
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Search.SearchResponse.ResponseItems">
            <summary>
            Gets the search result items
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Search.SearchResponse.SearchOptions">
            <summary>
            Gets the paging options
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Search.SearchResponse.TotalItemCount">
            <summary>
            Gets the total item count
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Search.SearchResponse.TotalPageCount">
            <summary>
            Gets the total page count
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Search.SearchResponse.Facets">
            <summary>
            Gets the list of facets
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.SearchResponse.CreateFromSearchResultsItems``1(Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceSearchOptions,Sitecore.ContentSearch.Linq.SearchResults{``0})">
            <summary>
            Creates a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Search.SearchResponse"/> class based on search results of <see cref="T:Sitecore.ContentSearch.SearchTypes.SearchResultItem"/> objects.
            </summary>        
            <param name="searchOptions">The commerce search options </param>
            <param name="sitecoreSearchResults">The sitecore search results</param>
            <typeparam name="T">The type of items in the provided <paramref name="sitecoreSearchResults"/>.  Must derive from <see cref="T:Sitecore.ContentSearch.SearchTypes.SearchResultItem"/>.</typeparam>
            <returns>A new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Search.SearchResponse"/> class.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.SearchResponse.CreateFromUISearchResultsItems(Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceSearchOptions,Sitecore.ContentSearch.Linq.SearchResults{Sitecore.ContentSearch.SearchTypes.SitecoreUISearchResultItem})">
            <summary>
            Creates a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Search.SearchResponse"/> class based on search results of <see cref="T:Sitecore.ContentSearch.SearchTypes.SitecoreUISearchResultItem"/> objects.
            </summary>        
            <param name="searchOptions">The commerce search options </param>
            <param name="sitecoreSearchResults">The sitecore search results</param>
            <returns>A new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Search.SearchResponse"/> class.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.SearchResponse.Create``1(Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceSearchOptions,Sitecore.ContentSearch.Linq.SearchResults{``0},System.Func{``0,Sitecore.Data.Items.Item})">
            <summary>
            Creates a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Search.SearchResponse"/> class based on search results.
            </summary>        
            <param name="searchOptions">The commerce search options </param>
            <param name="sitecoreSearchResults">The sitecore search results</param>
            <param name="getItemDelegate">A delegate that can convert items in the <paramref name="sitecoreSearchResults"/> into a Sitecore <see cref="T:Sitecore.Data.Items.Item"/>.</param>
            <typeparam name="T">The type of items in the provided <paramref name="sitecoreSearchResults"/>.</typeparam>
            <returns>A new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Search.SearchResponse"/> class.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Search.SearchResultComparer`1">
            <summary>
            A comparer class for comparing two search results based on their IDs
            </summary>
            <typeparam name="T">The search result type</typeparam>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.SearchResultComparer`1.Equals(`0,`0)">
            <summary>
            Returns whether or not two search results are equal
            </summary>
            <param name="x">First search result</param>
            <param name="y">Second search result</param>
            <returns>True if equal, false if not.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.SearchResultComparer`1.GetHashCode(`0)">
            <summary>
            Gets the hash code for the specified search result (hascode for its item ID)
            </summary>
            <param name="obj">The searchresult object</param>
            <returns>Returns the hashcode</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Search.CatalogSorter">
            <summary>
            Knows how to sort catalog search result based items
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.CatalogSorter.ApplySorting``1(System.Linq.IQueryable{``0},Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceSearchOptions)">
            <summary>
            Applies sorting to a query based on details in the searchOptions
            </summary>
            <typeparam name="T">The search item type e.g. UISearchResult</typeparam>
            <param name="query">The query to apply the sort to</param>
            <param name="searchOptions">The options for sorting</param>
            <returns>
            The query with the new sort options applied
            </returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Search.CategorySorter">
            <summary>
            Knows how to sort category search result based items
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.CategorySorter.ApplySorting``1(System.Linq.IQueryable{``0},Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceSearchOptions)">
            <summary>
            Applies sorting to a query based on details in the searchOptions
            </summary>
            <typeparam name="T">The search item type e.g. UISearchResult</typeparam>
            <param name="query">The query to apply the sort to</param>
            <param name="searchOptions">The options for sorting</param>
            <returns>
            The query with the new sort options applied
            </returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Search.GenericSorter">
            <summary>
            Knows how to sort any search fields, but any fields that are not string based will not be sorted correctly
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.GenericSorter.ApplySorting``1(System.Linq.IQueryable{``0},Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceSearchOptions)">
            <summary>
            Applies sorting to a query based on details in the searchOptions
            </summary>
            <typeparam name="T">The search item type e.g. UISearchResult</typeparam>
            <param name="query">The query to apply the sort to</param>
            <param name="searchOptions">The options for sorting</param>
            <returns>
            The query with the new sort options applied
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.GenericSorter.CanHandle``1(System.Linq.IQueryable{``0},Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceSearchOptions)">
            <summary>
            CHecks to see if the class can handle sorting this type of query
            </summary>
            <typeparam name="T">The search item type e.g. UISearchResult</typeparam>
            <param name="query">The query to apply the sort to</param>
            <param name="searchOptions">The options for sorting</param>
            <returns>
            True if it can sort it and False otherwise
            </returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Search.ProductSorter">
            <summary>
            Knows how to sort product search result based items
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.ProductSorter.ApplySorting``1(System.Linq.IQueryable{``0},Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceSearchOptions)">
            <summary>
            Applies sorting to a query based on details in the searchOptions
            </summary>
            <typeparam name="T">The search item type e.g. UISearchResult</typeparam>
            <param name="query">The query to apply the sort to</param>
            <param name="searchOptions">The options for sorting</param>
            <returns>
            The query with the new sort options applied
            </returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Search.SorterBase`1">
            <summary>
            Some base helper methods for Sorter classes
            </summary>
            <typeparam name="TSearchResult">The type of the search result item.</typeparam>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.SorterBase`1.CanHandle``1(System.Linq.IQueryable{``0},Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceSearchOptions)">
            <summary>
            CHecks to see if the class can handle sorting this type of query
            </summary>
            <typeparam name="T">The search item type e.g. UISearchResult</typeparam>
            <param name="query">The query to apply the sort to</param>
            <param name="searchOptions">The options for sorting</param>
            <returns>
            True if it can sort it and False otherwise
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Search.SorterBase`1.GetSortingFunc``1(System.Linq.IQueryable{``0},Sitecore.Commerce.Connect.CommerceServer.Search.Models.CommerceSearchOptions)">
            <summary>
            Figures out the the appropriate sort Linq method based on whether or not the query is Asc or Desc
            </summary>
            <typeparam name="TSource">The type of the search item e.g. UISearchResult</typeparam>
            <param name="query">The query to get the OrderBy function from</param>
            <param name="searchOptions">The options containing sort details</param>
            <returns>The function for sorting</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Events.CommercePublishCacheRefresh">
            <summary>
            Used to make sure the the commerce caches are dropped on publish to web
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Events.CommercePublishCacheRefresh.ClearCache(System.Object,System.EventArgs)">
            <summary>
            The method called from the publish:end event
            </summary>
            <param name="sender">The object that created the event</param>
            <param name="args">The args for the current event</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Events.CommercePublishCacheRefresh.CheckForNavChildren(Sitecore.Data.Items.Item,System.Collections.Generic.ICollection{Sitecore.Data.Items.Item})">
            <summary>
            Checks the item and children recursively for a Commerce Navigation Item.  If found the Nav item is added to a list
            </summary>
            <param name="item">the item</param>
            <param name="list">the list to add the nav items to</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Events.CommerceTemplateHierarchyCacheRefreshEvent">
            <summary>
            Custom template hierarchy cache refresh event class
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Events.TemplateHierarchyCacheRefreshEventArgs">
            <summary>
            Event arguments for the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Events.CommerceTemplateHierarchyCacheRefreshEvent"/>
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Events.CommerceTemplateHierarchyCacheRefreshEventHandler">
            <summary>
            Event handler for the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Events.CommerceTemplateHierarchyCacheRefreshEvent"/>.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Events.CommerceTemplateHierarchyCacheRefreshEventHandler.Run(Sitecore.Commerce.Connect.CommerceServer.Events.CommerceTemplateHierarchyCacheRefreshEvent)">
            <summary>  
            Run method used to raise the local event  
            </summary>  
            <param name="event">Event info</param>  
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Events.CommerceTemplateHierarchyCacheRefreshEventHandler.OnTemplateHierarchyCacheRefresh(System.Object,System.EventArgs)">
            <summary>
            Called when the template hierarchy cache refresh event is triggered
            </summary>
            <param name="sender">The senders information</param>
            <param name="args">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Events.CommerceCacheRefreshEventHandler">
            <summary>
            Event handler for <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Events.CacheRefreshEvent"/>
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Events.CommerceCacheRefreshEventHandler.Run(Sitecore.Commerce.Connect.CommerceServer.Events.CacheRefreshEvent)">
            <summary>  
            Run method used to raise the local event  
            </summary>  
            <param name="event">Event info</param>  
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Events.CommerceCacheRefreshEventHandler.OnCacheRefresh(System.Object,System.EventArgs)">
            <summary>
            Called when the Cache refresh event is triggered
            </summary>
            <param name="sender">The senders information</param>
            <param name="args">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Events.CacheRefreshEvent">
            <summary>
            Custom Cache refresh event class
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Events.CacheRefreshEvent.#ctor(System.String,System.String,Sitecore.Data.ID)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Events.CacheRefreshEvent" /> class.
            </summary>
            <param name="cacheType">the cache type to refresh</param>
            <param name="databaseName">the name of the database the selected item is in</param>
            <param name="itemID">The selected item id</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Events.CacheRefreshEvent.CacheType">
            <summary>
            Gets or sets the cache type
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Events.CacheRefreshEvent.DatabaseName">
            <summary>
            Gets or sets the database name
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Events.CacheRefreshEvent.ItemID">
            <summary>
            Gets or sets the item id
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Events.CacheRefreshEventArgs">
            <summary>
            Event args for <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Profiles.Events.CommerceProfileCacheRefreshEvent"/>
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Events.CacheRefreshEventArgs.#ctor(System.String,System.String,Sitecore.Data.ID)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Events.CacheRefreshEventArgs" /> class.
            </summary>
            <param name="cacheType">The type of cache to refresh - <see cref="T:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.CommerceCacheNames" /></param>
            <param name="databaseName">database name that the selected item is located in</param>
            <param name="itemID">The id of the selected item in the tree</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Events.CacheRefreshEventArgs.CacheType">
            <summary>
            Gets or sets the user name(s)
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Events.CacheRefreshEventArgs.DatabaseName">
            <summary>
            Gets or sets the user name(s)
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Events.CacheRefreshEventArgs.ItemID">
            <summary>
            Gets or sets the user name(s)
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Events.CommerceTemplateHierarchyCacheRefreshHook">
            <summary>
            Hook for the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Events.CommerceTemplateHierarchyCacheRefreshEvent"/>.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Events.CommerceTemplateHierarchyCacheRefreshHook.Initialize">
            <summary>
            Initializes the hook
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Events.CommerceCacheRefreshHook">
            <summary>
            Hook for  <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Events.CacheRefreshEvent"/>
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Events.CommerceCacheRefreshHook.Initialize">
            <summary>
            Init the hook
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Events.CommerceItemEventHandler">
            <summary>
            Handles Commerce Server item events.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Events.CommerceItemEventHandler.OnItemSaved(System.Object,System.EventArgs)">
            <summary>
            Called when the item is saved.
            </summary>
            <param name="sender">The sender.</param>
            <param name="args">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Extensions.CatalogExtensions">
            <summary>
            Extensions methods to make it easier to work with the catalog system in Sitecore
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Extensions.CatalogExtensions.DeleteAsCatalogItem(Sitecore.Data.Items.Item)">
            <summary>
            Extends a Sitecore item and performs a more efficient deletion of a catalog
            </summary>
            <param name="item">The catalog item to delete</param>
            <returns>True if successful and false otherwise</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.ICommerceConnectorContext">
            <summary>
            Commerce connector context interface definition.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.ICommerceConnectorContext.CatalogsManagedByExternalCommerceSystem">
            <summary>
            Gets a value indicating whether catalogs are managed by Commerce.
            </summary>
            <value>
            <c>true</c> if catalogs are managed by Commerce; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.IContactCommerceInfo">
            <summary>
            Used to store Commerce info as a facet against an xDB Contact  
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.IContactCommerceInfo.UserId">
            <summary>
            Gets or sets the user identifier.
            </summary>
            <value>
            The user identifier.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.GetAssociatedStockLocationRequest">
            <summary>
            The request parameters required for to get associated stock location.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.GetAssociatedStockLocationRequest.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.GetAssociatedStockLocationRequest" /> class.
            </summary>
            <param name="productCatalogName">Name of the product catalog.</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.GetAssociatedStockLocationRequest.ProductCatalogName">
            <summary>
            Gets or sets the name of the commerce product catalog whose associated inventory catalog should be retrieved.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.GetAssociatedStockLocationResult">
            <summary>
            Result returned by a GetAssociatedStockLocationResult.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.GetAssociatedStockLocationResult.Location">
            <summary>
            Gets or sets the stock location.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.GetBackInStockInformation">
            <summary>
            The pipeline processor that retrieves back-in-stock information for the requested products.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.GetBackInStockInformation.#ctor(Sitecore.Commerce.Entities.IEntityFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.GetBackInStockInformation"/> class.
            </summary>
            <param name="entityFactory">The entity factory.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.GetBackInStockInformation.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified pipeline arguments.
            </summary>
            <param name="args">The pipeline arguments.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.GetBackInStockInformation.PopulateStockInformationUpdate(Sitecore.Commerce.Entities.Inventory.StockInformationUpdate,Sitecore.Commerce.Connect.CommerceServer.Inventory.Models.CommerceInventoryProduct,Sitecore.Commerce.Services.Inventory.GetBackInStockInformationRequest,Sitecore.Commerce.Services.Inventory.GetBackInStockInformationResult)">
            <summary>
            Populates an CommerceConnect <see cref="T:Sitecore.Commerce.Entities.Inventory.StockInformationUpdate"/> entity based on a Commerce <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Models.CommerceInventoryProduct"/>.
            </summary>
            <param name="entity">The CommerceConnect <see cref="T:Sitecore.Commerce.Entities.Inventory.StockInformationUpdate"/> entity to populate.</param>
            <param name="product">The Commerce <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Models.CommerceInventoryProduct"/>.</param>
            <param name="request">The current request.</param>
            <param name="result">The current result.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.GetBackInStockInformation.PopulateStockInformationUpdateLocation(Sitecore.Commerce.Entities.Inventory.StockInformationUpdateLocation,Sitecore.Commerce.Connect.CommerceServer.Inventory.Models.CommerceInventoryProduct,System.String,Sitecore.Commerce.Services.Inventory.GetBackInStockInformationRequest,Sitecore.Commerce.Services.Inventory.GetBackInStockInformationResult)">
            <summary>
            Populates an CommerceConnect <see cref="T:Sitecore.Commerce.Entities.Inventory.StockInformationUpdateLocation"/> entity based on a Commerce <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Models.CommerceInventoryProduct"/> and location.
            </summary>
            <param name="entity">The CommerceConnect <see cref="T:Sitecore.Commerce.Entities.Inventory.StockInformationUpdateLocation"/> entity to populate.</param>
            <param name="product">The Commerce <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Models.CommerceInventoryProduct"/>.</param>
            <param name="location">The location.</param>
            <param name="request">The current request.</param>
            <param name="result">The current result.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.GetBackInStockInformation.PopulateStockInformationUpdateLocation(Sitecore.Commerce.Entities.Inventory.StockInformationUpdateLocation,Sitecore.Commerce.Connect.CommerceServer.Inventory.Models.CommerceInventoryProduct,System.String,Sitecore.Commerce.Services.Inventory.GetStockInformationResult)">
            <summary>
            Populates an CommerceConnect <see cref="T:Sitecore.Commerce.Entities.Inventory.StockInformationUpdateLocation"/> entity based on a Commerce <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Models.CommerceInventoryProduct"/>, location, and <see cref="T:Sitecore.Commerce.Services.Inventory.GetStockInformationResult"/>.
            </summary>
            <param name="entity">The CommerceConnect <see cref="T:Sitecore.Commerce.Entities.Inventory.StockInformationUpdateLocation"/> entity to populate.</param>
            <param name="product">The Commerce <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Models.CommerceInventoryProduct"/>.</param>
            <param name="location">The location.</param>
            <param name="stockResult">The <see cref="T:Sitecore.Commerce.Services.Inventory.GetStockInformationResult"/>.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.GetBackInStockInformation.GetOrderableLocations(Sitecore.Commerce.Connect.CommerceServer.Inventory.Models.CommerceInventoryProduct)">
            <summary>
            Gets the locations where a product is orderable.
            </summary>
            <param name="product">The Commerce <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Models.CommerceInventoryProduct"/>.</param>
            <returns>The list of locations where the product is orderable</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.GetAssociatedStockLocation">
            <summary>
            Pipeline processor that gets associated stock location.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.GetAssociatedStockLocation.#ctor(Sitecore.Commerce.Entities.IEntityFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.GetAssociatedStockLocation"/> class.
            </summary>
            <param name="entityFactory">The entity factory.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.GetAssociatedStockLocation.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.GetAssociatedStockLocation.GetAssociatedCatalog(Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.GetAssociatedStockLocationRequest)">
            <summary>
            Gets the associated inventory catalog.
            </summary>
            <param name="request">The current request.</param>
            <returns>The commerce inventory sku object</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.DisassociateLocationRequest">
            <summary>
            Request used to diassociate a product catalog to an inventory catalog.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.DisassociateLocationRequest.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.DisassociateLocationRequest" /> class.
            </summary>
            <param name="productCatalogName">Name of the product catalog.</param>
            <param name="location">Name of the lcoation.</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.DisassociateLocationRequest.ProductCatalogName">
            <summary>
            Gets or sets the product catalog name to disassociate with the location.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.DisassociateLocationRequest.Location">
            <summary>
            Gets or sets the inventory location to disassociate with the product catalog.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.AssociateLocationRequest">
            <summary>
            Request used to associate a product catalog to an inventory catalog.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.AssociateLocationRequest.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.AssociateLocationRequest" /> class.
            </summary>
            <param name="productCatalogName">Name of the product catalog.</param>
            <param name="location">Name of the lcoation.</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.AssociateLocationRequest.ProductCatalogName">
            <summary>
            Gets or sets the product catalog name to associate with the location.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.AssociateLocationRequest.Location">
            <summary>
            Gets or sets the inventory location to associate with the product catalog.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.DisassociateLocationResult">
            <summary>
            Result returned by a DisassociateLocationRequest.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.DisassociateLocationResult.Location">
            <summary>
            Gets or sets the stock location that was disassociated.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.AssociateLocationResult">
            <summary>
            Result returned by a AssociateLocationRequest.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.AssociateLocationResult.Location">
            <summary>
            Gets or sets the stock location that was associated.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.CreateStockLocationRequest">
            <summary>
            Request used to create an CommerceConnect stock location entity.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.CreateStockLocationRequest.#ctor(Sitecore.Commerce.Connect.CommerceServer.Inventory.Models.CommerceStockLocation)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.CreateStockLocationRequest"/> class.
            </summary>
            <param name="location">The the stock location entity to create.</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.CreateStockLocationRequest.Location">
            <summary>
            Gets or sets the stock location to create.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.CreateStockLocationResult">
            <summary>
            Result returned by a <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.CreateStockLocationRequest"/>.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.CreateStockLocationResult.Location">
            <summary>
            Gets or sets the stock location that was created.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.DeleteStockInformationRequest">
            <summary>
            The request parameters required for to delete commerce inventory sku.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.DeleteStockInformationRequest.#ctor(System.String,Sitecore.Commerce.Connect.CommerceServer.Inventory.Models.CommerceStockInformation)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.DeleteStockInformationRequest" /> class.
            </summary>
            <param name="location">The inventory location.</param>
            <param name="stockInformation">The stock information.</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.DeleteStockInformationRequest.StockInformation">
            <summary>
            Gets or sets the commerce stock information.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.DeleteStockInformationRequest.Location">
            <summary>
            Gets or sets the specific warehouse or central storage where where stock information is requested.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.DeleteStockInformationResult">
            <summary>
            Result returned by a DeleteStockInformationResult.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.DeleteStockInformationResult.Deleted">
            <summary>
            Gets or sets a value indicating whether the inventory sku was successfully deleted or not.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.DeleteStockLocationRequest">
            <summary>
            Request used to delete an CommerceConnect stock location entity.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.DeleteStockLocationRequest.Location">
            <summary>
            Gets or sets the name of the stock location to delete.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.DeleteStockLocationResult">
            <summary>
            Result returned by a <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.DeleteStockLocationRequest"/>.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.DeleteStockLocationResult.Deleted">
            <summary>
            Gets or sets a value indicating whether the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Models.CommerceStockLocation"/> entity was successfully deleted.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.GetUnassociatedProductCatalogsRequest">
            <summary>
            The request parameters required for to get unassociated product catalogs.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.GetUnassociatedProductCatalogsResult">
            <summary>
            Result returned by a GetUnassociatedProductCatalogsRequest.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.GetUnassociatedProductCatalogsResult.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.GetUnassociatedProductCatalogsResult" /> class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.GetUnassociatedProductCatalogsResult.ProductCatalogs">
            <summary>
            Gets or sets the product catalogs.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.SearchStockLocationsRequest">
            <summary>
            Request used to retrieve all stock locations.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.SearchStockLocationsRequest.SearchClause">
            <summary>
            Gets or sets the search clause to apply.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.SearchStockLocationsRequest.SearchOptions">
            <summary>
            Gets or sets the search options to apply.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.SearchStockLocationsResult">
            <summary>
            Result returned by a <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.SearchStockLocationsResult"/>.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.SearchStockLocationsResult.Locations">
            <summary>
            Gets or sets the list of stock locations.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.SearchStockLocationsResult.TotalRecords">
            <summary>
            Gets or sets the total number of records that matched the search criteria.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.SearchStockLocationsResult.StartingRecord">
            <summary>
            Gets or sets the number of the first record in the <see cref="P:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.SearchStockLocationsResult.Locations"/> list.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.SearchStockInformationRequest">
            <summary>
            The request parameters required for to retrieve commerce stock informations.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.SearchStockInformationRequest.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.SearchStockInformationRequest" /> class.
            </summary>
            <param name="catalogName">The name of the product catalog.</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.SearchStockInformationRequest.CatalogName">
            <summary>
            Gets or sets the product catalog name.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.SearchStockInformationRequest.Location">
            <summary>
            Gets or sets the specific warehouse or central storage where where stock information is requested.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.SearchStockInformationRequest.SearchClause">
            <summary>
            Gets or sets the search clause to apply.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.SearchStockInformationRequest.SearchOptions">
            <summary>
            Gets or sets the search options to apply.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.SearchStockInformationResult">
            <summary>
            The response returned by a request to retrieve commerce stock information.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.SearchStockInformationResult.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.SearchStockInformationResult" /> class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.SearchStockInformationResult.StockInformation">
            <summary>
            Gets or sets the stock information for the requested products.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.SearchStockInformationResult.TotalRecords">
            <summary>
            Gets or sets the total number of records that matched the search criteria.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.SearchStockInformationResult.StartingRecord">
            <summary>
            Gets or sets the number of the first record in the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Models.CommerceStockInformation"/> list.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.GetStockLocationRequest">
            <summary>
            Request used to retrieve an CommerceConnect stock location entity.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.GetStockLocationRequest.Location">
            <summary>
            Gets or sets the name of the stock location to retrieve.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.GetStockLocationRequest.ProductCatalogName">
            <summary>
            Gets or sets the name of the commerce product catalog whose stock location information should be retrieved.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.GetStockLocationResult">
            <summary>
            Result returned by a <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.GetStockLocationRequest"/>.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.GetStockLocationResult.Location">
            <summary>
            Gets or sets the stock location.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.PurgeDeletedItemsRequest">
            <summary>
            The request parameters required for to purge deteled commerce inventory sku.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.PurgeDeletedItemsRequest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.PurgeDeletedItemsRequest" /> class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.PurgeDeletedItemsRequest.PurgeBeforeDate">
            <summary>
            Gets or sets the purge before date.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.PurgeDeletedItemsResult">
            <summary>
            Result returned by a PurgeDeletedItemsRequest.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.SaveCatalogObjectRequest">
            <summary>
            Request used to save a commerce catalog object.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.SaveCatalogObjectRequest.#ctor(CommerceServer.Core.Catalog.CatalogObjectBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.SaveCatalogObjectRequest"/> class.
            </summary>
            <param name="catalogObject">The catalog object to save.</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.SaveCatalogObjectRequest.CatalogObject">
            <summary>
            Gets or sets the catalog object to save.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.SaveCatalogObjectResult">
            <summary>
            Result returned by a <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.SaveCatalogObjectRequest"/>.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.CreateStockInformationRequest">
            <summary>
            The request parameters required for to create commerce inventory sku.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.CreateStockInformationRequest.#ctor(System.String,Sitecore.Commerce.Connect.CommerceServer.Inventory.Models.CommerceStockInformation)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.CreateStockInformationRequest" /> class.
            </summary>
            <param name="location">The inventory location.</param>
            <param name="stockInformation">The stock information.</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.CreateStockInformationRequest.StockInformation">
            <summary>
            Gets or sets the commerce stock information.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.CreateStockInformationRequest.Location">
            <summary>
            Gets or sets the specific warehouse or central storage where where stock information is requested.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.CreateStockInformationResult">
            <summary>
            Result returned by a CreateStockInformationResult.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.CreateStockInformationResult.StockInformation">
            <summary>
            Gets or sets the commerce stock information.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.TranslateEntityToInventoryCatalogRequest">
            <summary>
            Request used to translate a CommerceStockLocation entity into Commerce inventory catalog.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.TranslateEntityToInventoryCatalogResult">
            <summary>
            Result returned by a <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.TranslateEntityToInventoryCatalogRequest"/>.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.TranslateEntityToInventoryRequest`2">
            <summary>
            Base request used to translate an CommerceConnect entity into a Commerce inventory object into.
            </summary>
            <typeparam name="TCommerceConnect">The CommerceConnect entity type.</typeparam>
            <typeparam name="TCommerce">The Commerce catalog object type.</typeparam>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.TranslateEntityToInventoryRequest`2.TranslateSource">
            <summary>
            Gets or sets the source CommerceConnect entity to translate.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.TranslateEntityToInventoryRequest`2.TranslateDestination">
            <summary>
            Gets or sets the destination Commerce object that will be populated.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.TranslateEntityToInventoryResult`1">
            <summary>
            Base result returned by a <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.TranslateEntityToInventoryRequest`2"/>.
            </summary>
            <typeparam name="TCommerce">The Commerce catalog object type.</typeparam>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.TranslateEntityToInventoryResult`1.TranslatedObject">
            <summary>
            Gets or sets the translated Commerce object.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.TranslateInventoryCatalogToEntityRequest">
            <summary>
            Request used to translate a Commerce inventory catalog into a CommerceStockLocation entity.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.TranslateInventoryCatalogToEntityResult">
            <summary>
            Result returned by a <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.TranslateInventoryCatalogToEntityRequest"/>.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.TranslateInventoryToEntityRequest`1">
            <summary>
            Base request used to translate a Commerce inventory object into a CommerceConnect entity.
            </summary>
            <typeparam name="TCommerce">The Commerce catalog object type.</typeparam>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.TranslateInventoryToEntityRequest`1.TranslateSource">
            <summary>
            Gets or sets the translated CommerceConnect entity.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.TranslateInventoryToEntityResult`1">
            <summary>
            Base result returned by a <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.TranslateInventoryToEntityRequest`1"/>.
            </summary>
            <typeparam name="TCommerceConnect">The CommerceConnect entity type.</typeparam>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.TranslateInventoryToEntityResult`1.TranslatedEntity">
            <summary>
            Gets or sets the translated CommerceConnect entity.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.UpdateStockInformationRequest">
            <summary>
            The request parameters required for to update commerce inventory sku.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.UpdateStockInformationRequest.#ctor(System.String,Sitecore.Commerce.Connect.CommerceServer.Inventory.Models.CommerceStockInformation)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.UpdateStockInformationRequest" /> class.
            </summary>
            <param name="location">The inventory location.</param>
            <param name="stockInformation">The stock information.</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.UpdateStockInformationRequest.StockInformation">
            <summary>
            Gets or sets the commerce stock information.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.UpdateStockInformationRequest.Location">
            <summary>
            Gets or sets the specific warehouse or central storage where where stock information is requested.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.UpdateStockInformationResult">
            <summary>
            Result returned by a UpdateStockInformationResult.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.UpdateStockInformationResult.StockInformation">
            <summary>
            Gets or sets the commerce stock information.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.DisassociateLocation">
            <summary>
            Pipeline processor that disassociates a product catalog to a location.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.DisassociateLocation.#ctor(Sitecore.Commerce.Entities.IEntityFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.DisassociateLocation"/> class.
            </summary>
            <param name="entityFactory">The entity factory.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.DisassociateLocation.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.AssociateLocation">
            <summary>
            Pipeline processor that associates a product catalog to a location.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.AssociateLocation.#ctor(Sitecore.Commerce.Entities.IEntityFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.AssociateLocation"/> class.
            </summary>
            <param name="entityFactory">The entity factory.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.AssociateLocation.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.GetUnassociatedProductCatalogs">
            <summary>
            Pipeline processor that gets unassociated product catalogs.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.GetUnassociatedProductCatalogs.#ctor(Sitecore.Commerce.Entities.IEntityFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.GetUnassociatedProductCatalogs"/> class.
            </summary>
            <param name="entityFactory">The entity factory.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.GetUnassociatedProductCatalogs.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.GetUnassociatedProductCatalogs.GetUnassociatedCatalogs">
            <summary>
            Gets the unassociated product catalogs.
            </summary>
            <returns>The commerce inventory sku object</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.PurgeDeletedItems">
            <summary>
            Pipeline processor that purge deleted inventory skus.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.PurgeDeletedItems.#ctor(Sitecore.Commerce.Entities.IEntityFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.PurgeDeletedItems"/> class.
            </summary>
            <param name="entityFactory">The entity factory.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.PurgeDeletedItems.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.SearchStockInformation">
            <summary>
            Defines the SearchStockInformations pipeline processor.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.SearchStockInformation.#ctor(Sitecore.Commerce.Entities.IEntityFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.SearchStockInformation"/> class.
            </summary>
            <param name="entityFactory">The entity factory.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.SearchStockInformation.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.SearchStockInformation.GetSkus(Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.SearchStockInformationRequest,System.Int32@)">
            <summary>
            Retrieves inventory sku collection.
            </summary>
            <param name="request">The service request.</param>
            <param name="totalRecords">Recieves the total number of records that matched the request search criteria.</param>
            <returns>The inventory sku collection.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.SearchStockInformation.GetRequiredPropertiesToReturn">
            <summary>
            Retrieves a list of CommerceStockInformation entity required properties.
            </summary>
            <returns>The list of CommerceStockInformation entity required properties..</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.UpdateStockInformation">
            <summary>
            Pipeline processor that updates an inventory sku.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.UpdateStockInformation.#ctor(Sitecore.Commerce.Entities.IEntityFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.UpdateStockInformation"/> class.
            </summary>
            <param name="entityFactory">The entity factory.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.UpdateStockInformation.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.UpdateStockInformation.GetInventorySku(Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.UpdateStockInformationRequest)">
            <summary>
            Gets a commerce server <see cref="T:CommerceServer.Core.Inventory.InventorySku"/>.
            </summary>
            <param name="request">The request.</param>
            <returns>The commerce inventory sku object</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.UpdateStockLocationRequest">
            <summary>
            Request used to update an CommerceConnect stock location entity.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.UpdateStockLocationRequest.#ctor(Sitecore.Commerce.Connect.CommerceServer.Inventory.Models.CommerceStockLocation)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.UpdateStockLocationRequest"/> class.
            </summary>
            <param name="location">The the stock location entity to update.</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.UpdateStockLocationRequest.Location">
            <summary>
            Gets or sets the stock location to update.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.UpdateStockLocationResult">
            <summary>
            Result returned by a <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.UpdateStockLocationRequest"/>.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.UpdateStockLocationResult.Location">
            <summary>
            Gets or sets the stock location that was updated.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.CreateStockInformation">
            <summary>
            Pipeline processor that creates an inventory sku.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.CreateStockInformation.#ctor(Sitecore.Commerce.Entities.IEntityFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.CreateStockInformation"/> class.
            </summary>
            <param name="entityFactory">The entity factory.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.CreateStockInformation.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.CreateStockInformation.CreateInventorySku(Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.CreateStockInformationRequest)">
            <summary>
            Creates a commerce server <see cref="T:CommerceServer.Core.Inventory.InventorySku"/>.
            </summary>
            <param name="request">The request.</param>
            <returns>The commerce inventory sku object</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.CommerceInventoryProcessor">
            <summary>
            Base pipeline processor for the inventory system.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.CommerceInventoryProcessor.#ctor(Sitecore.Commerce.Entities.IEntityFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.CommerceInventoryProcessor"/> class.
            </summary>
            <param name="entityFactory">the entity factory.</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.CommerceInventoryProcessor.EntityFactory">
            <summary>
            Gets the entity factory.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.CommerceInventoryProcessor.InventoryRepository">
            <summary>
            Gets the inventory repository.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.CommerceInventoryProcessor.CatalogRepository">
            <summary>
            Gets the catalog repository.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.CommerceInventoryProcessor.TranslateInventoryCatalogToEntity(CommerceServer.Core.Inventory.InventoryCatalog,Sitecore.Commerce.Services.ServiceProviderResult)">
            <summary>
            Translates a <see cref="T:CommerceServer.Core.Inventory.InventoryCatalog"/> to a <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Models.CommerceStockLocation"/> entity.
            </summary>
            <param name="catalog">The <see cref="T:CommerceServer.Core.Inventory.InventoryCatalog"/> to translate.</param>
            <param name="currentResult">The current pipeline result object.</param>
            <returns>The translated <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Models.CommerceStockLocation"/> entity.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.CommerceInventoryProcessor.TranslateEntityToInventoryCatalog(Sitecore.Commerce.Connect.CommerceServer.Inventory.Models.CommerceStockLocation,CommerceServer.Core.Inventory.InventoryCatalog,Sitecore.Commerce.Services.ServiceProviderResult)">
            <summary>
            Translates a <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Models.CommerceStockLocation"/> entity to a <see cref="T:CommerceServer.Core.Inventory.InventoryCatalog"/>.
            </summary>
            <param name="entity">The <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Models.CommerceStockLocation"/> entity to translate.</param>
            <param name="catalog">The <see cref="T:CommerceServer.Core.Inventory.InventoryCatalog"/> to update.</param>
            <param name="currentResult">The current pipeline result object.</param>
            <returns>The translated <see cref="T:CommerceServer.Core.Inventory.InventoryCatalog"/>.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.CommerceInventoryProcessor.SaveInventoryCatalog(CommerceServer.Core.Inventory.InventoryCatalog,Sitecore.Commerce.Services.ServiceProviderResult)">
            <summary>
            Saves a <see cref="T:CommerceServer.Core.Inventory.InventoryCatalog"/>.
            </summary>
            <param name="catalog">The <see cref="T:CommerceServer.Core.Inventory.InventoryCatalog"/> to save.</param>
            <param name="currentResult">The current pipeline result object.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.CommerceInventoryProcessor.TranslateSkuToEntity(CommerceServer.Core.Inventory.InventorySku,Sitecore.Commerce.Entities.Inventory.StockStatus,Sitecore.Commerce.Services.ServiceProviderResult)">
            <summary>
            Translates a <see cref="T:CommerceServer.Core.Inventory.InventorySku"/> to a <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Models.CommerceStockInformation"/> entity.
            </summary>
            <param name="catalog">The <see cref="T:CommerceServer.Core.Inventory.InventorySku"/> to translate.</param>
            <param name="status">The <see cref="T:Sitecore.Commerce.Entities.Inventory.StockStatus"/> to translate.</param>
            <param name="currentResult">The current pipeline result object.</param>
            <returns>The translated <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Models.CommerceStockInformation"/> entity.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.CommerceInventoryProcessor.TranslateEntityToSku(Sitecore.Commerce.Connect.CommerceServer.Inventory.Models.CommerceStockInformation,CommerceServer.Core.Inventory.InventorySku,Sitecore.Commerce.Services.ServiceProviderResult)">
            <summary>
            Translates a <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Models.CommerceStockInformation"/> entity to a <see cref="T:CommerceServer.Core.Inventory.InventorySku"/>.
            </summary>
            <param name="entity">The <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Models.CommerceStockInformation"/> entity to translate.</param>
            <param name="sku">The <see cref="T:CommerceServer.Core.Inventory.InventorySku"/> to update.</param>
            <param name="currentResult">The current pipeline result object.</param>
            <returns>The translated <see cref="T:CommerceServer.Core.Inventory.InventorySku"/>.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.CommerceInventoryProcessor.SaveSku(CommerceServer.Core.Inventory.InventorySku,Sitecore.Commerce.Services.ServiceProviderResult)">
            <summary>
            Saves a <see cref="T:CommerceServer.Core.Inventory.InventorySku"/>.
            </summary>
            <param name="sku">The <see cref="T:CommerceServer.Core.Inventory.InventorySku"/> to save.</param>
            <param name="currentResult">The current pipeline result object.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.CommerceInventoryProcessor.MergeResults(Sitecore.Commerce.Services.ServiceProviderResult,Sitecore.Commerce.Services.ServiceProviderResult)">
            <summary>
            Merges a sub-pipeline run result with the current pipeline result object.
            </summary>
            <param name="currentResult">The current pipelline result object.</param>
            <param name="pipelineResult">The result returned from running a sub-pipeline.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.CommerceInventoryProcessor.GetSearchOptions(Sitecore.Commerce.Connect.CommerceServer.Inventory.Models.CommerceInventorySearchOptions)">
            <summary>
            Gets the inventory search options to apply.
            </summary>
            <param name="searchOptions">The commercer inventory search options.</param>
            <returns>The inventory searchc options.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.CommerceInventoryProcessor.GetStockStatus(CommerceServer.Core.Catalog.Product,Sitecore.Commerce.Connect.CommerceServer.Inventory.Models.CommerceInventoryProduct)">
            <summary>
            Gets the stock status for the requested item.
            </summary>
            <param name="product">The product for which stock status is to be retrieved.</param>
            <param name="inventoryProduct">The inventory product that specifies which member of the product whose status should be retrieved.</param>
            <returns>The stock status for the requested item.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.CommerceInventoryProcessor.InventoryConditionToStockStatus(CommerceServer.Core.Inventory.InventoryCondition)">
            <summary>
            Gets a <see cref="T:Sitecore.Commerce.Entities.Inventory.StockStatus"/> entity that represents a <see cref="T:Sitecore.Commerce.Entities.Inventory.StockStatus"/> enum value.
            </summary>
            <param name="inventoryCondition">The <see cref="T:CommerceServer.Core.Inventory.InventoryCondition"/> to convert.</param>
            <returns>The converted <see cref="T:Sitecore.Commerce.Entities.Inventory.StockStatus"/> entity.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.CreateStockLocation">
            <summary>
            Pipeline processor that creates a stock location entity.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.CreateStockLocation.#ctor(Sitecore.Commerce.Entities.EntityFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.CreateStockLocation"/> class.
            </summary>
            <param name="entityFactory">The entity factory.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.CreateStockLocation.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.DeleteStockInformation">
            <summary>
            Pipeline processor that deletes an inventory sku.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.DeleteStockInformation.#ctor(Sitecore.Commerce.Entities.IEntityFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.DeleteStockInformation"/> class.
            </summary>
            <param name="entityFactory">The entity factory.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.DeleteStockInformation.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.DeleteStockInformation.DeleteInventorySku(Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.DeleteStockInformationRequest)">
            <summary>
            Deletes a commerce server <see cref="T:CommerceServer.Core.Inventory.InventorySku"/>.
            </summary>
            <param name="request">The request.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.DeleteStockLocation">
            <summary>
            Pipeline processor that deletes a stock location entity.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.DeleteStockLocation.#ctor(Sitecore.Commerce.Entities.EntityFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.DeleteStockLocation"/> class.
            </summary>
            <param name="entityFactory">The entity factory.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.DeleteStockLocation.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.DeleteStockLocation.DeleteInventoryCatalog(Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.DeleteStockLocationRequest,Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.DeleteStockLocationResult)">
            <summary>
            Deletes an inventory catalog.
            </summary>
            <param name="request">The service request.</param>
            <param name="result">The service result object.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.SearchStockLocations">
            <summary>
            Pipeline processor that creates a retrieves a single stock location entity.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.SearchStockLocations.#ctor(Sitecore.Commerce.Entities.EntityFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.SearchStockLocations"/> class.
            </summary>
            <param name="entityFactory">The entity factory.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.SearchStockLocations.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.SearchStockLocations.GetInventoryCatalogs(Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.SearchStockLocationsRequest,System.Int32@)">
            <summary>
            Retrieves an inventory catalog.
            </summary>
            <param name="request">The service request.</param>
            <param name="totalRecords">Recieves the total number of records that matched the request search criteria.</param>
            <returns>The requested inventory catalog.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.SearchStockLocations.GetRequiredPropertiesToReturn">
            <summary>
            Retrieves a list of CommerceStockLocation entity required properties.
            </summary>
            <returns>The list of CommerceStockLocation entity required properties..</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.GetStockLocation">
            <summary>
            Pipeline processor that creates a retrieves a single stock location entity.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.GetStockLocation.#ctor(Sitecore.Commerce.Entities.EntityFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.GetStockLocation"/> class.
            </summary>
            <param name="entityFactory">The entity factory.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.GetStockLocation.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.GetStockLocation.GetInventoryCatalog(Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.GetStockLocationRequest)">
            <summary>
            Retrieves an inventory catalog.
            </summary>
            <param name="request">The service request.</param>
            <returns>The requested inventory catalog.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.TranslateEntityToInventoryCatalog">
            <summary>
            Processor that translates an CommerceConnect <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Models.CommerceStockLocation"/> entity into a Commerce <see cref="T:CommerceServer.Core.Inventory.InventoryCatalog"/> object.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.TranslateEntityToInventoryCatalog.ShouldTranslateProperty(Sitecore.Commerce.Connect.CommerceServer.Inventory.Models.CommerceStockLocation,System.Data.DataRow,System.String,Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.TranslateEntityToInventoryCatalogResult)">
            <summary>
            Determines if a property should be translated.
            </summary>
            <param name="source">The source CommerceConnect entity.</param>
            <param name="destinationRow">The destination table row from the Commerce object Information data set.</param>
            <param name="propertyName">The name of the property to inspect.</param>
            <param name="result">The translation result.</param>
            <returns><c>True</c> if the property should be translated, otherwise false.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.TranslateEntityToSku">
            <summary>
            Pipeline processor to translate from an CommerceConnect CommerceStockInformation entity to a CommerceServer InventorySku object.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.TranslateEntityToSku.Translate(Sitecore.Commerce.Connect.CommerceServer.Inventory.Models.CommerceStockInformation,CommerceServer.Core.Inventory.InventorySku,Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.TranslateEntityToSkuResult)">
            <summary>
            Translates an CommerceConnect commerceStockInformation to a specific CommerceServer inventorySku
            </summary>
            <param name="source">The CommerceConnect commerceStockInformation</param>
            <param name="destination">The CommerceServer inventorySku to copy to</param>
            <param name="result">The translation result.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.TranslateEntityToSku.ShouldTranslateProperty(Sitecore.Commerce.Connect.CommerceServer.Inventory.Models.CommerceStockInformation,System.Data.DataRow,System.String,Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.TranslateEntityToSkuResult)">
            <summary>
            Determines if a property should be translated.
            </summary>
            <param name="source">The source CommerceConnect entity.</param>
            <param name="destinationRow">The destination table row from the Commerce object Information data set.</param>
            <param name="propertyName">The name of the property to inspect.</param>
            <param name="result">The translation result.</param>
            <returns><c>True</c> if the property should be translated, otherwise false.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.TranslateEntityToSkuRequest">
            <summary>
            Request used to translate an CommerceConnect CommerceStockInventory entity into a CommerceServer InventorySku.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.TranslateEntityToSkuResult">
            <summary>
            Result returned by a TranslateEntityToSkuRequest.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.SaveCatalogObject">
            <summary>
            Pipeline processor that commits Commerce inventory / catalog changes.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.SaveCatalogObject.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified args.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.SaveCatalogObject.GetCatalogObject(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Gets the updated catalog object from the pipeline arguments.
            </summary>
            <param name="args">The pipeline arguments.</param>
            <returns>The updated catalog object.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.SaveCatalogObject.CommitChanges(CommerceServer.Core.Catalog.CatalogObjectBase)">
            <summary>
            Commits changes to a Commerce inventory / catalog object after translation from CommerceConnect to Commerce.
            </summary>
            <param name="catalogObject">The translated catalog object to commit.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.TranslateEntityToInventory`4">
            <summary>
            Base processor that translates an CommerceConnect entity into a Commerce inventory object.
            </summary>
            <typeparam name="TRequest">The pipeline service request type.</typeparam>
            <typeparam name="TResult">The pipeline service result type.</typeparam>
            <typeparam name="TCommerceConnect">The CommerceConnect entity type.</typeparam>
            <typeparam name="TCommerce">The Commerce inventory object type.</typeparam>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.TranslateEntityToInventory`4.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified args.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.TranslateEntityToInventory`4.Translate(`2,`3,`1)">
            <summary>
            Translates a Commerce object into an CommerceConnect entity.
            </summary>
            <param name="source">The source CommerceConnect entity.</param>
            <param name="destination">The destination Commerce object.</param>
            <param name="result">The translation result.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.TranslateEntityToInventory`4.PopulateResult(`3,`1)">
            <summary>
            Populates the current result with the translated Commerce object.
            </summary>
            <param name="translatedObject">The translated Commerce object.</param>
            <param name="result">The translation result.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.TranslateEntityToInventory`4.TranslateProperty(System.String,System.Object)">
            <summary>
            Translates a Commerce object property value to the correct CommerceConnect entity value.
            </summary>
            <param name="propertyName">The name of the property to translate.</param>
            <param name="propertyValue">The value of the property to translate.</param>
            <returns>The translated CommerceConnect entity value.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.TranslateEntityToInventory`4.ShouldTranslateProperty(`2,System.Data.DataRow,System.String,`1)">
            <summary>
            Determines if a property should be translated.
            </summary>
            <param name="source">The source CommerceConnect entity.</param>
            <param name="destinationRow">The destination table row from the Commerce object Information data set.</param>
            <param name="propertyName">The name of the property to inspect.</param>
            <param name="result">The translation result.</param>
            <returns><c>True</c> if the property should be translated, otherwise false.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.TranslateEntityToInventory`4.ShouldTranslateTable(System.Data.DataTable)">
            <summary>
            Determines if a data table in the Information DataSet should be translated.
            </summary>
            <param name="table">The table to examine.</param>
            <returns><c>True</c> if the table should be processed, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.TranslateEntityToInventory`4.GetTranslateDestination(`0)">
            <summary>
            Gets the destination Commerce object.
            </summary>
            <param name="request">The translation request.</param>
            <returns>the destination Commerce object.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.TranslateEntityToInventory`4.GetTranslateSource(`0)">
            <summary>
            Gets the source CommerceConnect entity from the current request.
            </summary>
            <param name="request">The translation request.</param>
            <returns>The source CommerceConnect entity.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.TranslateEntityToInventory`4.GetDestinationInformation(`3)">
            <summary>
            Gets the Information DataSet from the destination Commerce object.
            </summary>
            <param name="destination">The destination Commerce object.</param>
            <returns>The Information DataSet.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.TranslateInventoryCatalogToEntity">
            <summary>
            Pipeline processor that translates a Commerce <see cref="T:CommerceServer.Core.Inventory.InventoryCatalog"/> into an CommerceConnect <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Models.CommerceStockLocation"/> entity.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.TranslateInventoryCatalogToEntity.#ctor(Sitecore.Commerce.Entities.IEntityFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.TranslateInventoryCatalogToEntity"/> class.
            </summary>
            <param name="entityFactory">The entity factory.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.TranslateInventoryCatalogToEntity.Translate(Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.TranslateInventoryCatalogToEntityRequest,CommerceServer.Core.Inventory.InventoryCatalog,Sitecore.Commerce.Connect.CommerceServer.Inventory.Models.CommerceStockLocation)">
            <summary>
            Translates a CommerceServer inventoryCatalog to a specific CommerceConnect commerceStockLocation
            </summary>
            <param name="request">The request.</param>
            <param name="source">The CommerceServer inventoryCatalog</param>
            <param name="destination">The CommerceConnect commerceStockLocation to copy to</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.TranslateInventoryCatalogToEntity.ShouldTranslateProperty(Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.TranslateInventoryCatalogToEntityRequest,CommerceServer.Core.Inventory.InventoryCatalog,Sitecore.Commerce.Connect.CommerceServer.Inventory.Models.CommerceStockLocation,System.String)">
            <summary>
            Determines if a property should be translated.
            </summary>
            <param name="request">The request.</param>
            <param name="source">The source Commerce object.</param>
            <param name="destination">The destination CommerceConnect entity.</param>
            <param name="propertyName">The name of the property to inspect.</param>
            <returns><c>True</c> if the property should be translated, otherwise false.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.TranslateInventoryCatalogToEntity.TranslateProperty(System.String,System.Object)">
            <summary>
            Translates a Commerce object property value to the correct CommerceConnect entity value.
            </summary>
            <param name="propertyName">The name of the property to translate.</param>
            <param name="propertyValue">The value of the property to translate.</param>
            <returns>The translated CommerceConnect entity value.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.TranslateSkuToEntityRequest">
            <summary>
            Request used to translate a CommerceServer InventorySku into an CommerceConnect CommerceStockInventory entity.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.TranslateSkuToEntityRequest.StockStatus">
            <summary>
            Gets or sets the product stock status.
            </summary>
            <value>
            The product stock status.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.TranslateSkuToEntityResult">
            <summary>
            Result returned by a TranslateSkuToEntityRequest.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.GetBackOrderableInformation">
            <summary>
            Defines the pipeline processor that gets product back-orderable stock information.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.GetBackOrderableInformation.#ctor(Sitecore.Commerce.Entities.IEntityFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.GetBackOrderableInformation"/> class.
            </summary>
            <param name="entityFactory">The entity factory.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.GetBackOrderableInformation.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified args.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.GetBackOrderableInformation.PopulateStockInformation(Sitecore.Commerce.Connect.CommerceServer.Inventory.Models.CommerceInventoryProduct,Sitecore.Commerce.Services.ServiceProviderRequest,Sitecore.Commerce.Services.ServiceProviderResult)">
            <summary>
            Populates an CommerceConnect <see cref="T:Sitecore.Commerce.Entities.Entity"/> entity based on a CommerceServer <see cref="T:CommerceServer.Core.Catalog.Product"/> and <see cref="T:CommerceServer.Core.Inventory.InventorySku"/> models.
            </summary>
            <param name="inventoryProduct">The inventory product.</param>
            <param name="request">The request.</param>
            <param name="result">The current result object.</param>
            <returns>The Entity</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.GetInventoryInformationBase">
            <summary>
            Defines the base pipeline processor that gets product inventory information.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.GetInventoryInformationBase.#ctor(Sitecore.Commerce.Entities.IEntityFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.GetInventoryInformationBase"/> class.
            </summary>
            <param name="entityFactory">The entity factory.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.GetInventoryInformationBase.PopulateStockInformation(Sitecore.Commerce.Connect.CommerceServer.Inventory.Models.CommerceInventoryProduct,Sitecore.Commerce.Services.ServiceProviderRequest,Sitecore.Commerce.Services.ServiceProviderResult)">
            <summary>
            Populates an CommerceConnect <see cref="T:Sitecore.Commerce.Entities.Inventory.OrderableInformation"/> entity based on a CommerceServer <see cref="T:CommerceServer.Core.Catalog.Product"/> and <see cref="T:CommerceServer.Core.Inventory.InventorySku"/> models.
            </summary>
            <param name="inventoryProduct">The inventory product.</param>
            <param name="request">The request.</param>
            <param name="result">The current result object.</param>
            <returns>The Entity</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.GetInventoryInformationBase.AddProductExtraInformation(Sitecore.Commerce.Entities.Entity,CommerceServer.Core.Catalog.Product,Sitecore.Commerce.Services.ServiceProviderRequest)">
            <summary>
            Populates extra information into the CommerceConnect <see cref="T:Sitecore.Commerce.Entities.Inventory.OrderableInformation"/> entity based on a CommerceServer <see cref="T:CommerceServer.Core.Catalog.Product"/> models.
            </summary>
            <param name="entity">The CommerceConnect <see cref="T:Sitecore.Commerce.Entities.Entity"/> entity to be updated.</param>
            <param name="product">The CommerceServer <see cref="T:CommerceServer.Core.Catalog.Product"/>.</param>
            <param name="request">The request.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.GetInventoryInformationBase.AddSkuExtraInformation(Sitecore.Commerce.Entities.Entity,CommerceServer.Core.Inventory.InventorySku,Sitecore.Commerce.Services.ServiceProviderRequest)">
            <summary>
            Populates extra information into the CommerceConnect <see cref="T:Sitecore.Commerce.Entities.Inventory.OrderableInformation"/> entity based on a CommerceServer <see cref="T:CommerceServer.Core.Inventory.InventorySku"/> models.
            </summary>
            <param name="entity">The CommerceConnect <see cref="T:Sitecore.Commerce.Entities.Entity"/> entity to be updated.</param>
            <param name="inventorySku">The CommerceServer <see cref="T:CommerceServer.Core.Inventory.InventorySku"/>.</param>
            <param name="request">The request.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.GetPreOrderableInformation">
            <summary>
            Defines the pipeline processor that gets product pre-orderable stock information.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.GetPreOrderableInformation.#ctor(Sitecore.Commerce.Entities.IEntityFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.GetPreOrderableInformation"/> class.
            </summary>
            <param name="entityFactory">The entity factory.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.GetPreOrderableInformation.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified args.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.GetPreOrderableInformation.PopulateStockInformation(Sitecore.Commerce.Connect.CommerceServer.Inventory.Models.CommerceInventoryProduct,Sitecore.Commerce.Services.ServiceProviderRequest,Sitecore.Commerce.Services.ServiceProviderResult)">
            <summary>
            Populates an CommerceConnect <see cref="T:Sitecore.Commerce.Entities.Entity"/> entity based on a CommerceServer <see cref="T:CommerceServer.Core.Catalog.Product"/> and <see cref="T:CommerceServer.Core.Inventory.InventorySku"/> models.
            </summary>
            <param name="inventoryProduct">The inventory product.</param>
            <param name="request">The request.</param>
            <param name="result">The current result object.</param>
            <returns>The Entity</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.GetStockInformation">
            <summary>
            Defines the GetStockInformation pipeline processor.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.GetStockInformation.#ctor(Sitecore.Commerce.Entities.IEntityFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.GetStockInformation"/> class.
            </summary>
            <param name="entityFactory">The entity factory.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.GetStockInformation.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.GetStockInformation.PopulateStockInformation(Sitecore.Commerce.Connect.CommerceServer.Inventory.Models.CommerceInventoryProduct,Sitecore.Commerce.Services.ServiceProviderRequest,Sitecore.Commerce.Services.ServiceProviderResult)">
            <summary>
            Populates an CommerceConnect <see cref="T:Sitecore.Commerce.Entities.Entity"/> entity based on a CommerceServer <see cref="T:CommerceServer.Core.Catalog.Product"/> and <see cref="T:CommerceServer.Core.Inventory.InventorySku"/> models.
            </summary>
            <param name="inventoryProduct">The inventory product.</param>
            <param name="request">The request.</param>
            <param name="result">The current result object.</param>
            <returns>the Entity</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.StockStatusForIndexing">
            <summary>
            Defines the pipeline processor that gets product stock status for indexing.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.StockStatusForIndexing.#ctor(Sitecore.Commerce.Entities.IEntityFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.StockStatusForIndexing"/> class.
            </summary>
            <param name="entityFactory">The entity factory.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.StockStatusForIndexing.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified args.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.StockStatusForIndexing.PopulateStockInformation(Sitecore.Commerce.Connect.CommerceServer.Inventory.Models.CommerceInventoryProduct,Sitecore.Commerce.Services.ServiceProviderRequest,Sitecore.Commerce.Services.ServiceProviderResult)">
            <summary>
            Populates an CommerceConnect <see cref="T:Sitecore.Commerce.Entities.Inventory.IndexStockInformation"/> entity based on a CommerceServer <see cref="T:CommerceServer.Core.Catalog.Product"/> and <see cref="T:CommerceServer.Core.Inventory.InventorySku"/> models.
            </summary>
            <param name="inventoryProduct">The inventory product.</param>
            <param name="request">The request.</param>
            <param name="result">The current result object.</param>
            <returns>The CommerceConnect <see cref="T:Sitecore.Commerce.Entities.Entity"/>.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.StockStatusForIndexing.GetLocationsForProduct(CommerceServer.Core.Catalog.Product)">
            <summary>
            Gets the list of locations where a product is available.
            </summary>
            <param name="product">The product.</param>
            <returns>The list of locations where a product is available.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.StockStatusForIndexing.GetSkusForProduct(CommerceServer.Core.Catalog.Product,System.String)">
            <summary>
            Gets the inventory skus for the provided <see cref="T:CommerceServer.Core.Catalog.Product"/>, and all variants associated with the product.
            </summary>
            <param name="product">The <see cref="T:CommerceServer.Core.Catalog.Product"/> object.</param>
            <param name="location">The inventory location.</param>
            <returns>The inventory skus for the provided <see cref="T:CommerceServer.Core.Catalog.Product"/>, and all variants associated with the product.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.StockStatusForIndexing.IsAnyPreOrderable(System.Collections.Generic.List{CommerceServer.Core.Inventory.InventorySku})">
            <summary>
            Checks if any inventory sku is pre-orderable.
            </summary>
            <param name="allSkus">All inventory skus related to a product.</param>
            <returns>True if the any is pre-orderable, otherwise false.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.StockStatusForIndexing.IsAnyBackOrderable(System.Collections.Generic.List{CommerceServer.Core.Inventory.InventorySku})">
            <summary>
            Checks if any inventory sku is back-orderable.
            </summary>
            <param name="allSkus">All inventory skus related to a product.</param>
            <returns>True if the any is back-orderable, otherwise false.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.StockStatusForIndexing.IsAnyInStock(System.Collections.Generic.List{CommerceServer.Core.Inventory.InventorySku})">
            <summary>
            Checks if any inventory sku has an item in-stock.
            </summary>
            <param name="allSkus">All inventory skus related to a product.</param>
            <returns>True if the any is in-stock, otherwise false.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.TranslateInventoryToEntity`4">
            <summary>
            Base processor that translates a Commerce inventory object into an CommerceConnect entity.
            </summary>
            <typeparam name="TRequest">The pipeline service request type.</typeparam>
            <typeparam name="TResult">The pipeline service result type.</typeparam>
            <typeparam name="TCommerce">The Commerce inventory object type.</typeparam>
            <typeparam name="TCommerceConnect">The CommerceConnect entity type.</typeparam>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.TranslateInventoryToEntity`4.#ctor(Sitecore.Commerce.Entities.IEntityFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.TranslateInventoryToEntity`4"/> class.
            </summary>
            <param name="entityFactory">The entity factory.</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.TranslateInventoryToEntity`4.EntityFactory">
            <summary>
            Gets the entity factory.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.TranslateInventoryToEntity`4.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified args.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.TranslateInventoryToEntity`4.Translate(`0,`2,`3)">
            <summary>
            Translates a Commerce object into an CommerceConnect entity.
            </summary>
            <param name="request">The request.</param>
            <param name="source">The source Commerce object.</param>
            <param name="destination">The destination CommerceConnect entity.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.TranslateInventoryToEntity`4.PopulateResult(`1,`3)">
            <summary>
            Populates a result with the translated CommerceConnect entity.
            </summary>
            <param name="result">The result.</param>
            <param name="translatedEntity">The translated CommerceConnect entity.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.TranslateInventoryToEntity`4.TranslateProperty(System.String,System.Object)">
            <summary>
            Translates a Commerce object property value to the correct CommerceConnect entity value.
            </summary>
            <param name="propertyName">The name of the property to translate.</param>
            <param name="propertyValue">The value of the property to translate.</param>
            <returns>The translated CommerceConnect entity value.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.TranslateInventoryToEntity`4.ShouldTranslateProperty(`0,`2,`3,System.String)">
            <summary>
            Determines if a property should be translated.
            </summary>
            <param name="request">The request.</param>
            <param name="source">The source Commerce object.</param>
            <param name="destination">The destination CommerceConnect entity.</param>
            <param name="propertyName">The name of the property to inspect.</param>
            <returns><c>True</c> if the property should be translated, otherwise false.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.TranslateInventoryToEntity`4.ShouldTranslateTable(`0,System.Data.DataTable)">
            <summary>
            Determines if a data table in the Information DataSet should be translated.
            </summary>
            <param name="request">The request.</param>
            <param name="table">The table to examine.</param>
            <returns><c>True</c> if the table should be processed, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.TranslateInventoryToEntity`4.GetTranslateDestination(`0)">
            <summary>
            Gets the destination CommerceConnect entity.
            </summary>
            <param name="request">The request.</param>
            <returns>the destination CommerceConnect entity.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.TranslateInventoryToEntity`4.GetTranslateSource(`0)">
            <summary>
            Gets the source Commerce object from a request.
            </summary>
            <param name="request">The request.</param>
            <returns>The source Commerce object.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.TranslateInventoryToEntity`4.GetSourceInformation(`2)">
            <summary>
            Gets the Information DataSet from the source Commerce object.
            </summary>
            <param name="source">The source Commerce object.</param>
            <returns>The Information DataSet.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.TranslateSkuToEntity">
            <summary>
            Pipeline processor to translate from a CommerceServer InventorySku object to an CommerceConnect CommerceStockInformation entity.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.TranslateSkuToEntity.#ctor(Sitecore.Commerce.Entities.IEntityFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.TranslateSkuToEntity"/> class.
            </summary>
            <param name="entityFactory">The entity factory.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.TranslateSkuToEntity.Translate(Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.TranslateSkuToEntityRequest,CommerceServer.Core.Inventory.InventorySku,Sitecore.Commerce.Connect.CommerceServer.Inventory.Models.CommerceStockInformation)">
            <summary>
            Translates a CommerceServer inventorySku to a specific CommerceConnect commerceStockInformation
            </summary>
            <param name="request">The request.</param>
            <param name="source">The CommerceServer inventorySku</param>
            <param name="destination">The CommerceConnect commerceStockInformation to copy to</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.TranslateSkuToEntity.ShouldTranslateProperty(Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.TranslateSkuToEntityRequest,CommerceServer.Core.Inventory.InventorySku,Sitecore.Commerce.Connect.CommerceServer.Inventory.Models.CommerceStockInformation,System.String)">
            <summary>
            Determines if a property should be translated.
            </summary>s
            <param name="request">The request.</param>
            <param name="source">The source Commerce object.</param>
            <param name="destination">The destination CommerceConnect entity.</param>
            <param name="propertyName">The name of the property to inspect.</param>
            <returns><c>True</c> if the property should be translated, otherwise false.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.TranslateSkuToEntity.GetTranslateDestination(Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.TranslateSkuToEntityRequest)">
            <summary>
            Gets the destination CommerceConnect entity.
            </summary>
            <param name="request">The request.</param>
            <returns>the destination CommerceConnect entity.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.UpdateStockLocation">
            <summary>
            Pipeline processor that updates a stock location entity.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.UpdateStockLocation.#ctor(Sitecore.Commerce.Entities.EntityFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.UpdateStockLocation"/> class.
            </summary>
            <param name="entityFactory">The entity factory.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.UpdateStockLocation.Process(Sitecore.Commerce.Pipelines.ServicePipelineArgs)">
            <summary>
            Processes the specified arguments.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.CommerceInventoryAutomationProvider">
            <summary>
            Helper class for commerce-integrated inventory automation rules and conditions
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.CommerceInventoryAutomationProvider.GetProductNotifications(Sitecore.Analytics.Automation.Data.AutomationStateContext)">
            <summary>
            Retrieves the product back-in-stock notifaction requests from the EAP state.
            </summary>
            <param name="stateContext">The EAP state.</param>
            <returns>The back-in-stock notification requests in the EAP state.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.CommerceInventoryAutomationProvider.GetExpiredNotifications(Sitecore.Analytics.Automation.Data.AutomationStateContext)">
            <summary>
            Retrieves expired back-in-stock notifaction requests from the EAP state.
            </summary>
            <param name="stateContext">The EAP state.</param>
            <returns>The expired back-in-stock notification requests in the EAP state.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.CommerceInventoryAutomationProvider.GetProductsBackInStock(Sitecore.Analytics.Automation.Data.AutomationStateContext)">
            <summary>
            Retrieves new back-in-stock products from the EAP state
            </summary>
            <param name="stateContext">The EAP state.</param>
            <returns>The new back-in-stock products in the EAP state.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.CommerceInventoryAutomationProvider.GetStateData(Sitecore.Analytics.Automation.Data.AutomationStateContext,System.String)">
            <summary>
            Gets a list of <see cref="T:Sitecore.Commerce.Entities.Inventory.StockNotificationRequest"/> objects from an automation states row.
            </summary>
            <param name="stateContext">The automation state context.</param>
            <param name="dataName">The name of the notification list to retrieve.</param>
            <returns>A list of <see cref="T:Sitecore.Commerce.Entities.Inventory.StockNotificationRequest"/> objects.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Models.CommerceInventoryProduct">
            <summary>
            Used to represent a CommerceInventoryProduct in CommerceConnect
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Inventory.Models.CommerceInventoryProduct.CatalogName">
            <summary>
            Gets or sets the product catalog name in commerce server.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Inventory.Models.CommerceInventoryProduct.VariantId">
            <summary>
            Gets or sets the unique identifier for the product variant in commerce server.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Models.CommerceInventorySearchOptions">
            <summary>
            Entity that represents common search options in the Commerce system.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Models.CommerceInventorySearchOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Models.CommerceInventorySearchOptions"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Inventory.Models.CommerceInventorySearchOptions.PropertiesToReturn">
            <summary>
            Gets or sets the list of properties that should be returned.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Inventory.Models.CommerceInventorySearchOptions.RecordsToRetrieve">
            <summary>
            Gets or sets the maximum number of items to retrieve.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Inventory.Models.CommerceInventorySearchOptions.SortDescending">
            <summary>
            Gets or sets a value indicating whether the results should be sorted in descending order.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Inventory.Models.CommerceInventorySearchOptions.SortProperty">
            <summary>
            Gets or sets the sort property.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Inventory.Models.CommerceInventorySearchOptions.StartingRecord">
            <summary>
            Gets or sets the number of the first record to retrieve.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Models.CommerceStockInformation">
            <summary>
            Used to represent a CommerceStockInformation in CommerceConnect
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Inventory.Models.CommerceStockInformation.InventoryCatalogName">
            <summary>
            Gets or sets the inventory catalog name.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Inventory.Models.CommerceStockInformation.ProductCatalogName">
            <summary>
            Gets or sets the product catalog name.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Inventory.Models.CommerceStockInformation.ProductId">
            <summary>
            Gets or sets the inventory sku id.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Inventory.Models.CommerceStockInformation.VariantId">
            <summary>
            Gets or sets the inventory sku variant id.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Inventory.Models.CommerceStockInformation.InventoryStatus">
            <summary>
            Gets or sets the inventory status.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Inventory.Models.CommerceStockInformation.OnHandQuantity">
            <summary>
            Gets or sets the inventory on hand quantity.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Inventory.Models.CommerceStockInformation.ExcessOnHandQuantity">
            <summary>
            Gets or sets the inventory excess on hand quantity.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Inventory.Models.CommerceStockInformation.ReorderPoint">
            <summary>
            Gets or sets the inventory reorder point.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Inventory.Models.CommerceStockInformation.TargetQuantity">
            <summary>
            Gets or sets the inventory target quantity.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Inventory.Models.CommerceStockInformation.StockOutThreshold">
            <summary>
            Gets or sets the inventory stock out threshold.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Inventory.Models.CommerceStockInformation.LastRestocked">
            <summary>
            Gets or sets the inventory last restocked date.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Inventory.Models.CommerceStockInformation.UnitOfMeasure">
            <summary>
            Gets or sets the inventory unit of measure.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Inventory.Models.CommerceStockInformation.Memo">
            <summary>
            Gets or sets the inventory memo.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Inventory.Models.CommerceStockInformation.LastModified">
            <summary>
            Gets or sets the inventory sku last modified date.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Models.CommerceStockInformation.DecimalPropertyToLong(System.String)">
            <summary>
            Forcing the decimals to be longs for inventory
            </summary>
            <param name="key">property key name</param>
            <returns>the value or null</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.Models.CommerceStockInformation.LongToPropertyDecimal(System.Nullable{System.Int64})">
            <summary>
            Convert the longs back to decimals for inventory
            </summary>
            <param name="value">property key value</param>
            <returns>the value or null</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Models.CommerceStockLocation">
            <summary>
            The CommerceConnect entity that represents a Commmerce inventory catalog.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Inventory.Models.CommerceStockLocation.InventoryCatalogName">
            <summary>
            Gets or sets the inventory catalog name.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Inventory.Models.CommerceStockLocation.InventoryCatalogDescription">
            <summary>
            Gets or sets the inventory catalog description.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Inventory.Models.CommerceStockLocation.DateCreated">
            <summary>
            Gets or sets the date the inventory catalog was created.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Inventory.Models.CommerceStockLocation.LastModified">
            <summary>
            Gets or sets the date the inventory catalog was last modified.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Inventory.Models.CommerceStockLocation.AssociatedProductCatalogs">
            <summary>
            Gets or sets the list of associated product catalogs.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.CommerceInventoryServiceProvider">
            <summary>
            Represents the interaction with the commerce inventory service.
            Service providers are wrapper objects that ease the interaction with the implementation pipelines. The providers only implement the calling pipelines. 
            All the business logic is implemented in the pipeline processors.
            The CommerceInventoryServiceProvider class implements the CommerceConnect InventoryServiceProvider class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.CommerceInventoryServiceProvider.CreateStockInformation(Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.CreateStockInformationRequest)">
            <summary>
            Creates stock information for a product.
            </summary>
            <param name="request">The service request.</param>
            <returns>The service response.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.CommerceInventoryServiceProvider.DeleteStockInformation(Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.DeleteStockInformationRequest)">
            <summary>
            Deletes stock information for a product.
            </summary>
            <param name="request">The service request.</param>
            <returns>The service response.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.CommerceInventoryServiceProvider.UpdateStockInformation(Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.UpdateStockInformationRequest)">
            <summary>
            Updates stock information for a product.
            </summary>
            <param name="request">The service request.</param>
            <returns>The service response.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.CommerceInventoryServiceProvider.SearchStockInformation(Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.SearchStockInformationRequest)">
            <summary>
            Retrieves stock information for skus.
            </summary>
            <param name="request">The service request.</param>
            <returns>The service response.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.CommerceInventoryServiceProvider.CreateStockLocation(Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.CreateStockLocationRequest)">
            <summary>
            Creates an CommerceConnect stock location entity.
            </summary>
            <param name="request">The service request.</param>
            <returns>The service response.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.CommerceInventoryServiceProvider.UpdateStockLocation(Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.UpdateStockLocationRequest)">
            <summary>
            Updates an CommerceConnect stock location entity.
            </summary>
            <param name="request">The service request.</param>
            <returns>The service response.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.CommerceInventoryServiceProvider.GetStockLocation(Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.GetStockLocationRequest)">
            <summary>
            Retrieves an CommerceConnect stock location entity.
            </summary>
            <param name="request">The service request.</param>
            <returns>The service response.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.CommerceInventoryServiceProvider.SearchStockLocations(Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.SearchStockLocationsRequest)">
            <summary>
            Retrieves an CommerceConnect stock location entity.
            </summary>
            <param name="request">The service request.</param>
            <returns>The service response.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.CommerceInventoryServiceProvider.DeleteStockLocation(Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.DeleteStockLocationRequest)">
            <summary>
            Deletes an CommerceConnect stock location entity.
            </summary>
            <param name="request">The service request.</param>
            <returns>The service response.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.CommerceInventoryServiceProvider.GetUnassociatedProductCatalogs(Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.GetUnassociatedProductCatalogsRequest)">
            <summary>
            Gets unassociated product catalogs.
            </summary>
            <param name="request">The service request.</param>
            <returns>The service response.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.CommerceInventoryServiceProvider.GetAssociatedStockLocation(Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.GetAssociatedStockLocationRequest)">
            <summary>
            Gets associated stock location.
            </summary>
            <param name="request">The service request.</param>
            <returns>The service response.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.CommerceInventoryServiceProvider.PurgeDeletedItems(Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.PurgeDeletedItemsRequest)">
            <summary>
            Purges deleted commerce inventory skus.
            </summary>
            <param name="request">The service request.</param>
            <returns>The service response.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.CommerceInventoryServiceProvider.AssociateLocation(Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.AssociateLocationRequest)">
            <summary>
            Associates a product catalog to a location.
            </summary>
            <param name="request">The service request.</param>
            <returns>The service response.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.CommerceInventoryServiceProvider.DisassociateLocation(Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.DisassociateLocationRequest)">
            <summary>
            Disassociates a product catalog to a location.
            </summary>
            <param name="request">The service request.</param>
            <returns>The service response.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.GenericCommerceInventoryServiceProviderExtensions">
            <summary>
            Extends the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.CommerceInventoryServiceProvider"/> class with some generic methods.
            It allows you to specify the result type of a custom service call.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.GenericCommerceInventoryServiceProviderExtensions.CreateStockInformation``2(Sitecore.Commerce.Connect.CommerceServer.Inventory.CommerceInventoryServiceProvider,``0)">
            <summary>
            Creates stock information for a product. It calls the CreateStockInformation pipeline.
            </summary>
            <typeparam name="TCreateStockInformationRequest">The extended type of the  <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.CreateStockInformationRequest" />class.</typeparam>
            <typeparam name="TCreateStockInformationResult">The extended type of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.CreateStockInformationResult" />class.</typeparam>
            <param name="commerceInventoryProvider">A <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.CommerceInventoryServiceProvider"/> object.</param>
            <param name="request">The <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.CreateStockInformationRequest" /> Contains the search criteria.</param>
            <returns>The extended <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.CreateStockInformationResult" />.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.GenericCommerceInventoryServiceProviderExtensions.DeleteStockInformation``2(Sitecore.Commerce.Connect.CommerceServer.Inventory.CommerceInventoryServiceProvider,``0)">
            <summary>
            Deletes stock information for a product. It calls the DeleteStockInformation pipeline.
            </summary>
            <typeparam name="TDeleteStockInformationRequest">The extended type of the  <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.DeleteStockInformationRequest" />class.</typeparam>
            <typeparam name="TDeleteStockInformationResult">The extended type of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.DeleteStockInformationResult" />class.</typeparam>
            <param name="commerceInventoryProvider">A <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.CommerceInventoryServiceProvider"/> object.</param>
            <param name="request">The <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.DeleteStockInformationRequest" /> Contains the search criteria.</param>
            <returns>The extended <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.DeleteStockInformationResult" />.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.GenericCommerceInventoryServiceProviderExtensions.UpdateStockInformation``2(Sitecore.Commerce.Connect.CommerceServer.Inventory.CommerceInventoryServiceProvider,``0)">
            <summary>
            Updates stock information for a product. It calls the UpdateStockInformation pipeline.
            </summary>
            <typeparam name="TUpdateStockInformationRequest">The extended type of the  <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.UpdateStockInformationRequest" />class.</typeparam>
            <typeparam name="TUpdateStockInformationResult">The extended type of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.UpdateStockInformationResult" />class.</typeparam>
            <param name="commerceInventoryProvider">A <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.CommerceInventoryServiceProvider"/> object.</param>
            <param name="request">The <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.UpdateStockInformationRequest" /> Contains the search criteria.</param>
            <returns>The extended <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.UpdateStockInformationResult" />.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.GenericCommerceInventoryServiceProviderExtensions.SearchStockInformation``2(Sitecore.Commerce.Connect.CommerceServer.Inventory.CommerceInventoryServiceProvider,``0)">
            <summary>
            Retrieves CommerceConnect commerce stock information entities. It calls the SearchStockInformation pipeline.
            </summary>
            <typeparam name="TSearchStockInformationRequest">The extended type of the  <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.SearchStockInformationRequest" />class.</typeparam>
            <typeparam name="TSearchStockInformationResult">The extended type of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.SearchStockInformationResult" />class.</typeparam>
            <param name="commerceInventoryProvider">A <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.CommerceInventoryServiceProvider"/> object.</param>
            <param name="request">The <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.SearchStockInformationRequest" /> Contains the search criteria.</param>
            <returns>The extended <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.SearchStockInformationResult" />.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.GenericCommerceInventoryServiceProviderExtensions.CreateStockLocation``2(Sitecore.Commerce.Connect.CommerceServer.Inventory.CommerceInventoryServiceProvider,``0)">
            <summary>
            Creates an CommerceConnect stock location entity. It calls the CreateStockLocation pipeline.
            </summary>
            <typeparam name="TCreateStockLocationRequest">The extended type of the  <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.CreateStockLocationRequest" />class.</typeparam>
            <typeparam name="TCreateStockLocationResult">The extended type of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.CreateStockLocationResult" />class.</typeparam>
            <param name="commerceInventoryProvider">A <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.CommerceInventoryServiceProvider"/> object.</param>
            <param name="request">The <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.CreateStockLocationRequest" /> Contains the search criteria.</param>
            <returns>The extended <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.CreateStockLocationResult" />.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.GenericCommerceInventoryServiceProviderExtensions.UpdateStockLocation``2(Sitecore.Commerce.Connect.CommerceServer.Inventory.CommerceInventoryServiceProvider,``0)">
            <summary>
            Updates an CommerceConnect stock location entity. It calls the UpdateStockLocation pipeline.
            </summary>
            <typeparam name="TUpdateStockLocationRequest">The extended type of the  <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.UpdateStockLocationRequest" />class.</typeparam>
            <typeparam name="TUpdateStockLocationResult">The extended type of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.UpdateStockLocationResult" />class.</typeparam>
            <param name="commerceInventoryProvider">A <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.CommerceInventoryServiceProvider"/> object.</param>
            <param name="request">The <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.UpdateStockLocationRequest" /> Contains the search criteria.</param>
            <returns>The extended <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.UpdateStockLocationResult" />.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.GenericCommerceInventoryServiceProviderExtensions.DeleteStockLocation``2(Sitecore.Commerce.Connect.CommerceServer.Inventory.CommerceInventoryServiceProvider,``0)">
            <summary>
            Deletes an CommerceConnect stock location entities. It calls the DeleteStockLocation pipeline.
            </summary>
            <typeparam name="TDeleteStockLocationRequest">The extended type of the  <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.DeleteStockLocationRequest" />class.</typeparam>
            <typeparam name="TDeleteStockLocationResult">The extended type of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.DeleteStockLocationResult" />class.</typeparam>
            <param name="commerceInventoryProvider">A <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.CommerceInventoryServiceProvider"/> object.</param>
            <param name="request">The <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.DeleteStockLocationRequest" /> Contains the search criteria.</param>
            <returns>The extended <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.DeleteStockLocationResult" />.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.GenericCommerceInventoryServiceProviderExtensions.GetStockLocation``2(Sitecore.Commerce.Connect.CommerceServer.Inventory.CommerceInventoryServiceProvider,``0)">
            <summary>
            Retrieves an CommerceConnect stock location entity. It calls the GetStockLocation pipeline.
            </summary>
            <typeparam name="TGetStockLocationRequest">The extended type of the  <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.GetStockLocationRequest" />class.</typeparam>
            <typeparam name="TGetStockLocationResult">The extended type of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.GetStockLocationResult" />class.</typeparam>
            <param name="commerceInventoryProvider">A <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.CommerceInventoryServiceProvider"/> object.</param>
            <param name="request">The <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.GetStockLocationRequest" /> Contains the search criteria.</param>
            <returns>The extended <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.GetStockLocationResult" />.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.GenericCommerceInventoryServiceProviderExtensions.SearchStockLocations``2(Sitecore.Commerce.Connect.CommerceServer.Inventory.CommerceInventoryServiceProvider,``0)">
            <summary>
            Retrieves CommerceConnect stock location entities. It calls the SearchStockLocations pipeline.
            </summary>
            <typeparam name="TSearchStockLocationsRequest">The extended type of the  <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.SearchStockLocationsRequest" />class.</typeparam>
            <typeparam name="TSearchStockLocationsResult">The extended type of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.SearchStockLocationsResult" />class.</typeparam>
            <param name="commerceInventoryProvider">A <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.CommerceInventoryServiceProvider"/> object.</param>
            <param name="request">The <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.SearchStockLocationsRequest" /> Contains the search criteria.</param>
            <returns>The extended <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.SearchStockLocationsResult" />.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.GenericCommerceInventoryServiceProviderExtensions.GetUnassociatedProductCatalogs``2(Sitecore.Commerce.Connect.CommerceServer.Inventory.CommerceInventoryServiceProvider,``0)">
            <summary>
            Gets unassociated product catalogs. It calls the GetUnassociatedProductCatalogs pipeline.
            </summary>
            <typeparam name="TGetUnassociatedProductCatalogsRequest">The extended type of the  <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.GetUnassociatedProductCatalogsRequest" />class.</typeparam>
            <typeparam name="TGetUnassociatedProductCatalogsResult">The extended type of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.GetUnassociatedProductCatalogsResult" />class.</typeparam>
            <param name="commerceInventoryProvider">A <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.CommerceInventoryServiceProvider"/> object.</param>
            <param name="request">The <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.GetUnassociatedProductCatalogsRequest" /> Contains the search criteria.</param>
            <returns>The extended <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.GetUnassociatedProductCatalogsResult" />.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.GenericCommerceInventoryServiceProviderExtensions.GetAssociatedStockLocation``2(Sitecore.Commerce.Connect.CommerceServer.Inventory.CommerceInventoryServiceProvider,``0)">
            <summary>
            Gets associated stock location. It calls the GetAssociatedStockLocation pipeline.
            </summary>
            <typeparam name="TGetAssociatedStockLocationRequest">The extended type of the  <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.GetAssociatedStockLocationRequest" />class.</typeparam>
            <typeparam name="TGetAssociatedStockLocationResult">The extended type of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.GetAssociatedStockLocationResult" />class.</typeparam>
            <param name="commerceInventoryProvider">A <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.CommerceInventoryServiceProvider"/> object.</param>
            <param name="request">The <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.GetAssociatedStockLocationRequest" /> Contains the search criteria.</param>
            <returns>The extended <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.GetAssociatedStockLocationResult" />.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.GenericCommerceInventoryServiceProviderExtensions.PurgeDeletedItems``2(Sitecore.Commerce.Connect.CommerceServer.Inventory.CommerceInventoryServiceProvider,``0)">
            <summary>
            Purges deleted items. It calls the PurgeDeletedItems pipeline.
            </summary>
            <typeparam name="TPurgeDeletedItemsRequest">The extended type of the  <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.PurgeDeletedItemsRequest" />class.</typeparam>
            <typeparam name="TPurgeDeletedItemsResult">The extended type of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.PurgeDeletedItemsResult" />class.</typeparam>
            <param name="commerceInventoryProvider">A <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.CommerceInventoryServiceProvider"/> object.</param>
            <param name="request">The <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.PurgeDeletedItemsRequest" /> Contains the search criteria.</param>
            <returns>The extended <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.PurgeDeletedItemsResult" />.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.GenericCommerceInventoryServiceProviderExtensions.AssociateLocation``2(Sitecore.Commerce.Connect.CommerceServer.Inventory.CommerceInventoryServiceProvider,``0)">
            <summary>
            Associates a product catalog to a location. It calls the AssociateLocation pipeline.
            </summary>
            <typeparam name="TAssociateLocationRequest">The extended type of the  <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.AssociateLocationRequest" />class.</typeparam>
            <typeparam name="TAssociateLocationResult">The extended type of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.AssociateLocationResult" />class.</typeparam>
            <param name="commerceInventoryProvider">A <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.CommerceInventoryServiceProvider"/> object.</param>
            <param name="request">The <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.AssociateLocationRequest" /> Contains the search criteria.</param>
            <returns>The extended <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.AssociateLocationResult" />.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.GenericCommerceInventoryServiceProviderExtensions.DisassociateLocation``2(Sitecore.Commerce.Connect.CommerceServer.Inventory.CommerceInventoryServiceProvider,``0)">
            <summary>
            Disassociates a product catalog to a location. It calls the DisassociateLocation pipeline.
            </summary>
            <typeparam name="TDisassociateLocationRequest">The extended type of the  <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.DisassociateLocationRequest" />class.</typeparam>
            <typeparam name="TDisassociateLocationResult">The extended type of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.DisassociateLocationResult" />class.</typeparam>
            <param name="commerceInventoryProvider">A <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.CommerceInventoryServiceProvider"/> object.</param>
            <param name="request">The <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.DisassociateLocationRequest" /> Contains the search criteria.</param>
            <returns>The extended <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.Pipelines.DisassociateLocationResult" />.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.CommerceInventoryProductBuilder">
            <summary>
             Creates an inventory product builder.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.CommerceInventoryProductBuilder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.CommerceInventoryProductBuilder"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.CommerceInventoryProductBuilder.CreateInventoryProduct(System.String)">
            <summary>
            Creates an inventory product 
            </summary>
            <param name="productId">The product id</param>
            <returns>
            An inventory product
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.CommerceInventoryProductBuilder.AreProductsEqual(Sitecore.Commerce.Entities.Inventory.InventoryProduct,Sitecore.Commerce.Entities.Inventory.InventoryProduct)">
            <summary>
            Compares two 
            <see cref="T:Sitecore.Commerce.Entities.Inventory.InventoryProduct" /> objects for equality.
            </summary>
            <param name="x">The first object.</param>
            <param name="y">The second object.</param>
            <returns>
            True if the objects are equal, otherwise false.
            </returns>
            <exception cref="T:System.NotImplementedException">Temporary until inventory team fixes it.</exception>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.CommerceInventoryProductBuilder.GetProductHashCode(Sitecore.Commerce.Entities.Inventory.InventoryProduct)">
            <summary>
            Gets the hash code for a 
            <see cref="T:Sitecore.Commerce.Entities.Inventory.InventoryProduct" />.
            </summary>
            <param name="obj">The object to hash.</param>
            <returns>
            The hash code for the object.
            </returns>
            <exception cref="T:System.NotImplementedException">Temporary until inventory team fixes it.</exception>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.CommerceInventoryProductBuilder.ProductToString(Sitecore.Commerce.Entities.Inventory.InventoryProduct)">
            <summary>
            Converts a 
            <see cref="T:Sitecore.Commerce.Entities.Inventory.InventoryProduct" /> to a string.
            </summary>
            <param name="product">The object to convert.</param>
            <returns>
            The string version of the object
            </returns>
            <exception cref="T:System.NotImplementedException">Temporary until inventory team fixes it.</exception>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.InventoryRepository">
            <summary>
            Repository for CS inventory functionality.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.InventoryRepository.IsInventoryEnabled">
            <summary>
            Determines whether inventory is enabled in Commerce Server.
            </summary>
            <returns>
              <c>true</c> if inventory enabled; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.InventoryRepository.GetInventoryCatalogMetadata">
            <summary>
            Gets the inventory catalog metadata.
            </summary>
            <returns>CatalogPropertiesDataSet for Inventory Catalog Metadata.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.InventoryRepository.GetInventorySkuMetadata">
            <summary>
            Gets the inventory sku metadata.
            </summary>
            <returns>CatalogPropertiesDataSet for Inventory Sku Metadata.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.InventoryRepository.GetInventoryCatalogs(System.String,CommerceServer.Core.Catalog.SearchOptions,System.Int32@)">
            <summary>
            Gets the inventory catalogs.
            </summary>
            <param name="searchClause">The search clause to apply.</param>
            <param name="searchOptions">The search options to apply.</param>
            <param name="totalRecords">recieves the total number of records that matched the search criteria.</param>
            <returns>Commerce Server InventoryCatalogCollection.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.InventoryRepository.AssociatedInventoryCatalog(System.String,System.String)">
            <summary>
            Associated a product catalog to an inventory catalog.
            </summary>
            <param name="productCatalogName">Name of the product catalog.</param>
            <param name="inventoryCatalogName">Name of the inventory catalog.</param>
            <returns>Commerce Server Inventory Catalog.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.InventoryRepository.DisassociatedInventoryCatalog(System.String,System.String)">
            <summary>
            Disassociated a product catalog to an inventory catalog.
            </summary>
            <param name="productCatalogName">Name of the product catalog.</param>
            <param name="inventoryCatalogName">Name of the inventory catalog.</param>
            <returns>Commerce Server Inventory Catalog.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.InventoryRepository.GetUnassociatedProductCatalogs">
            <summary>
            Gets the unassociated inventory catalogs.
            </summary>
            <returns>Read only string collection of the inventory catalog names.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.InventoryRepository.GetAssociatedInventoryCatalog(System.String)">
            <summary>
            Gets the associated inventory catalog.
            </summary>
            <param name="productCatalogName">Name of the product catalog.</param>
            <returns>Commerce Server Inventory Catalog.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.InventoryRepository.GetInventoryCatalog(System.String,System.String)">
            <summary>
            Gets the inventory catalog.
            </summary>
            <param name="productCatalogName">The name of the product catalog associated</param>
            <param name="location">Name of the inventory catalog or CommerceConnect location.</param>
            <returns>Commerce Server InventoryCatalog.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.InventoryRepository.CreateInventoryCatalog(System.String)">
            <summary>
            Creates a new inventory catalog.
            </summary>
            <param name="inventoryCatalogName">The inventory catalog name.</param>
            <returns>The new inventory catalog.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.InventoryRepository.DeleteInventoryCatalog(System.String)">
            <summary>
            Deletes an inventory catalog
            </summary>
            <param name="inventoryCatalogName">The name of the inventory catalog to delete.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.InventoryRepository.GetSku(System.String,System.String,System.String)">
            <summary>
            Gets the inventory skus.
            </summary>
            <param name="productCatalogName">Name of the product catalog.</param>
            <param name="location">Name of the inventory catalog or CommerceConnect location.</param>
            <param name="productId">Id of the product.</param>
            <returns>Commerce Server InventorySku.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.InventoryRepository.GetSku(System.String,System.String,System.String,System.String)">
            <summary>
            Gets the inventory skus.
            </summary>
            <param name="productCatalogName">Name of the product catalog.</param>
            <param name="location">Name of the inventory catalog or CommerceConnect location.</param>
            <param name="productId">Id of the product.</param>
            <param name="variantId">Id of the product variant.</param>
            <returns>Commerce Server InventorySku.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.InventoryRepository.GetSkus(System.String,System.String,System.String,CommerceServer.Core.Catalog.SearchOptions,System.Int32@)">
            <summary>
            Gets the inventory skus.
            </summary>
            <param name="productCatalogName">Name of the product catalog.</param>
            <param name="location">Name of the inventory catalog or CommerceConnect location.</param>
            <param name="searchClause">An SQL expression to filter the inventory SKUs.</param>
            <param name="searchOptions">The options used for the search.</param>
            <param name="totalRecords">The total number of inventory SKUs that match the query.</param>
            <returns>Returns an InventorySkuCollection containing the inventory SKUs matching the specified criteria.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.InventoryRepository.CreateInventorySku(System.String,System.String,System.String,System.String,System.Decimal,CommerceServer.Core.Catalog.StockStatus,System.Decimal)">
            <summary>
            Creates an inventory sku.
            </summary>
            <param name="productCatalogName">Name of the product catalog.</param>
            <param name="location">Name of the inventory catalog or CommerceConnect location.</param>
            <param name="productId">The id of the product.</param>
            <param name="variantId">The variant id of the product.</param>
            <param name="quantity">The quantity of the product.</param>
            <param name="status">The stock status of the product.</param>
            <param name="stockOutThreshold">The stock-out threshold of the product.</param>
            <returns>Returns a new InventorySku.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.InventoryRepository.DeleteInventorySku(System.String,System.String,System.String,System.String)">
            <summary>
            Deletes an inventory sku.
            </summary>
            <param name="productCatalogName">Name of the product catalog.</param>
            <param name="location">Name of the inventory catalog or CommerceConnect location.</param>
            <param name="productId">The id of the product.</param>
            <param name="variantId">The variant id of the product.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.InventoryRepository.PurgeDeletedItems(System.Nullable{System.DateTime})">
            <summary>
            Purge deleted items.
            </summary>
            <param name="purgeBeforeDate">The purge before date.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.InventoryRepository.LocationToInventoryCatalogName(System.String)">
            <summary>
            Converts a location name into an inventory catalog name.
            </summary>
            <param name="location">The location name.</param>
            <returns>The inventory catalog name.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Inventory.IInventoryRepository">
            <summary>
            Interface for accessing Inventory.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.IInventoryRepository.IsInventoryEnabled">
            <summary>
            Determines whether inventory is enabled in Commerce Server.
            </summary>
            <returns>
              <c>true</c> if inventory is enabled; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.IInventoryRepository.GetInventoryCatalogMetadata">
            <summary>
            Gets the inventory catalog metadata.
            </summary>
            <returns>CatalogPropertiesDataSet for Inventory Catalog Metadata.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.IInventoryRepository.GetInventorySkuMetadata">
            <summary>
            Gets the inventory sku metadata.
            </summary>
            <returns>CatalogPropertiesDataSet for Inventory Sku Metadata.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.IInventoryRepository.GetInventoryCatalogs(System.String,CommerceServer.Core.Catalog.SearchOptions,System.Int32@)">
            <summary>
            Gets the inventory catalogs.
            </summary>
            <param name="searchClause">The search clause to apply.</param>
            <param name="searchOptions">The search options to apply.</param>
            <param name="totalRecords">recieves the total number of records that matched the search criteria.</param>
            <returns>Commerce Server InventoryCatalogCollection.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.IInventoryRepository.AssociatedInventoryCatalog(System.String,System.String)">
            <summary>
            Associated a product catalog to an inventory catalog.
            </summary>
            <param name="productCatalogName">Name of the product catalog.</param>
            <param name="inventoryCatalogName">Name of the inventory catalog.</param>
            <returns>Commerce Server Inventory Catalog.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.IInventoryRepository.DisassociatedInventoryCatalog(System.String,System.String)">
            <summary>
            Disassociated a product catalog to an inventory catalog.
            </summary>
            <param name="productCatalogName">Name of the product catalog.</param>
            <param name="inventoryCatalogName">Name of the inventory catalog.</param>
            <returns>Commerce Server Inventory Catalog.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.IInventoryRepository.GetUnassociatedProductCatalogs">
            <summary>
            Gets the unassociated inventory catalogs.
            </summary>
            <returns>Read only string collection of the inventory catalog names.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.IInventoryRepository.GetAssociatedInventoryCatalog(System.String)">
            <summary>
            Gets the associated inventory catalog.
            </summary>
            <param name="productCatalogName">Name of the product catalog.</param>
            <returns>Commerce Server Inventory Catalog.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.IInventoryRepository.GetInventoryCatalog(System.String,System.String)">
            <summary>
            Gets the inventory catalog.
            </summary>
            <param name="productCatalogName">The name of the product catalog associated</param>
            <param name="location">Name of the inventory catalog or CommerceConnect location.</param>
            <returns>Commerce Server InventoryCatalog.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.IInventoryRepository.CreateInventoryCatalog(System.String)">
            <summary>
            Creates a new inventory catalog.
            </summary>
            <param name="inventoryCatalogName">The inventory catalog name.</param>
            <returns>The new inventory catalog.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.IInventoryRepository.DeleteInventoryCatalog(System.String)">
            <summary>
            Deletes an inventory catalog
            </summary>
            <param name="inventoryCatalogName">The name of the inventory catalog to delete.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.IInventoryRepository.GetSku(System.String,System.String,System.String)">
            <summary>
            Gets the inventory sku.
            </summary>
            <param name="productCatalogName">Name of the product catalog.</param>
            <param name="location">Name of the inventory catalog or CommerceConnect location.</param>
            <param name="productId">Id of the product.</param>
            <returns>Commerce Server InventorySku.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.IInventoryRepository.GetSku(System.String,System.String,System.String,System.String)">
            <summary>
            Gets the inventory sku.
            </summary>
            <param name="productCatalogName">Name of the product catalog.</param>
            <param name="location">Name of the inventory catalog or CommerceConnect location.</param>
            <param name="productId">Id of the product.</param>
            <param name="variantId">Id of the product variant.</param>
            <returns>Commerce Server InventorySku.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.IInventoryRepository.GetSkus(System.String,System.String,System.String,CommerceServer.Core.Catalog.SearchOptions,System.Int32@)">
            <summary>
            Gets the inventory skus.
            </summary>
            <param name="productCatalogName">Name of the product catalog.</param>
            <param name="location">Name of the inventory catalog or CommerceConnect location.</param>
            <param name="searchClause">An SQL expression to filter the inventory SKUs.</param>
            <param name="searchOptions">The options used for the search.</param>
            <param name="totalRecords">The total number of inventory SKUs that match the query.</param>
            <returns>Returns an InventorySkuCollection containing the inventory SKUs matching the specified criteria.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.IInventoryRepository.CreateInventorySku(System.String,System.String,System.String,System.String,System.Decimal,CommerceServer.Core.Catalog.StockStatus,System.Decimal)">
            <summary>
            Gets the inventory skus.
            </summary>
            <param name="productCatalogName">Name of the product catalog.</param>
            <param name="location">Name of the inventory catalog or CommerceConnect location.</param>
            <param name="productId">The id of the product.</param>
            <param name="variantId">The variant id of the product.</param>
            <param name="quantity">The quantity of the product.</param>
            <param name="status">The stock status of the product.</param>
            <param name="stockOutThreshold">The stock-out threshold of the product.</param>
            <returns>Returns a new InventorySku.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.IInventoryRepository.DeleteInventorySku(System.String,System.String,System.String,System.String)">
            <summary>
            Deletes an inventory sku.
            </summary>
            <param name="productCatalogName">Name of the product catalog.</param>
            <param name="location">Name of the inventory catalog or CommerceConnect location.</param>
            <param name="productId">The id of the product.</param>
            <param name="variantId">The variant id of the product.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Inventory.IInventoryRepository.PurgeDeletedItems(System.Nullable{System.DateTime})">
            <summary>
            Purge deleted items.
            </summary>
            <param name="purgeBeforeDate">The purge before date.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.CommerceConnectContext">
            <summary>
            Provides contextual information about the current site instance
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.CommerceConnectContext.ProductId">
            <summary>
            Gets the ID  of the currently selected product.
            </summary>
            <returns>The ID of the currently selected product.</returns>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.CommerceConnectContext.InventoryLocation">
            <summary>
            Gets the name of the currently selected inventory location.
            </summary>
            <returns>The name of the currently selected inventory location.</returns>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.CommerceConnectContext.ProductCatalogName">
            <summary>
            Gets the name of the catalog of the currently selected product.
            </summary>
            <returns>The name of the catalog of the currently selected product.</returns>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.CommerceConnectContext.ItemClassificationService">
            <summary>
            Gets the item classification service.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Models.ContactCommerceInfo">
            <summary>
            Used to store Commerce info as a facet against an xDB Contact  
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Models.ContactCommerceInfo.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Models.ContactCommerceInfo"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Models.ContactCommerceInfo.UserId">
            <summary>
            Gets or sets the UserId of the Contact
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Models.ICommerceModel">
            <summary>
            Interface for CommerceModel.  
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Models.ICommerceModel.Id">
            <summary>
            Gets or sets the id of the commerce entity object.
            </summary>
            <value>The id of the commerce entity object instance.</value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Models.ICommerceModel.Name">
            <summary>
            Gets or sets the type name of this object instance
            <remarks>Required so that the Builders can convert to the Multi-channel Commerce Foundation CommerceModel base type</remarks>
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Models.ICommerceModel.Properties">
            <summary>
            Gets or sets this objects collection of Properties and their corresponding values
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Models.ICommerceModel.ToCommerceModel">
            <summary>
            Required so that the Builders can convert to the Multi-channel Commerce Foundation CommerceModel base type using Model Name.
            </summary>
            <returns>This instances base type</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Models.ICommerceModel.GetSource``1">
            <summary>
            Gets the source object this model was built from
            </summary>
            <typeparam name="T">The type to return the source as</typeparam>
            <returns>The source type</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Models.ICommerceModel.SetSource(System.Object)">
            <summary>
            Sets the source that this model was built from
            </summary>
            <param name="source">The source of the data for this model</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Models.CommerceModel">
            <summary>
            Defines the CommerceModel class.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Models.CommerceModel.ModelNameDefinition">
            <summary>
            The friendly name for the model
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Models.CommerceModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Models.CommerceModel"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Models.CommerceModel.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Models.CommerceModel"/> class.
            </summary>
            <param name="name">the name of this type of CommerceModel</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Models.CommerceModel.Name">
            <summary>
            Gets or sets the model name of this instance
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Models.CommerceModel.Id">
            <summary>
            Gets or sets the id of the commerce entity object.
            </summary>
            <value>
            The id of the commerce entity object instance.
            </value>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Models.CommerceModel.ToCommerceModel">
            <summary>
            Required so that the Builders can convert to the Multi-channel Commerce Foundation CommerceModel base type using Model Name.
            </summary>
            <returns>
            This instances base type
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Models.CommerceModel.GetSource``1">
            <summary>
            Gets the source object that was used to set the properties on the current model
            </summary>
            <typeparam name="T">The type to return the model as.</typeparam>
            <returns>The source object</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Models.CommerceModel.SetSource(System.Object)">
            <summary>
            Sets the object that was used as the source for this models property values
            </summary>
            <param name="source">The source object</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Models.CommerceModel.PropertyHasData(System.String)">
            <summary>
            Determines if the property has data.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns>True if the property collection contains a property for the specified key and that key has a value; false otherwise.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Models.CommerceModel.RelationshipHasData(System.String)">
            <summary>
            Determines if the relationship has data.
            </summary>
            <param name="relationshipName">Name of the relationship.</param>
            <returns>True if the property collection contains a relationship for the specified key and that key has a value; otherwise false.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Models.CommerceModel.PropertyName">
            <summary>
            An inner class that provides constant keys for property names.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Models.CommerceModel.PropertyName.Id">
            <summary>
            The name of the Id property for a CommerceModel.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Models.CommercePropertyCollection">
            <summary>
            A KeyedCollection of CommercePropertyItems 
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Models.CommercePropertyCollection.Keys">
            <summary>
            Gets the keys of the Commerce Property Collection.
            </summary>
            <value>
            The keys.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Models.CommercePropertyCollection.Item(System.String)">
            <summary>
            Gets the element with the specified key.
            </summary>
            <param name="key">The key.</param>
            <returns>The object in the CommercePropertyCollection at the given index.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Models.CommercePropertyCollection.Add(System.String)">
            <summary>
            Adds the specified key.
            </summary>
            <param name="key">The key.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Models.CommercePropertyCollection.Add(System.String[])">
            <summary>
            Adds the specified keys.
            </summary>
            <param name="keys">The keys.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Models.CommercePropertyCollection.Add(System.String,System.Object)">
            <summary>
            Adds the specified key and corresponding value.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Models.CommercePropertyCollection.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Models.CommercePropertyCollection.GetPropertyOrDefault``1(System.String,``0)">
            <summary>
            Gets the property or default.
            </summary>
            <typeparam name="T">Type of return value.</typeparam>
            <param name="key">The key.</param>
            <param name="defaultValue">The default value.</param>
            <returns>Instance of T.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Models.CommercePropertyCollection.GetKeyForItem(Sitecore.Commerce.Connect.CommerceServer.Models.CommercePropertyItem)">
            <summary>
            When implemented in a derived class, extracts the key from the specified element.
            </summary>
            <param name="item">The element from which to extract the key.</param>
            <returns>
            The key for the specified element.
            </returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Models.CommercePropertyItem">
            <summary>
            A Key-Value pair property used by Commerce Server.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Models.CommercePropertyItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Models.CommercePropertyItem"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Models.CommercePropertyItem.#ctor(System.String,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Models.CommercePropertyItem"/> class.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Models.CommercePropertyItem.Key">
            <summary>
            Gets or sets the key.
            </summary>
            <value>
            The key.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Models.CommercePropertyItem.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Models.CommerceRelationship`1">
            <summary>
            A List of CommerceModel objects which represents a relationship in Commerce Server.
            </summary>
            <typeparam name="T">The type contained in the relationship</typeparam>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Models.CommerceRelationship`1.FirstItemIndex">
            <summary>
            Gets or sets the first index of the item.
            </summary>
            <value>
            The first index of the item.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Models.CommerceRelationship`1.TotalItemCount">
            <summary>
            Gets or sets the total item count.
            </summary>
            <value>
            The total item count.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Models.SortOrder">
            <summary>
            Used to define the sort order.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Models.SortOrder.None">
            <summary>
            No sorting required.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Models.SortOrder.Ascending">
            <summary>
            Ascending sort required.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Models.SortOrder.Descending">
            <summary>
            Descending sort required.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Models.RelationshipOperation">
            <summary>
            Representation of a Relationship Operation in Commerce Server.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Models.RelationshipOperation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Models.RelationshipOperation"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Models.RelationshipOperation.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Models.RelationshipOperation"/> class.
            </summary>
            <param name="relationshipName">Name of the relationship.</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Models.RelationshipOperation.RelationshipName">
            <summary>
            Gets or sets the name of the relationship.
            </summary>
            <value>
            The name of the relationship.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Models.RelationshipOperation.FirstItemIndex">
            <summary>
            Gets or sets the first index of the item.
            </summary>
            <value>
            The first index of the item.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Models.RelationshipOperation.NumberOfItemsToReturn">
            <summary>
            Gets or sets the number of items to return.
            </summary>
            <value>
            The number of items to return.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Models.RelationshipOperation.ReturnTotalItemCount">
            <summary>
            Gets or sets a value indicating whether total item count is returned.
            </summary>
            <value>
            <c>true</c> if total item count is returned; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Models.RelationshipOperation.SortOrder">
            <summary>
            Gets or sets the sort order.
            </summary>
            <value>
            The sort order.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Models.RelationshipOperation.SortProperty">
            <summary>
            Gets or sets the sort property.
            </summary>
            <value>
            The sort property.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.CommandStateProcessor">
            <summary>
            Sitecore processor for the getQueryState pipeline that determines which commands are enabled for Commerce items.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommandStateProcessor.CatalogSetCommands">
            <summary>
            Specifies the Sitecore commands that must have their enabled state modified when
            items based on the Commerce Dynamic Catalog Set or Commerce Static Catalog Set template are selected.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommandStateProcessor.CatalogSetsFolderCommands">
            <summary>
            Specifies the Sitecore commands that must have their enabled state modified when
            items based on the Commerce Catalog Set Folder template are selected.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommandStateProcessor.VirtualPhysicalCategoryCommands">
            <summary>
            Defines the Sitecore commands whose state should be overriden for items based
            on the Commerce Virtual Catalog Physical Category template.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommandStateProcessor.VirtualCategoryCommands">
            <summary>
            Defines the Sitecore commands whose state should be overriden for items based
            on the Commerce Virtual Catalog Virtual Category template.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommandStateProcessor.VirtualProductVariantCommands">
            <summary>
            Defines the Sitecore commands whose state should be overriden for items based
            on the Commerce Virtual Catalog Virtual Product template.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommandStateProcessor.VirtualPhysicalMaterializedCategoryCommands">
            <summary>
            Defines the Sitecore commands whose state should be overriden for items based
            on the Commerce Virtual Catalog Virtual Product template.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommandStateProcessor.ProductVariantCommands">
            <summary>
            Defines the Sitecore commands whose state should be overriden for items based
            on the Commerce Product Variant template.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommandStateProcessor.CatalogItemCommands">
            <summary>
            Specifies the Sitecore commands that must have their enabled state modified when
            items based on the Commerce Category or Commerce Product template are selected.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommandStateProcessor.CatalogCommands">
            <summary>
            Specifies the Sitecore commands that must have their enabled state modified when
            items based on the Commerce Catalog template are selected.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommandStateProcessor.CatalogFolderCommands">
            <summary>
            Specifies the Sitecore commands that must have their enabled state modified when
            items based on the Commerce Catalog Folder template are selected.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommandStateProcessor.CommerceItemCommands">
            <summary>
            Specifies the Sitecore commands that must have their enabled state modified when
            items based on the Commerce Catalog Folder template are selected.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommandStateProcessor.CommonCommands">
            <summary>
            Specifies the Sitecore commands that must have their enabled state modified when
            any Commerce item is selected.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommandStateProcessor.TemplateIdToCommandStateMap">
            <summary>
            This dictionary defines the top-level map that defines which commands should have their
            enabled state modified.  The key into this dictionary is the ID of a Commerce template.
            Any Sitecore item that are based on that Commerce template (directly, or indirectly
            through inheritance) will have the state of Sitecore commands modified when that item
            is selected in the Content Editor.  The value in the dictionary specifies which
            Sitecore commands will have their enabled state modified.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.CommandStateProcessor.#cctor">
            <summary>
            Initializes static members of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.CommandStateProcessor"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.CommandStateProcessor.Process(Sitecore.Pipelines.GetQueryState.GetQueryStateArgs)">
            <summary>
            Processes the getQueryState pipeline request.
            </summary>
            <param name="args">The pipeline request arguments.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.CommandStateProcessor.GetCommandStateMapsForItem(Sitecore.Data.Items.Item)">
            <summary>
            Gets the commands whose state are overridden for a Sitecore item.
            </summary>
            <param name="item">The Sitecore item to analyze.</param>
            <returns>The commands whose state are overridden for the provided Sitecore item.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.CommerceSitecoreIntegrationException">
            <summary>
            An exception to use specifically when relationship data is incorrectly constructed.  
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.CommerceSitecoreIntegrationException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.CommerceSitecoreIntegrationException"/> class.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.CommerceSitecoreIntegrationException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.CommerceSitecoreIntegrationException"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.CommerceSitecoreIntegrationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.CommerceSitecoreIntegrationException"/> class.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.CommerceSitecoreIntegrationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.CommerceSitecoreIntegrationException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.ICommerceTrace">
            <summary>
            Tracing interface.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.ICommerceTrace.Write(System.String)">
            <summary>
            Writes a message to the trace log.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.ICommerceLog">
            <summary>
            Logging interface.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.ICommerceLog.Info(System.String,System.Object)">
            <summary>
            Logs an informational message.
            </summary>
            <param name="message">The message.</param>
            <param name="owner">The owner.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.ICommerceLog.Warning(System.String,System.Object)">
            <summary>
            Logs a warning message.
            </summary>
            <param name="message">The message.</param>
            <param name="owner">The owner.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.ICommerceLog.Error(System.String,System.Object)">
            <summary>
            Logs an error message.
            </summary>
            <param name="message">The message.</param>
            <param name="owner">The owner.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.ICommerceLog.Error(System.String,System.Object,System.Exception)">
            <summary>
            Logs an error message.
            </summary>
            <param name="message">The message.</param>
            <param name="owner">The owner.</param>
            <param name="exception">The exception.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.ICommerceLog.Error(System.String,System.Type)">
            <summary>
            Logs an error message.
            </summary>
            <param name="message">The message.</param>
            <param name="ownerType">Type of the owner.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.ICommerceLog.Error(System.String,System.Type,System.Exception)">
            <summary>
            Logs an error message.
            </summary>
            <param name="message">The message.</param>
            <param name="ownerType">Type of the owner.</param>
            <param name="exception">The exception.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.IToSitecoreFieldValue">
            <summary>
            Interface for classes converting Sitecore fields to string with correct formatting.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.IToSitecoreFieldValue.Convert(System.Object,Sitecore.Data.Items.TemplateFieldItem)">
            <summary>
            Converts the specified source to a string with the correct formatting.
            </summary>
            <param name="source">The source.</param>
            <param name="field">The field.</param>
            <returns>String correctly formatted from the source.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.IToSitecoreFieldValue.Convert(System.Object,System.String)">
            <summary>
            Converts the specified source to a string with the correct formatting.
            </summary>
            <param name="value">The Commerce item value.</param>
            <param name="culture">The desired language / culture of the formatted results.</param>
            <returns>String correctly formatted from the source.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.CommerceTypeLoader">
            <summary>
            CommerceTypeLoader static class definition.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.CommerceTypeLoader.ConfigurationProvider">
            <summary>
            Gets the current configuration provider.
            </summary>
            <value>
            The configuration provider.
            </value>
            <exception cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.ProviderImplementationNotFoundException">The provided type imlpementation could not be loaded.</exception>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.CommerceTypeLoader.CreateInstance``1">
            <summary>
            Creates the instance.
            </summary>
            <typeparam name="T">Interface type to be loaded.</typeparam>
            <returns>An instance of type T.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.CommerceTypeLoader.CreateInstances``1">
            <summary>
            Creates the instance.
            </summary>
            <typeparam name="T">Interface type to be loaded.</typeparam>
            <returns>An instance of type T.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.CommerceTypeLoader.CreateInstance``1(System.Object[])">
            <summary>
            Creates the instance.
            </summary>
            <typeparam name="T">Object type to be loaded.</typeparam>
            <param name="args">The arguments.</param>
            <returns>An instance of type T.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.CommerceTypeLoader.CreateInstance``1(System.String,System.Boolean,System.Object[])">
            <summary>
            Creates the instance.
            </summary>
            <typeparam name="T">Interface type to be dynamically loaded.</typeparam>
            <param name="typeName">Name of the type.</param>
            <param name="throwIfNotFound">if set to <c>true</c> [throw if not found].</param>
            <param name="args">The arguments.</param>
            <returns>
            An instance of type T
            </returns>
            <exception cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.ProviderImplementationNotFoundException">The provided type imlpementation could not be loaded.</exception>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.CommerceTypeLoader.CreateInstances``1(System.String,System.Boolean,System.Object[])">
            <summary>
            If there are multiple entries for a type and instance of each will be created and returned
            </summary>
            <typeparam name="T">Interface type to be dynamically loaded.</typeparam>
            <param name="typeName">Name of the type.</param>
            <param name="throwIfNotFound">if set to <c>true</c> [throw if not found].</param>
            <param name="args">The arguments.</param>
            <returns>
            An array of instances of type T
            </returns>
            <exception cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.ProviderImplementationNotFoundException">The provided type imlpementation could not be loaded.</exception>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.CommerceTypeLoader.CreateSingleInstance``1(System.String,System.Object[],Sitecore.Commerce.Connect.CommerceServer.Configuration.ConfigurationTypeElement)">
            <summary>
            Craetes an instance of the typeName class
            </summary>
            <typeparam name="T">The type of class to return</typeparam>
            <param name="typeName">The name of the class to create</param>
            <param name="args">Any args to pass to the new class</param>
            <param name="element">The element containing detailed info about the type to create</param>
            <returns>An instance of the type to create</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.CommerceTypeLoader.CreateInstance``1(System.Type,Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.ObjectLifetime)">
            <summary>
            Creates the instance of a given type for the lifetime specified.
            </summary>
            <typeparam name="T">Type or return value.</typeparam>
            <param name="type">The type.</param>
            <param name="lifetime">The lifetime.</param>
            <returns>Instance of specified type.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.CommerceTypeLoader.GetCacheProvider(System.String)">
            <summary>
            Gets the cache provider.
            </summary>
            <param name="cacheName">Name of the cache.</param>
            <returns>ICacheProvider instance for the given cache name.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.CommerceServerContextManager">
            <summary>
            CommerceServerContextManager default implementation.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.CommerceServerContextManager.CatalogContext">
            <summary>
            Gets the Commerce Server catalog context.
            </summary>
            <value>
            The catalog context.
            </value>
            <exception cref="T:Sitecore.Commerce.Connect.CommerceServer.CommerceContextItemNotFoundException">Exception indicating the Commerce context could not be found.</exception>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.CommerceServerContextManager.ProfileContext">
            <summary>
            Gets the Commerce Server profile context.
            </summary>
            <value>
            The profile context.
            </value>
            <exception cref="T:Sitecore.Commerce.Connect.CommerceServer.CommerceContextItemNotFoundException">An exception indicating the ProfileContext could not be found.</exception>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.CommerceServerContextManager.OrderContext">
            <summary>
            Gets the Commerce Server order context.
            </summary>
            <value>
            The order context.
            </value>
            <exception cref="T:Sitecore.Commerce.Connect.CommerceServer.CommerceContextItemNotFoundException">An exception indicating the OrderContext could not be found.</exception>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.CommerceServerContextManager.OrderManagementContext">
            <summary>
            Gets the order management context.
            </summary>
            <value>
            The order management context.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.CommerceServerContextManager.Caches">
            <summary>
            Gets the cache collection from Commerce Server.
            </summary>
            <value>
            The cache collection.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.CommerceServerContextManager.Pipelines">
            <summary>
            Gets the Commerce Server pipeline collection.
            </summary>
            <value>
            The pipeline collection.
            </value>
            <exception cref="T:Sitecore.Commerce.Connect.CommerceServer.CommerceContextItemNotFoundException">An exception indicating the pipeline collection could not be found.</exception>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.CommerceServerContextManager.IsCommerceServerInitialized">
            <summary>
            Gets a value indicating whether Commerce Server is initialized.
            </summary>
            <value>
            <c>true</c> if Commerce Server IS initialized; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.CommerceServerContextManager.SiteName">
            <summary>
            Gets the name of the current Commerce Server site.
            </summary>
            <value>
            The name of the site.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants">
            <summary>
            Container class used to hold all of the constants used by the Sitecore Commerce Server integration.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.CommerceRolesList">
            <summary>
            The list of roles defined by the Commerce system.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.DisplayNameTemplateSecurityAccesses">
            <summary>
            The list of roles security for the /sitecore/templates/System/Templates/Sections/Appearance/Appearance/__Display name item.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.ObjectLifetime">
            <summary>
            Object lifetime enumeration.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.ObjectLifetime.PerCall">
            <summary>
            Object is loaded on each call.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.ObjectLifetime.PerWebRequest">
            <summary>
            object is loaded once per web request.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.ObjectLifetime.Singleton">
            <summary>
            Object is loaded as a singleton.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.SortDirection">
            <summary>
            Indicates the direction of a search.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.SortDirection.Asc">
            <summary>
            Sort ascending
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.SortDirection.Desc">
            <summary>
            Sort descending
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.PartyType">
            <summary>
            Defines the type of party object stored.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.PartyType.CommerceParty">
            <summary>
            The stored object is a CommerceParty.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.PartyType.EmailParty">
            <summary>
            The email partyThe stored object is an EmailParty.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownRoles">
            <summary>
            Contains known role names in the Commerce system.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownRoles.Administrator">
            <summary>
            The Commerce Administrator role.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownRoles.CatalogAdministrator">
            <summary>
            The Commerce Catalog Administrator role.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownRoles.CatalogGroupsAdministrator">
            <summary>
            The Commerce Catalog Groups Administrator role.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownRoles.Merchandiser">
            <summary>
            The Commerce Merchandiser role.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownRoles.Operations">
            <summary>
            The Commerce Operations role.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownRoles.InventoryAdministrator">
            <summary>
            The Commerce Inventory Administrator role.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownRoles.Staging">
            <summary>
            The Commerce Staging role.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownSortFields">
            <summary>
            Contains known fields for sorting with
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownSortFields.StartDate">
            <summary>
            The start date field.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownSortFields.EndDate">
            <summary>
            The end date field.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownSortFields.ListPrice">
            <summary>
            The list price field.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownSortFields.ProductId">
            <summary>
            The product id field.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownSortFields.CatalogItemId">
            <summary>
            The catalog item id field.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.StagingErrorCodes">
            <summary>
            Known list of commerce staging COM error codes.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.StagingErrorCodes.CssErrorNoMoreItems">
            <summary>
            Error code returned when there are no more items to retrieve while enumerating items.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.StagingErrorCodes.CssErrorNoProjectsDefined">
            <summary>
            Error code returned when there are no items available to enumerate.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.StagingProjectStatus">
            <summary>
            Known list of Commerce staging project status values.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.StagingProjectStatus.InProgress">
            <summary>
            Represents a staging project that currently being exectued.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.StagingProjectStatus.Unknown">
            <summary>
            Represents a staging project that is in an unknown state.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.StagingProjectStatus.Failed">
            <summary>
            Represents a staging project that expreienced failures during its last run.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.StagingProjectStatus.Cancelled">
            <summary>
            Represents a staging project that was cancelled during its last run.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.StagingProjectStatus.Idle">
            <summary>
            Represents a staging project that is not currently active.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.StagingProjectStatus.Completed">
            <summary>
            Represents a staging project that completed successfully.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.SitecoreTemplateIds">
            <summary>
            Known list of template ids.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.SitecoreTemplateIds.FacetTemplate">
            <summary>
            The id of the commerce facet template
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.SitecoreTemplateIds.ValidationRule">
            <summary>
            The id of the Sitecore Validation Rule template
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownTemplateNames">
            <summary>
            Known list of template names.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownTemplateNames.CommerceCatalog">
            <summary>
            The name of the Commerce Catalog template
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownTemplateIds">
            <summary>
            Known list of template ids.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownTemplateIds.CommerceBusinessUserSettingsTemplate">
            <summary>
            The template for the business user settings template
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownTemplateIds.CommerceCatalogFolderTemplate">
            <summary>
            The template for the catalog folder that stores catalog items
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownTemplateIds.CommerceCatalogTemplate">
            <summary>
            The template for a catalog item
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownTemplateIds.CommerceCatalogItemTemplate">
            <summary>
            The base catalog item template for products, categories, etc.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownTemplateIds.TemplateFieldTemplate">
            <summary>
            The base Sitecore template for all fields
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownTemplateIds.CommerceCatalogSystemTemplate">
            <summary>
            The base template for all catalog items
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownTemplateIds.CommerceCategoryTemplate">
            <summary>
            Template for a category item
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownTemplateIds.CommerceItemTemplate">
            <summary>
            The base template for all commerce server items
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownTemplateIds.CommerceInventoryFolderTemplate">
            <summary>
            The template for the folder that contains inventory items
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownTemplateIds.CommerceNavigationItemTemplate">
            <summary>
            The template for a static navigation item under content
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownTemplateIds.CommerceProductTemplate">
            <summary>
            The base template for product items
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownTemplateIds.CommerceProductRelationshipTemplate">
            <summary>
            The template for a product relationship
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownTemplateIds.CommerceProductVariantTemplate">
            <summary>
            The template for a product variant
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownTemplateIds.CommerceProfileSystemTemplate">
            <summary>
            The base template for all profile items
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownTemplateIds.CommerceSettingTemplate">
            <summary>
            A template for all setting items
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownTemplateIds.CommerceVirtualCatalogTemplate">
            <summary>
            The template for virtual catalog items
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownTemplateIds.AvailableCatalogFolderSettingTemplate">
            <summary>
            The id for the available catalogs folder item
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownTemplateIds.AvailableCatalogItemSettingTemplate">
            <summary>
            The id for the available catalogs setting item
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownTemplateIds.CommerceDynamicCategoryTemplate">
            <summary>
            The template for the dynamic navigation item
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownTemplateIds.CommerceCatalogSetFolderTemplate">
            <summary>
            The template for a catalog set folder
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownTemplateIds.CommerceStaticCatalogSetTemplate">
            <summary>
            The template for a static catalog set items
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownTemplateIds.CommerceDynamicCatalogSetTemplate">
            <summary>
            The template for a dynamic catalog set items
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownTemplateIds.CommerceOrderSystemItemTemplate">
            <summary>
            The base template for all order items
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownTemplateIds.CommerceFieldSectionTemplate">
            <summary>
            The section template for the Sitecore field template that allows Commerce Server field metadata to be exposed
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownTemplateIds.InventoryCatalogTemplate">
            <summary>
            The base inventory template for inventory catalogs and skus
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownTemplateIds.InventorySkuTemplate">
            <summary>
            The base inventory template for inventory catalogs and skus
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownFieldIds">
            <summary>
            A list of known field IDs. 
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownFieldIds.CatalogName">
            <summary>
            The field that holds the catalog name
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownFieldIds.BooleanSettingValue">
            <summary>
            The field for the value of a boolean setting
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownFieldIds.CatalogSettingValue">
            <summary>
            The field for the value of a catalog setting
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownFieldIds.CatalogItemParentCategories">
            <summary>
            The field for the parent categories of a product or category
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownFieldIds.CategoryChildProducts">
            <summary>
            The field for the child products of a category
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownFieldIds.CategoryChildCategories">
            <summary>
            The field to hold child categories
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownFieldIds.TargetProductId">
            <summary>
            The field that holds the target product id for a relationship
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownFieldIds.TargetCategoryName">
            <summary>
            The field that holds the target category id for a relationship
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownFieldIds.RelationshipList">
            <summary>
            The field for relationships
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownFieldIds.CategorySearchFacets">
            <summary>
            The field for category search facets
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownFieldIds.DynamicCatalogSetIncludedCatalogs">
            <summary>
            The field to hold the associated catalogs on a catalog set
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownFieldIds.SortFields">
            <summary>
            The field to store sort fields
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownFieldIds.ItemsPerPage">
            <summary>
            The field to store the items per page count
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownFieldIds.PrimaryParentCategory">
            <summary>
            A field to store the promary parent category
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownFieldIds.CreatedDateField">
            <summary>
            A field to store the created date
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownFieldIds.UpdatedDateField">
            <summary>
            A field to store the updated date
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownFieldIds.VirtualDependentCatalogs">
            <summary>
            The id of the field on Virtual Catalogs that holds dependent virtual catalogs
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownFieldIds.BaseDependentCatalogs">
            <summary>
            The id of the field on Base Catalogs that holds dependent virtual catalogs
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownFieldIds.VirtualSourceCatalogs">
            <summary>
            The id of the field on Virtual Catalogs that holds source virtual catalogs
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownFieldIds.CatalogFolderSelectedCatalogs">
            <summary>
            The id of the field on a catalog folder that contains the selected catalogs
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownItemIds">
            <summary>
            Known list of item ids.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownItemIds.BigDataSupport">
            <summary>
            An item to indicate whether to not big data is turned on
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownItemIds.DefaultCatalog">
            <summary>
            An item to indicate what catalog to use as the default for the site
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownItemIds.CatalogManagement">
            <summary>
            The parent folder item for holding catalogs
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownItemIds.CatalogsItem">
            <summary>
            The parent folder for all catalogs
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownItemIds.CatalogSetsItem">
            <summary>
            The parent folder for catalog sets
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownItemIds.CommerceUserProfileItem">
            <summary>
            The id for the template that represents a Commerce User in sitecore.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownItemIds.CommerceUserProfileImportField">
            <summary>
            The id that represents the profile import property to use for sitecore user name generation
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownItemIds.DisplayOnSiteField">
            <summary>
            The id that represents the display on site property on Commerce Server fields
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownItemIds.BasePropertyField">
            <summary>
            The id that represents the dislay as base property on Commerce Server fields
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownItemIds.IsRequiredField">
            <summary>
            The id that represents the required property on Commerce Server fields
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownItemIds.SpecificationSearchableField">
            <summary>
            The id that represents the specification searchable property on Commerce Server fields
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownItemIds.FreeTextSearchableField">
            <summary>
            The id that represents the free text searchable property on Commerce Server fields
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownItemIds.AllProductsField">
            <summary>
            The id that represents the add on all products property on Commerce Server fields
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownItemIds.FallbackLanguage">
            <summary>
            The id of the Fallback Language (/sitecore/templates/System/Language/Data/Fallback Language)
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownItemIds.ManagedByExternalCommerceSystem">
            <summary>
            The id that represents the managed by external commerce system property on Commerce Server fields.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownItemIds.DisplayNameTemplateField">
            <summary>
            The id that represents the _Display name system template field.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownSettingsFields">
            <summary>
            Known list of settings data template fields.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownSettingsFields.Value">
            <summary>
            The field for storing values
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.CartSettings">
            <summary>
            Used to hold some of the default settings for cart
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.CartSettings.DefaultCartName">
            <summary>
            The default cart name
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.InventorySettings">
            <summary>
            Used to hold some of the default settings for inventory
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.InventorySettings.DefaultStockLocationName">
            <summary>
            The default stock location name.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.DataTemplateSettings">
            <summary>
            Used to hold some of the default settings for data templates
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.DataTemplateSettings.ConfirmDialogWidth">
            <summary>
            The width of the confirmation dialog
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.DataTemplateSettings.ConfirmDialogHeight">
            <summary>
            The height of the confirmation dialog
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.CommerceItemTypes">
            <summary>
            Commerce Server item types.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.CommerceItemTypes.Unknown">
            <summary>
            An unidentified type
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.CommerceItemTypes.Product">
            <summary>
            A commerce product type
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.CommerceItemTypes.Category">
            <summary>
            A commerce category type
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.CommerceItemTypes.Variant">
            <summary>
            A commerce variant type
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.CommerceItemTypes.Catalog">
            <summary>
            A commerce catalog type
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.CommerceItemTypes.RelationshipItem">
            <summary>
            A commerce relationship type
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.CommerceItemTypes.InventoryCatalog">
            <summary>
            A commerce inventory catalog type
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.CommerceItemTypes.Discount">
            <summary>
            A commerce discount type
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.CommerceItemTypes.AvailableCatalogs">
            <summary>
            A commerce available catalog type
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.PipelineNames">
            <summary>
            Known list of commerce pipelines.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.PipelineNames.StartCommerceStagingProject">
            <summary>
            The name of the StartCommerceStagingProject pipeline.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.PipelineNames.GetCommerceStagingProjectStatus">
            <summary>
            The name of the GetCommerceStagingLocalProjectStatus pipeline.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.PipelineNames.GetActiveCommerceStagingProjects">
            <summary>
            The name of the GetActiveCommerceStagingProjects pipeline.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.PipelineNames.GetAllCommerceStagingProjects">
            <summary>
            The name of the GetAllCommerceStagingProjects pipeline.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.PipelineNames.GetCommerceCatalogStatus">
            <summary>
            The name of the getCommerceCatalogStatus pipeline.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.PipelineNames.RevertVirtualCatalogPropertyOverride">
            <summary>
            The name of the RevertVirtualCatalogPropertyOverride pipeline.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.PipelineNames.CommerceCatalogToSitecoreItem">
            <summary>
            The name of the CommerceCatalogToSitecoreItem pipeline
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.PipelineNames.CommerceCatalogItemToSitecoreItem">
            <summary>
            The name of the CommerceCatalogItemToSitecoreItem pipeline
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.PipelineNames.CommerceProductVariantToSitecoreItem">
            <summary>
            The name of the CommerceProductVariantToSitecoreItem pipeline
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.PipelineNames.CommerceRelationshipToSitecoreItem">
            <summary>
            The name of the CommerceRelationshipToSitecoreItem pipeline
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.PipelineNames.CommerceCatalogSetToSitecoreItem">
            <summary>
            The name of the CommerceCatalogSetToSitecoreItem pipeline
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.PipelineNames.CreateCatalog">
            <summary>
            The name of the CreateCatalog pipeline
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.PipelineNames.CreateCategory">
            <summary>
            The name of the CreateCategory pipeline
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.PipelineNames.CreateProduct">
            <summary>
            The name of the CreateProduct pipeline
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.PipelineNames.CreateVariant">
            <summary>
            The name of the CreateVariant pipeline
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.PipelineNames.CreateStaticCatalogSet">
            <summary>
            The name of the CreateStaticCatalogSet pipeline
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.PipelineNames.CreateDynamicCatalogSet">
            <summary>
            The name of the CreateDynamicCatalogSet pipeline
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.PipelineNames.UpdateCatalog">
            <summary>
            The name of the UpdateCatalog pipeline
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.PipelineNames.UpdateCatalogItem">
            <summary>
            The name of the UpdateCatalogItem pipeline
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.PipelineNames.UpdateRelationship">
            <summary>
            The name of the UpdateRelationship pipeline
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.PipelineNames.UpdateVariant">
            <summary>
            The name of the UpdateVariant pipeline
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.PipelineNames.UpdateCatalogSet">
            <summary>
            The name of the UpdateCatalogSet pipeline
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.PipelineNames.DeleteCatalogOrCategoryItem">
            <summary>
            The name of the CreateCategory pipeline
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.PipelineNames.DeleteProfile">
            <summary>
            The name of the DeleteProfile pipeline
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.PipelineNames.CreateProfile">
            <summary>
            The name of the CreateProfile pipeline
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.PipelineNames.GetProfile">
            <summary>
            The name of the GetProfile pipeline
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.PipelineNames.GetProfiles">
            <summary>
            The name of the GetProfiles pipeline
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.PipelineNames.ProfileToCommerceModel">
            <summary>
            The name of the ProfileToCommerceModel pipeline
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.PipelineNames.GetProfileDefinition">
            <summary>
            The name of the GetProfileDefinition pipeline
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.PipelineNames.GetProfileDefinitions">
            <summary>
            The name of the GetProfileDefinitions pipeline
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.PipelineNames.DeleteInactiveUserProfiles">
            <summary>
            The name of the DeleteInactiveUserProfiles pipeline
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.PipelineNames.GetUserProfiles">
            <summary>
            The name of the GetUserProfiles pipeline
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.PipelineNames.GetProfilesFromField">
            <summary>
            The name of the GetProfilesFromField pipeline
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.PipelineNames.GetCommerceCatalogFallbackLanguage">
            <summary>
            The name of the GetCommerceCatalogFallbackLanguage pipeline
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.PipelineArgumentNames">
            <summary>
            Commonly used pipeline argument / request context parameter names.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.PipelineArgumentNames.TranslateSource">
            <summary>
            The name of the property that contains the source CommerceConnect entity to translate.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.PipelineArgumentNames.TranslateDestination">
            <summary>
            The name of the property that contains the destination Commerce object.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.PipelineArgumentNames.TranslatedEntity">
            <summary>
            The name of the property that contains the translated Commerce object.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.PipelineArgumentNames.CatalogObject">
            <summary>
            The name of the property that contains the target catalog object.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.PipelineArgumentNames.Location">
            <summary>
            The name of the property that contains the target stock location entity.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.PipelineArgumentNames.Locations">
            <summary>
            The name of the property that contains the target list of stock location entities.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.PipelineArgumentNames.ProductCatalogName">
            <summary>
            The name of the target product catalog.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownFolderItems">
            <summary>
            Known folder names we use in Sitecore.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownFolderItems.CatalogGeneratedTemplates">
            <summary>
            The name of the folder that contains the generated catalog templates
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownFolderItems.CatalogGeneratedFieldRules">
            <summary>
            The name of the folder that contains the generated catalog field validators
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownFolderItems.CatalogBuiltInFieldRules">
            <summary>
            The name of the folder that contains the built-in catalog field validators
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownItemPaths">
            <summary>
            Known items we use in Sitecore.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownItemPaths.RootCommerceTemplateFolder">
            <summary>
            The main commerce templates folder
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownItemPaths.RootCatalogGeneratedTemplatesFolder">
            <summary>
            The folder that contains the generated catalogs templates
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownItemPaths.RootInventoryTemplatesFolder">
            <summary>
            The folder that contains inventory templates
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownItemPaths.RootCatalogsFolder">
            <summary>
            The folder for commerce catalog items
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownItemPaths.LayoutFolder">
            <summary>
            The sitecore layout folder
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownItemPaths.MediaFolder">
            <summary>
            The sitecore media folder
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownItemPaths.SystemFolder">
            <summary>
            The sitecore system folder
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownItemPaths.TemplateFolder">
            <summary>
            The sitecore template folder
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownItemPaths.CommerceFolder">
            <summary>
            The top level commerce folder
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownItemPaths.ValidationRulesFolder">
            <summary>
            The sitecore Valaidation Rules folder
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownItemPaths.FieldRulesFolder">
            <summary>
            The sitecore Field Rules folder
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownItemPaths.CommerceFieldRulesFolder">
            <summary>
            The folder that contains all Commerce Field Rules.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownItemPaths.CatalogGeneratedFieldRulesFolder">
            <summary>
            The folder that contains all generated Commerce catalog system field rules.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownItemPaths.CatalogBuiltInFieldRulesFolder">
            <summary>
            The folder that contains all built-in Commerce catalog system field rules.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownItemPaths.EditFrameImages">
            <summary>
            The path to the buttons for the images edit frame
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.CommerceDataTemplateSections">
            <summary>
            Known list of content editor sections.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.CommerceDataTemplateSections.Commerce">
            <summary>
            The name of Commerce Section on a item
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.CommerceDataTemplateSections.Relationships">
            <summary>
            The name of the Commerce Relationships section on an item
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.CommerceDataTemplateSections.Variants">
            <summary>
            The name of the Commerce Variants section on an item
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownCatalogFieldNames">
            <summary>
            Known list of Commerce Server catalog field names.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownCatalogFieldNames.ProductId">
            <summary>
            The name of the built-in field in Commerce Server that identifies products
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownCatalogFieldNames.VariantId">
            <summary>
            The name of the built-in field in Commerce Server that identifies variants
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownCatalogFieldNames.IsExternalSettingsCatalog">
            <summary>
            The name of the field in Commerce Server that identifies external settings catalogs
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownCatalogFieldNames.ExternalSettingsCatalogName">
            <summary>
            The name of the field in Commerce Server that defines the external settings catalogs of a base catalog
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownCatalogFieldNames.ExternalSettingsVariantProperty">
            <summary>
            The name of the field in Commerce Server that is associated with a ExternalSettingsProduct definition.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownCatalogFieldNames.ExternalId">
            <summary>
            The name of the field in Commerce Server that stores the Sitecore item id
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownCatalogFieldNames.Currency">
            <summary>
            The name of the field in Commerce Server that stores the catalog currency
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownCatalogFieldNames.ExternalSettings">
            <summary>
            The name of the field in Commerce Server that stores additional Sitecore fields
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownCatalogFieldNames.CatalogName">
            <summary>
            The name of the field in Commerce Server that stores the associated catalog name
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownCatalogFieldNames.RelationshipName">
            <summary>
            The name of the field on a Sitecore item that stores the relationship names
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownCatalogFieldNames.CategoryDataSource">
            <summary>
            The field on a Navigation Item that stores the path to a location in a catalog
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownCatalogFieldNames.StandardValues">
            <summary>
            The name of the standard values item in Sitecore
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownCatalogFieldNames.IntroductionDate">
            <summary>
            The name of the Date created field in Commerce Server for catalog items
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownCatalogFieldNames.LastModified">
            <summary>
            The name of the Last modified date field in Commerce Server for catalog items
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownCatalogFieldNames.Materialize">
            <summary>
            The name of the materialize property.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownCatalogItemFieldNames">
            <summary>
            Known list of catalog item field names.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownCatalogItemFieldNames.DisplayName">
            <summary>
            The display name field on a Sitecore Item
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownCatalogRelationshipFieldNames">
            <summary>
            Known catalog relationship field names.  
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownCatalogRelationshipFieldNames.TargetProductId">
            <summary>
            The field for the target product on a relationship
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownCatalogRelationshipFieldNames.TargetCategoryName">
            <summary>
            The field for the target category on a relationship
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownCatalogRelationshipFieldNames.CatalogName">
            <summary>
            The field for the catalog name on a relationship
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownDiscountFieldNames">
            <summary>
            Known list of Commerce Server discount field names.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownDiscountFieldNames.Id">
            <summary>
            The name of the id field on a discount
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownCommerceOrderFieldNames">
            <summary>
            Known list of Commerce Order field names.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownCommerceOrderFieldNames.TrackingNumber">
            <summary>
            The name of the TrackingNumber field
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownCacheNames">
            <summary>
            Known list of cache names we use.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownCacheNames.CommerceAssociationsCache">
            <summary>
            The name of the cache that stores commerce catalog associations
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownCacheNames.FriendlyUrlsCache">
            <summary>
            The name of the cache that stores catalog friendly urls
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownCacheNames.CommerceCartCache">
            <summary>
            The name of the cache that stores catalog friendly urls
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownCachePrefixes">
            <summary>
            Known list of cache prefixes we use to prefix the cache name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownCachePrefixes.Sitecore">
            <summary>
            The Sitecore cache prefix
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownCacheKeyPrefixes">
            <summary>
            Known list of cache prefixes we use to prefix the cache name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownCacheKeyPrefixes.DataTemplatesBuilt">
            <summary>
            The DataTemplatesBuilt_ cache prefix
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.Strings">
            <summary>
            Miscellaneous string constants.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.Strings.RelationshipFieldDelimiter">
            <summary>
            Used to delimit relationships in a field
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.Strings.MinSqlDate">
            <summary>
            The min  date required in sql
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.IndexNames">
            <summary>
            Index names we used in the context of Sitecore.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.IndexNames.Discount">
            <summary>
            The name of the commerce discount index
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownSitecoreFieldNames">
            <summary>
            Know set of fieldnames we use in Sitecore.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownSitecoreFieldNames.RelationshipList">
            <summary>
            The relationship list field
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownSitecoreFieldNames.SelectedCatalogs">
            <summary>
            Used to store the catalogs to be used in the site
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownSitecoreFieldNames.PersistentBucketFilter">
            <summary>
            The field used on a bucket item to store the filter
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownSitecoreFieldNames.DefaultBucketQuery">
            <summary>
            The field used on a bucket item to store the default query
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownSitecoreFieldNames.Title">
            <summary>
            The field that represents the title of a Validation Rule
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownSitecoreFieldNames.Description">
            <summary>
            The field that represents the description of a Validation Rule
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownSitecoreFieldNames.Type">
            <summary>
            The field that represents the class type that implements a Validation Rule
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownSitecoreFieldNames.Parameters">
            <summary>
            The field that represents the parameters of a Validation Rule
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownSitecoreFieldNames.QuickActionBar">
            <summary>
            The field that represents the quick action bar of a Template Field
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownSitecoreFieldNames.ValidateButton">
            <summary>
            The field that represents the validate button of a Template Field
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownSitecoreFieldNames.ValidatorBar">
            <summary>
            The field that represents the validate bar of a Template Field
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.CommerceCacheNames">
            <summary>
            Define the Commerce Server cache names.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.CommerceCacheNames.CatalogCache">
            <summary>
            defines the Catalog cache
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.CommerceCacheNames.CommerceCaches">
            <summary>
            defines all Commerce caches
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.CommerceCacheNames.SiteTermCache">
            <summary>
            defines the SiteTerm cache
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.CommerceCacheNames.ProfileCache">
            <summary>
            defines the Profile cache
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.CommerceCacheNames.AllCaches">
            <summary>
            defines all Commerce Server caches
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.CommerceCacheNames.SitecoreCache">
            <summary>
            defines the Sitecore cache.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.ProfilesStrings">
            <summary>
            Contains a list of profile constants
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.ProfilesStrings.SwitcherName">
            <summary>
            defines the profile switcher name
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.ProfilesStrings.JoinKeyAttribute">
            <summary>
            defines the join key attribute of profile properties
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.ProfilesStrings.AddressType">
            <summary>
            The name of the address profile type
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.ProfilesStrings.BlanketPOsType">
            <summary>
            The name of the blanket po profile type
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.ProfilesStrings.CreditCardType">
            <summary>
            The name of the credit card profile type
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.ProfilesStrings.CurrencyType">
            <summary>
            The name of the currency profile type
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.ProfilesStrings.OrganizationType">
            <summary>
            The name of the organization profile type
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.ProfilesStrings.TargetingContextType">
            <summary>
            The name of the targetting context profile type
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.ProfilesStrings.UserObjectType">
            <summary>
            The name of the user object profile type
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.ProfilesStrings.ExternalIdName">
            <summary>
            defines the ExternalId name
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.ProfilesStrings.ExternalIdProperty">
            <summary>
            defines some commonly used profile properties
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.ProfilesStrings.UserIdProperty">
            <summary>
            The user id on a commerce user object profile
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.ProfilesStrings.DateLastActivity">
            <summary>
            The last activity date on a user profile object
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.ProfilesStrings.DateLastChanged">
            <summary>
            The last changed date on a user profile object
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.ProfilesStrings.EmailAddressProperty">
            <summary>
            The email address on a user profile object
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.ProfilesStrings.AddressListProperty">
            <summary>
            The address list on a user profile object
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.ProfilesStrings.AddressNameProperty">
            <summary>
            The address name on a Address profile object
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.ProfilesStrings.ProfileDateTimeCompareFormatting">
            <summary>
            DateTime formatting for dateTime compares
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.ProfilesStrings.CommerceUsersDomainName">
            <summary>
            Domain name to use for commerce users
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.ProfilesStrings.AddressListDelimiter">
            <summary>
            The address list delimiter
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.ProfileImportSettings">
            <summary>
            Contains a list of profile import constants
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.ProfileImportSettings.SitecoreConnectStringKey">
            <summary>
            Sitecore Connection String command line arg name
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.ProfileImportSettings.CSSiteNameKey">
            <summary>
            Commerce Server Sitename command line arg name
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.ProfileImportSettings.OutputFileName">
            <summary>
            Output Filename command line arg name
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.ProfileImportSettings.ErrorThresholdKey">
            <summary>
            Error Threshold command line arg name
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.ProfileImportSettings.MaxDegreeOfParallelism">
            <summary>
            Max degree of parallelism to use for profile import
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.ProfileImportSettings.DomainKey">
            <summary>
            Domain name command line arg name
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.ProfileImportSettings.FieldForUserNameGenerationKey">
            <summary>
            Field to use for username generation command line arg name
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.ProfileImportSettings.EmailAddressFieldNameKey">
            <summary>
            Email address field name command line arg name
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.ProfileImportSettings.ProfileUniqueQueryKeyKey">
            <summary>
            Unique key for profiles command line arg name
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.ProfileImportSettings.ConfirmDialogWidthKey">
            <summary>
            Field to use for comfimration dialog width
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.ProfileImportSettings.ConfirmDialogHeightKey">
            <summary>
            Field to use for comfimration dialog height
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.ProfileImportSettings.MaxDegreeOfParallelismDefault">
            <summary>
            Max degree of parallelism default value
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.ProfileImportSettings.ErrorThresholdDefault">
            <summary>
            Error Threshold default value
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.ProfileImportSettings.ConfirmDialogWidthDefault">
            <summary>
            import comnfirmation dialog default width
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.ProfileImportSettings.ConfirmDialogHeightDefault">
            <summary>
            import comnfirmation dialog default height
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.ProfileImportSettings.UiOutputFrequency">
            <summary>
            import progress dialog output frequency
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownInventoryFieldNames">
            <summary>
            Known list of Commerce Server catalog field names.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnownInventoryFieldNames.AssociatedProductCatalogs">
            <summary>
            The name of the field in Commerce Server that stores the list of associated product catalogs to an inventory catalog
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.ContactNames">
            <summary>
            Known list of ContactNames in xDB.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.ContactNames.ContactCommerceInfoFacet">
            <summary>
            The name of the facet on a contact that contains some Commerce info
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.LanguageStrings">
            <summary>
            Constants used for installing languages
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.LanguageStrings.LanguageNode">
            <summary>
            the language node
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.LanguageStrings.LanguageConfigNode">
            <summary>
            the lang config node
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.LanguageStrings.LanguageIdAttribute">
            <summary>
            the od attribute
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.LanguageStrings.LanguageRegionAttribute">
            <summary>
            the region attribute
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.LanguageStrings.RegionalIsoCodeField">
            <summary>
            the regional iso code field
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.LanguageStrings.IsoField">
            <summary>
            the iso field
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.LanguageStrings.CodePageField">
            <summary>
            the code page field
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.LanguageStrings.CodePageAttribute">
            <summary>
            the code page attribute
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.LanguageStrings.EncodingField">
            <summary>
            the encoding field
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.LanguageStrings.EncodingAttribute">
            <summary>
            the encoding attribute
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.LanguageStrings.CharsetField">
            <summary>
            the charset field
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.LanguageStrings.CharsetAttribute">
            <summary>
            the charset attribute
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.LanguageStrings.DictionaryField">
            <summary>
            the dictionary field
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.LanguageStrings.DictionaryAttribute">
            <summary>
            the dictionary attribute
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.LanguageStrings.IconAttribute">
            <summary>
            the icon attribute
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.LanguageStrings.SitecoreLanguageCacheName">
            <summary>
            the sitecore langugae cache name
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnowWeaklyTypesProperties">
            <summary>
            Know weakly type properties.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnowWeaklyTypesProperties.EmailText">
            <summary>
            The email text property.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceConstants.KnowWeaklyTypesProperties.PartyType">
            <summary>
            The party type property.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.CommerceContextItemNotFoundException">
            <summary>
            Item Not Found Exception for Commerce Context in Sitecore.  
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.CommerceContextItemNotFoundException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.CommerceContextItemNotFoundException"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.CommerceContextItemNotFoundException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the CommerceContextItemNotFoundException class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.CommerceContextItemNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.CommerceContextItemNotFoundException"/> class.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.CommerceContextItemNotFoundException.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.CommerceContextItemNotFoundException"/> class.
            </summary>
            <param name="commerceContextType">Type of the commerce context.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.CommerceContextItemNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.CommerceContextItemNotFoundException"/> class.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.CommerceContextItemNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with information about the exception.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.ICommerceServerContextManager">
            <summary>
            ICommerceServerContextManager interface definition.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.ICommerceServerContextManager.IsCommerceServerInitialized">
            <summary>
            Gets a value indicating whether commerce server is initialized.
            </summary>
            <value>
            <c>true</c> if Commerce Server IS initialized; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.ICommerceServerContextManager.SiteName">
            <summary>
            Gets the name of the current commerce server site.
            </summary>
            <value>
            The name of the site.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.ICommerceServerContextManager.CatalogContext">
            <summary>
            Gets the Commerce Server catalog context.
            </summary>
            <value>
            The catalog context.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.ICommerceServerContextManager.ProfileContext">
            <summary>
            Gets the Commerce Server profile context.
            </summary>
            <value>
            The profile context.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.ICommerceServerContextManager.OrderContext">
            <summary>
            Gets the Commerce Server order context.
            </summary>
            <value>
            The order context.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.ICommerceServerContextManager.OrderManagementContext">
            <summary>
            Gets the order management context.
            </summary>
            <value>
            The order management context.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.ICommerceServerContextManager.Caches">
            <summary>
            Gets the cache collection from Commerce Server.
            </summary>
            <value>
            The cache collection.
            </value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.ICommerceServerContextManager.Pipelines">
            <summary>
            Gets the Commerce Server pipelines.
            </summary>
            <value>
            The pipelines.
            </value>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.ISitecoreDataProvider">
            <summary>
            Definition of the Sitecore data provider interface.
            Interface used to implement node specific data providers
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.ISitecoreDataProvider.GetParentID(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ItemDefinition,Sitecore.Data.DataProviders.CallContext,CommerceServer.Core.Catalog.ExternalIdInformation)">
            <summary>
            Gets the parent ID.
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="itemDefinition">The item definition.</param>
            <param name="context">The context.</param>
            <param name="information">The external id information.</param>
            <returns>Sitecore ID.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.ISitecoreDataProvider.GetChildIDs(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ItemDefinition,Sitecore.Data.DataProviders.CallContext)">
            <summary>
            Gets the item's child IDs.
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="itemDefinition">The item definition.</param>
            <param name="context">The context.</param>
            <returns>Sitecore IDList.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.ISitecoreDataProvider.GetItemFields(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ItemDefinition,Sitecore.Data.VersionUri,Sitecore.Data.DataProviders.CallContext,CommerceServer.Core.Catalog.ExternalIdInformation)">
            <summary>
            Gets the item's fields.
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="itemDefinition">The item definition.</param>
            <param name="versionUri">The version URI.</param>
            <param name="context">The context.</param>
            <param name="information">The external id information.</param>
            <returns>Sitecore FieldList.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.ISitecoreDataProvider.GetItemVersions(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ItemDefinition,Sitecore.Data.DataProviders.CallContext,CommerceServer.Core.Catalog.ExternalIdInformation)">
            <summary>
            Gets the item's versions.
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="itemDefinition">The item definition.</param>
            <param name="context">The context.</param>
            <param name="information">The external id information.</param>
            <returns>Sitecore VersionUriList.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.ISitecoreDataProvider.GetItemDefinition(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ID,Sitecore.Data.DataProviders.CallContext,CommerceServer.Core.Catalog.ExternalIdInformation)">
            <summary>
            Gets the item's definition.
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="itemId">The item id.</param>
            <param name="context">The context.</param>
            <param name="information">The external id information.</param>
            <returns>
            Sitecore ItemDefinition.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.ISitecoreDataProvider.SaveItem(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ItemDefinition,Sitecore.Data.Items.ItemChanges,Sitecore.Data.DataProviders.CallContext,CommerceServer.Core.Catalog.ExternalIdInformation)">
            <summary>
            Saves the item.
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="itemDefinition">The item definition.</param>
            <param name="changes">The changes.</param>
            <param name="context">The context.</param>
            <param name="information">The external id information.</param>
            <returns>
            True if Item is saved; false otherwise.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.ISitecoreDataProvider.CreateItem(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ID,System.String,Sitecore.Data.ID,Sitecore.Data.ItemDefinition,Sitecore.Data.DataProviders.CallContext)">
            <summary>
            Creates the item.
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="itemID">The item ID.</param>
            <param name="itemName">Name of the item.</param>
            <param name="templateID">The template ID.</param>
            <param name="parentItemDefinition">The parent item definition.</param>
            <param name="context">The context.</param>
            <returns>True if Item created; false otherwise.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.ISitecoreDataProvider.DeleteItem(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ItemDefinition,Sitecore.Data.DataProviders.CallContext,CommerceServer.Core.Catalog.ExternalIdInformation)">
            <summary>
            Deletes the item.
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="itemDefinition">The item definition.</param>
            <param name="context">The context.</param>
            <param name="information">The external id information.</param>
            <returns>True if Item deleted; false otherwise.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.ISitecoreDataProvider.CopyItem(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ItemDefinition,Sitecore.Data.ItemDefinition,System.String,Sitecore.Data.ID,Sitecore.Data.DataProviders.CallContext,CommerceServer.Core.Catalog.ExternalIdInformation)">
            <summary>
            Copies an item.
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="source">The source item definition.</param>
            <param name="destination">The destination item definition.</param>
            <param name="copyName">The name of the item copy.</param>
            <param name="copyID">The ID of the item copy.</param>
            <param name="context">The context.</param>
            <param name="information">The external ID information of the source item.</param>
            <returns>True if the item is copied; false otherwise.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.ISitecoreDataProvider.MoveItem(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ItemDefinition,Sitecore.Data.ItemDefinition,Sitecore.Data.DataProviders.CallContext,CommerceServer.Core.Catalog.ExternalIdInformation)">
            <summary>
            Moves an item
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="itemDefinition">The item definition.</param>
            <param name="destination">The destination item definition.</param>
            <param name="context">The context.</param>
            <param name="information">The external ID information.</param>
            <returns>True if the item is moved; false otherwise.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.ISitecoreDataProvider.AddVersion(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ItemDefinition,Sitecore.Data.VersionUri,Sitecore.Data.DataProviders.CallContext,CommerceServer.Core.Catalog.ExternalIdInformation)">
            <summary>
            Adds the version.
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="itemDefinition">The item definition.</param>
            <param name="baseVersion">The base version.</param>
            <param name="context">The context.</param>
            <param name="information">The external id information.</param>
            <returns>
            The version that was added.  -1 if not version was added.
            </returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.ISitecoreDataProvider.RemoveVersion(Sitecore.Data.DataProviders.DataProvider,Sitecore.Data.ItemDefinition,Sitecore.Data.VersionUri,Sitecore.Data.DataProviders.CallContext,CommerceServer.Core.Catalog.ExternalIdInformation)">
            <summary>
            Removes the version.
            </summary>
            <param name="dataProvider">The data provider.</param>
            <param name="itemDefinition">The item definition.</param>
            <param name="version">The version.</param>
            <param name="context">The context.</param>
            <param name="information">The external id information.</param>
            <returns>
            True if the version was removed, otherwise false.
            </returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Texts">
            <summary>
                Represents the texts in Sitecore.Commerce.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Texts.CreateCatalogDefinitionError">
            <summary>
                "An error has occurred when trying to create the following catalog definition: {0}"
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Texts.CreateCatalogError">
            <summary>
                "An error has occurred when trying to create the following catalog: {0}"
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Texts.CannotAddVersionIfLanguageExists">
            <summary>
                "Cannot add a version if the language already exists in the catalog.  Catalog:{0}, Language:{1}"
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Texts.CannotCreateProductInVirtualCatalog">
            <summary>
                "You are not allowed to create a product in a virtual catalog: {0}"
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Texts.CannotCreateSitecoreProfile">
            <summary>
                "Cannot create profile for Sitecore user {0}"
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Texts.CannotCreateSitecoreUser">
            <summary>
                "Cannot create user {0} in domain {1}"
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Texts.CannotDeleteProfile">
            <summary>
                "Commerce: Cannot delete profile with the name {0}"
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Texts.CannotGetCommerceProfileProperty">
            <summary>
                "Error trying to get Commmerce profile property: {0}"
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Texts.CannotModifyCommerceProfilePrimaryKey">
            <summary>
                "Commerce profile property {0} is a primary key and cannot be modified"
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Texts.CannotRebuildCatalogFullTextIndex">
            <summary>
                "Error tyring to rebuild the full text index on the catalog named {0}."
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Texts.CannotRefreshCache">
            <summary>
                "Cannot refresh Commerce {0} cache"
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Texts.CannotSetCommerceProfileProperty">
            <summary>
                "Error trying to set Commmerce profile property: {0} with value: {1}"
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Texts.CategoryAssociationDataInvalid">
            <summary>
                "The provided category association data is invalid."
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Texts.CommerceServerContextNotFound">
            <summary>
                "Commerce Server context item could not be found and is null: {0}"
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Texts.CommerceServerNotInitialized">
            <summary>
                "Commerce Server is not Initialized.  Ensure you have configured a Commerce Server site in the web.config."
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Texts.ConfigurationProviderNotFound">
            <summary>
                "Commerce Server type not found: {0}"
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Texts.ConfirmSaveAsDefaultQuery">
            <summary>
                "Do you want to save the search as the default query?"
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Texts.DeleteDataTemplates">
            <summary>
                "Delete Data Templates"
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Texts.DeleteDataTemplatesConfirm">
            <summary>
                "Delete Data Templates"
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Texts.DeleteDataTemplatesError">
            <summary>
                "Unable to delete Commerce catalog data templates because the '{0}' folder does not exist."
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Texts.DeleteDataTemplatesJob">
            <summary>
                "Delete Data Templates Job"
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Texts.DeleteDataTemplatesProcessing">
            <summary>
                "Processing template {0}"
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Texts.DisplayName">
            <summary>
                "Display Name"
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Texts.ErrorRefreshingProfileCache">
            <summary>
                "An error occured trying to refresh the profile cache for user {0}"
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Texts.ErrorRetrievingCacheManager">
            <summary>
                "Commerce Server:  Error retrieving the Cache Manager.  Message: {0}"
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Texts.ImportProfiles">
            <summary>
                "Importing Commerce Profiles"
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Texts.InvalidBooleanValueSpecified">
            <summary>
                "Commerce Server: Invalid boolean value specified in configuration. Element:{0}, Attribute:{1} Value: {2}"
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Texts.InvalidPageIndex">
            <summary>
                "Page index must 0 or greater."
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Texts.InvalidPageSize">
            <summary>
                "Page size must be greater than 0."
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Texts.InvalidTypeValueSpecified">
            <summary>
                "Commerce Server: An invalid type was specified.  Element:{0}, Attribute:{1}, Value:{2}"
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Texts.Name">
            <summary>
                The text for "Name"
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Texts.PagingValueOutOfRange">
            <summary>
                "Paging start value of {0} out of range for total records of {1}"
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Texts.ProfileCacheRefreshed">
            <summary>
                "The Commerce profile cache for the user {0} has been refreshed."
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Texts.ProfileImportCannotGetProfiles">
            <summary>
                "Error trying to get profiles"
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Texts.ProfileImportCannotWriteToOutFile">
            <summary>
                "Cannot create the file {0}.  Check the permissions for the file location."
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Texts.ProfileImportComplete">
            <summary>
                "Import is complete.  You must enable the index on the externalID column within the UserObject DB for the profiles
                to work with the newly created Sitecore users."
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Texts.ProfileImportCreateUsersComplete">
            <summary>
                "Processing of Create users is complete"
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Texts.ProfileImportCreateUsersStarting">
            <summary>
                "Starting long process to create sitecore users based on commerce profiles"
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Texts.ProfileImportCreatingSitecoreUsers">
            <summary>
                "Creating Users - Processed {0} of {1}"
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Texts.ProfileImportErrorsOnCreateUsers">
            <summary>
                "Errors occured creating users, check error log for full details."
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Texts.ProfileImportNoProfilesFound">
            <summary>
                "No profiles found to import"
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Texts.ProfileImportStartConfirm">
            <summary>
                "Are you sure you would like to start the profile import process?  This could take a long time."
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Texts.ProfileImportResultsSummary">
            <summary>
                "Summary of Profile Import:    Number of profiles found to import:{0}     Number of Sitecore users created: {1}
                Number of errors encountered: {2}"
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Texts.ProfileProviderError">
            <summary>
                "An error has occurred in the Commerce Server Profile Provider."
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Texts.RefreshedCommerceCache">
            <summary>
                "The Commerce caches have been refreshed"
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Texts.RefreshingCommerceCache">
            <summary>
                "Refreshing the Commerce caches"
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Texts.RelationshipDataInvalid">
            <summary>
                "The provided relationship data is invalid."
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Texts.RelationshipNotFound">
            <summary>
                "A catalog relationship with ID '{0}' was not found."
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Texts.RelationshipAlreadyExists">
            <summary>
                "The specified relationship already exists."
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Texts.ReciprocalRelationshipAlreadyExists">
            <summary>
                "The secondary relationship already exists.";
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Texts.TypeNotSpecified">
            <summary>
                "Commerce Server:Type not specified.  Element:{0}, Attribute:{1}"
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Texts.UpdateDataTemplates">
            <summary>
                "Update Data Templates"
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Texts.UpdateDataTemplatesBuildingFields">
            <summary>
                "Building built in fields."
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Texts.UpdateDataTemplatesBuildingValidators">
            <summary>
                "Building validators."
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Texts.UpdateDataTemplatesCreatingField">
            <summary>
                "- Creating field for {0}.{1}."
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Texts.UpdateDataTemplatesCreatingVariantTemplate">
            <summary>
                "Creating variant template for {0}."
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Texts.UpdateDataTemplatesDeleting">
            <summary>
                "Deleting generated catalog templates."
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Texts.UpdateDataTemplatesError">
            <summary>
                "Unable to generate Commerce catalog data templates because the '{0}' folder does not exist."
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Texts.UpdateDataTemplatesJob">
            <summary>
                "Update Data Templates Job"
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Texts.UpdateDataTemplatesProcessing">
            <summary>
                "Processing template {0}"
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Texts.UpdateDataTemplatesUpdatingCatalogTemplate">
            <summary>
                "Adding custom properties to catalog template."
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Texts.UpdateDataTemplatesUpdatingProductTemplate">
            <summary>
                "Adding common properties to product template."
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Texts.UpdateDataTemplatesUpdatingVirtualCatalogTemplate">
            <summary>
                "Adding custom properties to virtual catalog template."
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Texts.WaitingForStagingProjectToComplete">
            <summary>
                "Waiting for Commerce staging project {0} to complete..."
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Texts.StagingProjectsProcessed">
            <summary>
                "Staging projects processed: {0}."
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Texts.MustPickOneStagingProject">
            <summary>
                "You must pick at least one staging project to start."
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Texts.StagingCommerceData">
            <summary>
                "Staging Commerce Data..."
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Texts.StagingUnableToConnectError">
            <summary>
                "Error:  Unable to connect to the Commerce Server Staging replication server.  Please make sure that the user
                identity of the application poool hosting the Sitecore site has COM launch and activation permissions on this
                server using the Component Services application.  See the sitecore log file for more information."
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Texts.StagingUnexpectedError">
            <summary>
                "Error:  An unexpected error was encountered while connecting to the Commerce Server staging system.  See the
                sitecore log file for more information."
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Texts.StagingProjectsDidNotComplete">
            <summary>
                "Warning:  The following staging projects did not complete successfully: {0}"
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Texts.CannotFindUserError">
            <summary>
                "Error trying to find user {0} within Commerce Server: {1}"
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Texts.UserEmailInvalid">
            <summary>
                "The user email should not be null"
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Texts.CatalogGroupAlreadyExists">
            <summary>
                "The catalog group you specified already exists."
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Texts.PostStepExecutionFailed">
            <summary>
                "Execution of post step failed: Class '{0}' wasn't found."
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Texts.LocalizationFolderNotFound">
            <summary>
                "Cannot install the language files. The path '{0}' was not found."
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Texts.TableHeaderRank">
            <summary>
            Table header for the Rank (order / sequence) of a catalog relationship.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Texts.TableHeaderRelationshipName">
            <summary>
            Table header for the name of a catalog relationship.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Texts.TableHeaderTargetCatalogName">
            <summary>
            Table header for the target catalog for a catalog relationship.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Texts.TableHeaderTargetProduct">
            <summary>
            Table header for the target product for a catalog relationship.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Texts.TableHeaderTargetCategory">
            <summary>
            Table header for the target category for a catalog relationship.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Texts.TableHeaderRelationshipDescription">
            <summary>
            Table header for the description of a catalog relationship.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Texts.InstallingLocalizedContent">
            <summary>
            Displayed during the Poststep installation
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Texts.LocalizationPostStepComplete">
            <summary>
            Displayed when the poststep installation completes
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Texts.LicenseError">
            <summary>
            displayed if the user does not have the proper license
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Texts.LicenseErrorDetails">
            <summary>
            details for the license error
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Texts.RequestedProductIsNotAProductFamily">
            <summary>
            The requested variant information cannot be retrieved because the product '{0}' is not a product family.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Texts.CommerceCatalogField">
            <summary>
            Commerce Catalog Field
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Texts.ErrorMessageRequired">
            <summary>
            Field '{0}' must contain a value.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Texts.ErrorMessageDataTypeInteger">
            <summary>
            The value of the field '{0}' must be an integer value.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Texts.ErrorMessageDataTypeNumber">
            <summary>
            The value of the field '{0}' must be of a number.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Texts.ErrorMessageDataTypeBoolean">
            <summary>
            The value of the field '{0}' must be either 1 or 0.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Texts.ErrorMessageDataTypeDateTime">
            <summary>
            The value of the field '{0}' must be a date / time value.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Texts.ErrorMessageDataTypeUniqueIdentifier">
            <summary>
            The value of the field '{0}' must be a unique identifier (GUID).
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Texts.ErrorMessageDataTypeParseError">
            <summary>
            The value of the field '{0}' could not be parsed.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Texts.ErrorMessageEnumeration">
            <summary>
            The value of the field '{0}' must be one of the following values: {1}.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Texts.ErrorMessageMinimumValue">
            <summary>
            The value of the field '{0}' cannot be less than {1}.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Texts.ErrorMessageMaximumValue">
            <summary>
            The value of the field '{0}' cannot be more than {1}.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Texts.ErrorMessageRangeValue">
            <summary>
            The value of the field '{0}' must be between {1} and {2}.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Texts.ErrorMessageMinimumLength">
            <summary>
            The value of the field '{0}' cannot be less than {1} characters long.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Texts.ErrorMessageMaximumLength">
            <summary>
            The value of the field '{0}' cannot be more than {1} characters long.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.Texts.ErrorMessageRangeLength">
            <summary>
            The value of the field '{0}' must be between {1} and {2} characters long.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.ToSitecoreFieldValue">
            <summary>
            Converts a Sitecore field to a string with the correct formatting. 
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.ToSitecoreFieldValue.Convert(System.Object,Sitecore.Data.Items.TemplateFieldItem)">
            <summary>
            Converts the specified source to a sitecore value.
            </summary>
            <param name="source">The source.</param>
            <param name="field">The field.</param>
            <returns>Returns the converted value.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.ToSitecoreFieldValue.Convert(System.Object,System.String)">
            <summary>
            Converts the specified source to a string with the correct formatting.
            </summary>
            <param name="value">The Commerce item value.</param>
            <param name="culture">The desired language / culture of the formatted results.</param>
            <returns>String correctly formatted from the source.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Utilities.AccessRightsPropagation">
            <summary>
            Defines the AccessRight, PropagationType and AccessPermission for a security role.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.Utilities.AccessRightsPropagation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Utilities.AccessRightsPropagation" /> class.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Utilities.AccessRightsPropagation.AccessRight">
            <summary>
            Gets or sets the AccessRight enumeration for this instance.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Utilities.AccessRightsPropagation.PropagationType">
            <summary>
            Gets or sets the PropagationType for this instance.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Utilities.AccessRightsPropagation.AccessPermission">
            <summary>
            Gets or sets the AccessPermission for this instance.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.Utilities.RoleSecurityAccess">
            <summary>
            Represents security role access rights for an item.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Utilities.RoleSecurityAccess.RoleName">
            <summary>
            Gets or sets the role name.
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.Utilities.RoleSecurityAccess.AccessRightsCollection">
            <summary>
            Gets or sets the collection of AccessRightsPropagations for the RoleName.
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.CommerceUtility">
            <summary>
            A utility class used in the Sitecore Commerce Server integration.  
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceUtility.LicenseIntegratedName">
            <summary>
            The name of the Integrated license key
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.CommerceUtility.LicenseStandaloneName">
            <summary>
            The name of the Standalone license key
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.CommerceUtility.IsCommerceServerInitialized">
            <summary>
            Gets a value indicating whether Commerce Server is initialized.
            </summary>
            <value>
            <c>true</c> if Commerce Server is initialized; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.CommerceUtility.EnterEditScope(Sitecore.Data.Items.Item)">
            <summary>
            Creates a disposable object that will begin editing an <see cref="T:Sitecore.Data.Items.Item"/> when created, and end editing when disposed.
            </summary>
            <param name="item">The item to edit.</param>
            <returns>A disposable object that will begin editing an <see cref="T:Sitecore.Data.Items.Item"/> when created, and end editing when disposed.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.CommerceUtility.EnterEditScope(Sitecore.Data.Items.CustomItemBase)">
            <summary>
            Creates a disposable object that will begin editing an <see cref="T:Sitecore.Data.Items.CustomItemBase"/> when created, and end editing when disposed.
            </summary>
            <param name="item">The item to edit.</param>
            <returns>A disposable object that will begin editing an <see cref="T:Sitecore.Data.Items.CustomItemBase"/> when created, and end editing when disposed.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.CommerceUtility.DeserializeExternalSettings(System.String)">
            <summary>
            Deserializes Sitecore external settings to a list of <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Configuration.SitecoreSettingsMapping"/> objects.
            </summary>
            <param name="externalSettings">The external settings string that will be deserialized.</param>
            <returns>A list of <see cref="T:Sitecore.Commerce.Connect.CommerceServer.Configuration.SitecoreSettingsMapping"/> that contain the deserialized external settings.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.CommerceUtility.DeserializeExternalSettingsToFieldList(System.String,Sitecore.Data.FieldList,System.String)">
            <summary>
            Deserializes Sitecore external settings into a <see cref="T:Sitecore.Data.FieldList"/>.
            </summary>
            <param name="externalSettings">The external settings string that will be deserialized.</param>
            <param name="fieldList">The <see cref="T:Sitecore.Data.FieldList"/> that will be populated with the deserialized external settings.</param>
            <param name="language">the current language of the CS item we are dealing with - Invariant is empty string</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.CommerceUtility.SerializeExternalSettings(System.Collections.Generic.List{Sitecore.Commerce.Connect.CommerceServer.Configuration.SitecoreSettingsMapping},System.Collections.Generic.List{Sitecore.Commerce.Connect.CommerceServer.Configuration.SitecoreSettingsMapping},System.Collections.Generic.List{Sitecore.Commerce.Connect.CommerceServer.Configuration.SitecoreSettingsMapping})">
            <summary>
            Serializes a list of sitecore external settings.
            </summary>
            <param name="newExternalSettingsList">The list of external settings to serialize.</param>
            <param name="existingExternalSettingsList">The list of external settings that already exist for the item being saved.</param>
            <param name="fieldsToRemoveFromExternalSettings">The list of field ids to remove from external settings</param>
            <returns>A serialized list of external settings.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.CommerceUtility.EnsureFolder(System.String,Sitecore.Data.Database)">
            <summary>
            Ensures the a Sitecore folder exists.
            </summary>
            <param name="folderPath">The path to the folder.</param>
            <param name="database">The database.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.CommerceUtility.EnterReadScope(System.Threading.ReaderWriterLockSlim)">
            <summary>
            Creates a scope that allows read operations.
            </summary>
            <param name="readWriteLock">The lock.</param>
            <returns>A scope that allows read operations.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.CommerceUtility.EnterUpgradableReadScope(System.Threading.ReaderWriterLockSlim)">
            <summary>
            Creates a scope that allows read operations, upgradable to write operations.
            </summary>
            <param name="readWriteLock">The lock.</param>
            <returns>A scope that allows read operations, upgradable to write operations.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.CommerceUtility.EnterWriteScope(System.Threading.ReaderWriterLockSlim)">
            <summary>
            Creates a scope that allows write operations.
            </summary>
            <param name="readWriteLock">The lock.</param>
            <returns>A scope that allows write operations.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.CommerceUtility.RemoveItemFromSitecoreCaches(Sitecore.Data.ID,System.String)">
            <summary>
            Removes the item from sitecore caches.
            </summary>
            <param name="itemID">the item ID</param>
            <param name="databaseName">The name of the database containing the item.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.CommerceUtility.ConvertLanguageToCulture(System.String)">
            <summary>
            Converts the specified language to the culture it has been mapped to, if a mapping exists.
            Otherwise, the specified language is returned.
            </summary>
            <param name="language">The language.</param>
            <returns>The culture the specified language is mapped to, if a mapping exists. Otherwise, the specified language.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.CommerceUtility.ConvertCultureToLanguage(System.String)">
            <summary>
            Converts the specified culture to its default language, if a mapping exists. Otherwise, the specified culture is returned.
            </summary>
            <param name="culture">The culture.</param>
            <returns>The language, if a mapping exists. Otherwise, the specified culture.</returns>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.IntegrationPostStep">
            <summary>
            A class used for post step work after installing packages.  
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.IntegrationPostStep.Run(Sitecore.Install.Framework.ITaskOutput,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Runs the specified output.
            </summary>
            <param name="output">the output</param>
            <param name="metadata">the metadata</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.IntegrationPostStep.CreateRoles">
            <summary>
            Create the required Commerce Server Roles
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.IntegrationPostStep.UpdateSecurity">
            <summary>
            Updates the security on the /sitecore/templates/System/Templates/Sections/Appearance/Appearance/__Display name item
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.IntegrationPostStep.UpdateCommerceUsersDomain">
            <summary>
            Updates the CommerceUsers entry in the domains.config file with the ProfileItemId guid
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.InstallPostStep">
            <summary>
            A class used for post step work after installing packages.  
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.InstallPostStep.TdsAction">
            <summary>
            The Tds post step action
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.InstallPostStep.CoreDatabaseName">
            <summary>
            Core database name.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.InstallPostStep.TempFolderName">
            <summary>
            the temp folder name located in the Sitecore website folder
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.InstallPostStep.DefaultLocalizationFolder">
            <summary>
            The default localized content folder which will be found in the website\Temp folder
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.InstallPostStep._databaseNames">
            <summary>
            Database names.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.InstallPostStep._localizationInstaller">
            <summary>
            Localization installer instance.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.InstallPostStep._siteRoot">
            <summary>
            Site root.
            </summary>
        </member>
        <member name="F:Sitecore.Commerce.Connect.CommerceServer.InstallPostStep._output">
            <summary>
            The output of the task
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.InstallPostStep.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.InstallPostStep" /> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.InstallPostStep.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.InstallPostStep" /> class.
            </summary>
            <param name="defaultLocalizationFolder">the location to load the translation files from within the website temp folder</param>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.InstallPostStep.Installer">
            <summary>
            Gets or sets the localization installer.
            </summary>
            <value>The installer</value>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.InstallPostStep.LocalizationFolder">
            <summary>
            Gets the localization folder name
            </summary>
        </member>
        <member name="P:Sitecore.Commerce.Connect.CommerceServer.InstallPostStep.SiteRoot">
            <summary>
            Gets or sets the site root.
            </summary>
            <value>
            The site root.
            </value>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.InstallPostStep.GetSitecoreTempPath">
            <summary>
            Gets the Sitecore Temp path - something like [SitecoreInstanceName]\Website\Temp
            </summary>
            <returns>The temp path</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.InstallPostStep.Run(Sitecore.Install.Framework.ITaskOutput,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Runs the specified output.
            </summary>
            <param name="output">The output.</param>
            <param name="metadata">The meta data.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.InstallPostStep.OutputMessage(System.String)">
            <summary>
            Output a message to the UI and timestamps the message
            </summary>
            <param name="message">the message</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.InstallPostStep.RunTdsPostStep(Sitecore.Install.Framework.ITaskOutput,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Do the TDS post Step work
            </summary>
            <param name="output">the output.</param>
            <param name="metadata">the meta data.</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.InstallPostStep.RunLocalizationStep(Sitecore.Install.Framework.ITaskOutput,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Runs the localization post step process.
            </summary>
            <param name="output">The output</param>
            <param name="metadata">The meta data</param>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.InstallPostStep.InstallLanguage(System.String,System.String)">
            <summary>
            Installs a langauge based on the localization file and database
            </summary>
            <param name="databaseName">database name</param>
            <param name="path">localization file path</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.LanguageInstaller">
            <summary>
            A class used for Language installations  
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.LanguageInstaller.InstallLanguage(Sitecore.Data.Database,System.String)">
            <summary>
            Installs a language to a Sitecore database
            </summary>
            <param name="db">the database</param>
            <param name="langCode">language code, for example, de-DE, da-DK, en-US, etc</param>
            <returns>true if the language was installed</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.LanguageInstaller.ClearSitecoreLanguageCache">
            <summary>
            Clears the Sitecore Language Cache
            </summary>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.ServicesDisabler">
            <summary>
            Pauses services and disables checks to improve performance of catalog template generation.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.ServicesDisabler.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Commerce.Connect.CommerceServer.ServicesDisabler"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.ServicesDisabler.Dispose">
            <summary>
            Disposes resources managed by this object / resumes services and enables checks.
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.ServicesDisabler.Dispose(System.Boolean)">
            <summary>
            Disposes resources managed  by this object.
            </summary>
            <param name="disposing">If true, managed resources should be disposed; otherwise only unmanaged resources should be disposed.</param>
        </member>
        <member name="T:Sitecore.Commerce.Connect.CommerceServer.XmlUtility">
            <summary>
            Utility for working with XML in the Commerce Server Sitecore integration.  
            </summary>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.XmlUtility.GetAttributeStringValue(System.Xml.XmlNode,System.String)">
            <summary>
            Gets the attribute string value.
            </summary>
            <param name="node">The node.</param>
            <param name="attributeName">Name of the attribute.</param>
            <returns>String value of attribute on XML Node.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.XmlUtility.GetAttributeBooleanValue(System.Xml.XmlNode,System.String,System.String,System.Boolean)">
            <summary>
            Gets the attribute boolean value.
            </summary>
            <param name="node">The node.</param>
            <param name="elementName">Name of the element.</param>
            <param name="attributeName">Name of the attribute.</param>
            <param name="defaultValue">if set to <c>true</c> [default value].</param>
            <returns>Boolean value of a given attribute on an XML node.</returns>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.XmlUtility.GetAttributeTypeValue(System.Xml.XmlNode,System.String,System.String)">
            <summary>
            Gets the attribute type value.
            </summary>
            <param name="node">The node.</param>
            <param name="elementName">Name of the element.</param>
            <param name="attributeName">Name of the attribute.</param>
            <returns>Type based on the attribute name.</returns>
            <exception cref="T:Sitecore.Commerce.Connect.CommerceServer.Catalog.ProviderImplementationNotFoundException">
            Returned if Provider has not been implemented.  
            </exception>
        </member>
        <member name="M:Sitecore.Commerce.Connect.CommerceServer.XmlUtility.GetAttributeTimeSpanValue(System.Xml.XmlNode,System.String,System.Nullable{System.TimeSpan})">
            <summary>
            Gets the attribute TimeSpan value.
            </summary>
            <param name="node">The node.</param>
            <param name="attributeName">Name of the attribute.</param>
            <param name="defaultValue">The default value to return when the attribute does not exist.</param>
            <returns>TimeSpan based on the attribute value.</returns>
        </member>
    </members>
</doc>
